if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  if (goog.array.isEmpty(this.front_)) {
    this.front_ = this.back_;
    this.front_.reverse();
    this.back_ = [];
  }
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.back_.push(element);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.lastIndexOf(this.front_, obj);
  if (index < 0) {
    return goog.array.remove(this.back_, obj);
  }
  goog.array.removeAt(this.front_, index);
  return true;
};
goog.structs.Queue.prototype.getValues = function() {
  var res = [];
  for (var i = this.front_.length - 1;i >= 0;--i) {
    res.push(this.front_[i]);
  }
  var len = this.back_.length;
  for (var i = 0;i < len;++i) {
    res.push(this.back_[i]);
  }
  return res;
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue());
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.delayTimeout_ = undefined;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.structs.PriorityPool.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.structs.PriorityPool.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers;
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    headers.forEach(function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return!xhr.isDisposed() && !xhr.isActive();
};
goog.provide("goog.net.XhrManager");
goog.provide("goog.net.XhrManager.Event");
goog.provide("goog.net.XhrManager.Request");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIoPool");
goog.require("goog.structs.Map");
goog.net.XhrManager = function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval) {
  goog.net.XhrManager.base(this, "constructor");
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.timeoutInterval_ = goog.isDef(opt_timeoutInterval) ? Math.max(0, opt_timeoutInterval) : 0;
  this.xhrPool_ = new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount);
  this.requests_ = new goog.structs.Map;
  this.eventHandler_ = new goog.events.EventHandler(this);
};
goog.inherits(goog.net.XhrManager, goog.events.EventTarget);
goog.net.XhrManager.ERROR_ID_IN_USE_ = "[goog.net.XhrManager] ID in use";
goog.net.XhrManager.XHR_EVENT_TYPES_ = [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT];
goog.net.XhrManager.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrManager.prototype.getOutstandingCount = function() {
  return this.requests_.getCount();
};
goog.net.XhrManager.prototype.getOutstandingRequestIds = function() {
  return this.requests_.getKeys();
};
goog.net.XhrManager.prototype.send = function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries, opt_responseType) {
  var requests = this.requests_;
  if (requests.get(id)) {
    throw Error(goog.net.XhrManager.ERROR_ID_IN_USE_);
  }
  var request = new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, goog.isDef(opt_maxRetries) ? opt_maxRetries : this.maxRetries_, opt_responseType);
  this.requests_.set(id, request);
  var callback = goog.bind(this.handleAvailableXhr_, this, id);
  this.xhrPool_.getObject(callback, opt_priority);
  return request;
};
goog.net.XhrManager.prototype.abort = function(id, opt_force) {
  var request = this.requests_.get(id);
  if (request) {
    var xhrIo = request.xhrIo;
    request.setAborted(true);
    if (opt_force) {
      if (xhrIo) {
        this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
        goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {
          this.xhrPool_.releaseObject(xhrIo);
        }, false, this);
      }
      this.requests_.remove(id);
    }
    if (xhrIo) {
      xhrIo.abort();
    }
  }
};
goog.net.XhrManager.prototype.handleAvailableXhr_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && !request.xhrIo) {
    this.addXhrListener_(xhrIo, request.getXhrEventCallback());
    xhrIo.setTimeoutInterval(this.timeoutInterval_);
    xhrIo.setResponseType(request.getResponseType());
    request.xhrIo = xhrIo;
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));
    this.retry_(id, xhrIo);
    if (request.getAborted()) {
      xhrIo.abort();
    }
  } else {
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleEvent_ = function(id, e) {
  var xhrIo = (e.target);
  switch(e.type) {
    case goog.net.EventType.READY:
      this.retry_(id, xhrIo);
      break;
    case goog.net.EventType.COMPLETE:
      return this.handleComplete_(id, xhrIo, e);
    case goog.net.EventType.SUCCESS:
      this.handleSuccess_(id, xhrIo);
      break;
    case goog.net.EventType.TIMEOUT:
    ;
    case goog.net.EventType.ERROR:
      this.handleError_(id, xhrIo);
      break;
    case goog.net.EventType.ABORT:
      this.handleAbort_(id, xhrIo);
      break;
  }
  return null;
};
goog.net.XhrManager.prototype.retry_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && !request.getCompleted() && !request.hasReachedMaxRetries()) {
    request.increaseAttemptCount();
    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders());
  } else {
    if (request) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      this.requests_.remove(id);
    }
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleComplete_ = function(id, xhrIo, e) {
  var request = this.requests_.get(id);
  if (xhrIo.getLastErrorCode() == goog.net.ErrorCode.ABORT || xhrIo.isSuccess() || request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));
    if (request) {
      request.setCompleted(true);
      if (request.getCompleteCallback()) {
        return request.getCompleteCallback().call(xhrIo, e);
      }
    }
  }
  return null;
};
goog.net.XhrManager.prototype.handleAbort_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleSuccess_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleError_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo));
  }
};
goog.net.XhrManager.prototype.removeXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.unlisten(xhrIo, types, func);
};
goog.net.XhrManager.prototype.addXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.listen(xhrIo, types, func);
};
goog.net.XhrManager.prototype.disposeInternal = function() {
  goog.net.XhrManager.superClass_.disposeInternal.call(this);
  this.xhrPool_.dispose();
  this.xhrPool_ = null;
  this.eventHandler_.dispose();
  this.eventHandler_ = null;
  this.requests_.clear();
  this.requests_ = null;
};
goog.net.XhrManager.Event = function(type, target, id, xhrIo) {
  goog.events.Event.call(this, type, target);
  this.id = id;
  this.xhrIo = xhrIo;
};
goog.inherits(goog.net.XhrManager.Event, goog.events.Event);
goog.net.XhrManager.Request = function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries, opt_responseType) {
  this.url_ = url;
  this.method_ = opt_method || "GET";
  this.content_ = opt_content;
  this.headers_ = opt_headers || null;
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.attemptCount_ = 0;
  this.completed_ = false;
  this.aborted_ = false;
  this.xhrEventCallback_ = xhrEventCallback;
  this.completeCallback_ = opt_callback;
  this.responseType_ = opt_responseType || goog.net.XhrIo.ResponseType.DEFAULT;
  this.xhrIo = null;
};
goog.net.XhrManager.Request.prototype.getUrl = function() {
  return this.url_;
};
goog.net.XhrManager.Request.prototype.getMethod = function() {
  return this.method_;
};
goog.net.XhrManager.Request.prototype.getContent = function() {
  return this.content_;
};
goog.net.XhrManager.Request.prototype.getHeaders = function() {
  return this.headers_;
};
goog.net.XhrManager.Request.prototype.getMaxRetries = function() {
  return this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.getAttemptCount = function() {
  return this.attemptCount_;
};
goog.net.XhrManager.Request.prototype.increaseAttemptCount = function() {
  this.attemptCount_++;
};
goog.net.XhrManager.Request.prototype.hasReachedMaxRetries = function() {
  return this.attemptCount_ > this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.setCompleted = function(complete) {
  this.completed_ = complete;
};
goog.net.XhrManager.Request.prototype.getCompleted = function() {
  return this.completed_;
};
goog.net.XhrManager.Request.prototype.setAborted = function(aborted) {
  this.aborted_ = aborted;
};
goog.net.XhrManager.Request.prototype.getAborted = function() {
  return this.aborted_;
};
goog.net.XhrManager.Request.prototype.getXhrEventCallback = function() {
  return this.xhrEventCallback_;
};
goog.net.XhrManager.Request.prototype.getCompleteCallback = function() {
  return this.completeCallback_;
};
goog.net.XhrManager.Request.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2740";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__4943__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__4942 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__4942) : cljs.core.into_array.call(null, G__4942);
      }());
    };
    var G__4943 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__4944__i = 0, G__4944__a = new Array(arguments.length - 0);
        while (G__4944__i < G__4944__a.length) {
          G__4944__a[G__4944__i] = arguments[G__4944__i + 0];
          ++G__4944__i;
        }
        args = new cljs.core.IndexedSeq(G__4944__a, 0);
      }
      return G__4943__delegate.call(this, args);
    };
    G__4943.cljs$lang$maxFixedArity = 0;
    G__4943.cljs$lang$applyTo = function(arglist__4945) {
      var args = cljs.core.seq(arglist__4945);
      return G__4943__delegate(args);
    };
    G__4943.cljs$core$IFn$_invoke$arity$variadic = G__4943__delegate;
    return G__4943;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__4947 = x;
  return goog.isString(G__4947);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__4949 = x__$1;
    return goog.typeOf(G__4949);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3215__auto__ = ty;
    if (cljs.core.truth_(and__3215__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3215__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__4951 = obj;
    return goog.typeOf(G__4951);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__4953 = Symbol;
  return goog.typeOf(G__4953);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4114__auto___4955 = len;
  var i_4956 = 0;
  while (true) {
    if (i_4956 < n__4114__auto___4955) {
      new_arr[i_4956] = arr[i_4956];
      var G__4957 = i_4956 + 1;
      i_4956 = G__4957;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__4958 = i + 1;
      i = G__4958;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__4967__delegate = function(array, i, idxs) {
      var G__4964 = aget;
      var G__4965 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__4966 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__4964, G__4965, G__4966) : cljs.core.apply.call(null, G__4964, G__4965, G__4966);
    };
    var G__4967 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__4968__i = 0, G__4968__a = new Array(arguments.length - 2);
        while (G__4968__i < G__4968__a.length) {
          G__4968__a[G__4968__i] = arguments[G__4968__i + 2];
          ++G__4968__i;
        }
        idxs = new cljs.core.IndexedSeq(G__4968__a, 0);
      }
      return G__4967__delegate.call(this, array, i, idxs);
    };
    G__4967.cljs$lang$maxFixedArity = 2;
    G__4967.cljs$lang$applyTo = function(arglist__4969) {
      var array = cljs.core.first(arglist__4969);
      arglist__4969 = cljs.core.next(arglist__4969);
      var i = cljs.core.first(arglist__4969);
      var idxs = cljs.core.rest(arglist__4969);
      return G__4967__delegate(array, i, idxs);
    };
    G__4967.cljs$core$IFn$_invoke$arity$variadic = G__4967__delegate;
    return G__4967;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__4970 = null;
        if (arguments.length > 2) {
          var G__4971__i = 0, G__4971__a = new Array(arguments.length - 2);
          while (G__4971__i < G__4971__a.length) {
            G__4971__a[G__4971__i] = arguments[G__4971__i + 2];
            ++G__4971__i;
          }
          G__4970 = new cljs.core.IndexedSeq(G__4971__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__4970);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__4980__delegate = function(array, idx, idx2, idxv) {
      var G__4976 = aset;
      var G__4977 = array[idx];
      var G__4978 = idx2;
      var G__4979 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__4976, G__4977, G__4978, G__4979) : cljs.core.apply.call(null, G__4976, G__4977, G__4978, G__4979);
    };
    var G__4980 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__4981__i = 0, G__4981__a = new Array(arguments.length - 3);
        while (G__4981__i < G__4981__a.length) {
          G__4981__a[G__4981__i] = arguments[G__4981__i + 3];
          ++G__4981__i;
        }
        idxv = new cljs.core.IndexedSeq(G__4981__a, 0);
      }
      return G__4980__delegate.call(this, array, idx, idx2, idxv);
    };
    G__4980.cljs$lang$maxFixedArity = 3;
    G__4980.cljs$lang$applyTo = function(arglist__4982) {
      var array = cljs.core.first(arglist__4982);
      arglist__4982 = cljs.core.next(arglist__4982);
      var idx = cljs.core.first(arglist__4982);
      arglist__4982 = cljs.core.next(arglist__4982);
      var idx2 = cljs.core.first(arglist__4982);
      var idxv = cljs.core.rest(arglist__4982);
      return G__4980__delegate(array, idx, idx2, idxv);
    };
    G__4980.cljs$core$IFn$_invoke$arity$variadic = G__4980__delegate;
    return G__4980;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__4983 = null;
        if (arguments.length > 3) {
          var G__4984__i = 0, G__4984__a = new Array(arguments.length - 3);
          while (G__4984__i < G__4984__a.length) {
            G__4984__a[G__4984__i] = arguments[G__4984__i + 3];
            ++G__4984__i;
          }
          G__4983 = new cljs.core.IndexedSeq(G__4984__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__4983);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__4990 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__4991 = [];
    var G__4992 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__4990, G__4991, G__4992) : cljs.core.reduce.call(null, G__4990, G__4991, G__4992);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__4993__i = 0, G__4993__a = new Array(arguments.length - 2);
      while (G__4993__i < G__4993__a.length) {
        G__4993__a[G__4993__i] = arguments[G__4993__i + 2];
        ++G__4993__i;
      }
      args = new cljs.core.IndexedSeq(G__4993__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__4994) {
    var obj = cljs.core.first(arglist__4994);
    arglist__4994 = cljs.core.next(arglist__4994);
    var s = cljs.core.first(arglist__4994);
    var args = cljs.core.rest(arglist__4994);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj4996 = {};
  return obj4996;
}();
cljs.core.IFn = function() {
  var obj4998 = {};
  return obj4998;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5044 = x__3871__auto__;
          return goog.typeOf(G__5044);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5046 = x__3871__auto__;
          return goog.typeOf(G__5046);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5048 = x__3871__auto__;
          return goog.typeOf(G__5048);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5050 = x__3871__auto__;
          return goog.typeOf(G__5050);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5052 = x__3871__auto__;
          return goog.typeOf(G__5052);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5054 = x__3871__auto__;
          return goog.typeOf(G__5054);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5056 = x__3871__auto__;
          return goog.typeOf(G__5056);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5058 = x__3871__auto__;
          return goog.typeOf(G__5058);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5060 = x__3871__auto__;
          return goog.typeOf(G__5060);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5062 = x__3871__auto__;
          return goog.typeOf(G__5062);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5064 = x__3871__auto__;
          return goog.typeOf(G__5064);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5066 = x__3871__auto__;
          return goog.typeOf(G__5066);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5068 = x__3871__auto__;
          return goog.typeOf(G__5068);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5070 = x__3871__auto__;
          return goog.typeOf(G__5070);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5072 = x__3871__auto__;
          return goog.typeOf(G__5072);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5074 = x__3871__auto__;
          return goog.typeOf(G__5074);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5076 = x__3871__auto__;
          return goog.typeOf(G__5076);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5078 = x__3871__auto__;
          return goog.typeOf(G__5078);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5080 = x__3871__auto__;
          return goog.typeOf(G__5080);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5082 = x__3871__auto__;
          return goog.typeOf(G__5082);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5084 = x__3871__auto__;
          return goog.typeOf(G__5084);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3215__auto__ = this$;
      if (and__3215__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__3871__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3227__auto__ = cljs.core._invoke[function() {
          var G__5086 = x__3871__auto__;
          return goog.typeOf(G__5086);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._invoke["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5088 = {};
  return obj5088;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3215__auto__ = value;
    if (and__3215__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__3871__auto__ = value == null ? null : value;
    return function() {
      var or__3227__auto__ = cljs.core._clone[function() {
        var G__5092 = x__3871__auto__;
        return goog.typeOf(G__5092);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._clone["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5094 = {};
  return obj5094;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._count[function() {
        var G__5098 = x__3871__auto__;
        return goog.typeOf(G__5098);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._count["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5100 = {};
  return obj5100;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._empty[function() {
        var G__5104 = x__3871__auto__;
        return goog.typeOf(G__5104);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._empty["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5106 = {};
  return obj5106;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._conj[function() {
        var G__5110 = x__3871__auto__;
        return goog.typeOf(G__5110);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._conj["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5112 = {};
  return obj5112;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3215__auto__ = coll;
      if (and__3215__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__3871__auto__ = coll == null ? null : coll;
      return function() {
        var or__3227__auto__ = cljs.core._nth[function() {
          var G__5118 = x__3871__auto__;
          return goog.typeOf(G__5118);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._nth["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3215__auto__ = coll;
      if (and__3215__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__3871__auto__ = coll == null ? null : coll;
      return function() {
        var or__3227__auto__ = cljs.core._nth[function() {
          var G__5120 = x__3871__auto__;
          return goog.typeOf(G__5120);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._nth["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5122 = {};
  return obj5122;
}();
cljs.core.ISeq = function() {
  var obj5124 = {};
  return obj5124;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._first[function() {
        var G__5128 = x__3871__auto__;
        return goog.typeOf(G__5128);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._first["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._rest[function() {
        var G__5132 = x__3871__auto__;
        return goog.typeOf(G__5132);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._rest["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5134 = {};
  return obj5134;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._next[function() {
        var G__5138 = x__3871__auto__;
        return goog.typeOf(G__5138);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._next["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5140 = {};
  return obj5140;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._lookup[function() {
          var G__5146 = x__3871__auto__;
          return goog.typeOf(G__5146);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._lookup["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._lookup[function() {
          var G__5148 = x__3871__auto__;
          return goog.typeOf(G__5148);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._lookup["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5150 = {};
  return obj5150;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__5154 = x__3871__auto__;
        return goog.typeOf(G__5154);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._assoc[function() {
        var G__5158 = x__3871__auto__;
        return goog.typeOf(G__5158);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._assoc["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5160 = {};
  return obj5160;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._dissoc[function() {
        var G__5164 = x__3871__auto__;
        return goog.typeOf(G__5164);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._dissoc["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5166 = {};
  return obj5166;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._key[function() {
        var G__5170 = x__3871__auto__;
        return goog.typeOf(G__5170);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._key["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._val[function() {
        var G__5174 = x__3871__auto__;
        return goog.typeOf(G__5174);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._val["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5176 = {};
  return obj5176;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._disjoin[function() {
        var G__5180 = x__3871__auto__;
        return goog.typeOf(G__5180);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._disjoin["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5182 = {};
  return obj5182;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._peek[function() {
        var G__5186 = x__3871__auto__;
        return goog.typeOf(G__5186);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._peek["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._pop[function() {
        var G__5190 = x__3871__auto__;
        return goog.typeOf(G__5190);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._pop["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5192 = {};
  return obj5192;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._assoc_n[function() {
        var G__5196 = x__3871__auto__;
        return goog.typeOf(G__5196);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5198 = {};
  return obj5198;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._deref[function() {
        var G__5202 = x__3871__auto__;
        return goog.typeOf(G__5202);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._deref["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5204 = {};
  return obj5204;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._deref_with_timeout[function() {
        var G__5208 = x__3871__auto__;
        return goog.typeOf(G__5208);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5210 = {};
  return obj5210;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._meta[function() {
        var G__5214 = x__3871__auto__;
        return goog.typeOf(G__5214);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._meta["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5216 = {};
  return obj5216;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._with_meta[function() {
        var G__5220 = x__3871__auto__;
        return goog.typeOf(G__5220);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._with_meta["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5222 = {};
  return obj5222;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3215__auto__ = coll;
      if (and__3215__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__3871__auto__ = coll == null ? null : coll;
      return function() {
        var or__3227__auto__ = cljs.core._reduce[function() {
          var G__5228 = x__3871__auto__;
          return goog.typeOf(G__5228);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._reduce["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3215__auto__ = coll;
      if (and__3215__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__3871__auto__ = coll == null ? null : coll;
      return function() {
        var or__3227__auto__ = cljs.core._reduce[function() {
          var G__5230 = x__3871__auto__;
          return goog.typeOf(G__5230);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._reduce["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5232 = {};
  return obj5232;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._kv_reduce[function() {
        var G__5236 = x__3871__auto__;
        return goog.typeOf(G__5236);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5238 = {};
  return obj5238;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._equiv[function() {
        var G__5242 = x__3871__auto__;
        return goog.typeOf(G__5242);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._equiv["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5244 = {};
  return obj5244;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._hash[function() {
        var G__5248 = x__3871__auto__;
        return goog.typeOf(G__5248);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._hash["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5250 = {};
  return obj5250;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._seq[function() {
        var G__5254 = x__3871__auto__;
        return goog.typeOf(G__5254);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._seq["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5256 = {};
  return obj5256;
}();
cljs.core.IList = function() {
  var obj5258 = {};
  return obj5258;
}();
cljs.core.IRecord = function() {
  var obj5260 = {};
  return obj5260;
}();
cljs.core.IReversible = function() {
  var obj5262 = {};
  return obj5262;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._rseq[function() {
        var G__5266 = x__3871__auto__;
        return goog.typeOf(G__5266);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._rseq["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5268 = {};
  return obj5268;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._sorted_seq[function() {
        var G__5272 = x__3871__auto__;
        return goog.typeOf(G__5272);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._sorted_seq_from[function() {
        var G__5276 = x__3871__auto__;
        return goog.typeOf(G__5276);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._entry_key[function() {
        var G__5280 = x__3871__auto__;
        return goog.typeOf(G__5280);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._entry_key["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._comparator[function() {
        var G__5284 = x__3871__auto__;
        return goog.typeOf(G__5284);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._comparator["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5286 = {};
  return obj5286;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3215__auto__ = writer;
    if (and__3215__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__3871__auto__ = writer == null ? null : writer;
    return function() {
      var or__3227__auto__ = cljs.core._write[function() {
        var G__5290 = x__3871__auto__;
        return goog.typeOf(G__5290);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._write["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3215__auto__ = writer;
    if (and__3215__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__3871__auto__ = writer == null ? null : writer;
    return function() {
      var or__3227__auto__ = cljs.core._flush[function() {
        var G__5294 = x__3871__auto__;
        return goog.typeOf(G__5294);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._flush["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5296 = {};
  return obj5296;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._pr_writer[function() {
        var G__5300 = x__3871__auto__;
        return goog.typeOf(G__5300);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5302 = {};
  return obj5302;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3215__auto__ = d;
    if (and__3215__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__3871__auto__ = d == null ? null : d;
    return function() {
      var or__3227__auto__ = cljs.core._realized_QMARK_[function() {
        var G__5306 = x__3871__auto__;
        return goog.typeOf(G__5306);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5308 = {};
  return obj5308;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = cljs.core._notify_watches[function() {
        var G__5312 = x__3871__auto__;
        return goog.typeOf(G__5312);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = cljs.core._add_watch[function() {
        var G__5316 = x__3871__auto__;
        return goog.typeOf(G__5316);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._add_watch["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = cljs.core._remove_watch[function() {
        var G__5320 = x__3871__auto__;
        return goog.typeOf(G__5320);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5322 = {};
  return obj5322;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._as_transient[function() {
        var G__5326 = x__3871__auto__;
        return goog.typeOf(G__5326);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._as_transient["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5328 = {};
  return obj5328;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._conj_BANG_[function() {
        var G__5332 = x__3871__auto__;
        return goog.typeOf(G__5332);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._persistent_BANG_[function() {
        var G__5336 = x__3871__auto__;
        return goog.typeOf(G__5336);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5338 = {};
  return obj5338;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._assoc_BANG_[function() {
        var G__5342 = x__3871__auto__;
        return goog.typeOf(G__5342);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5344 = {};
  return obj5344;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__5348 = x__3871__auto__;
        return goog.typeOf(G__5348);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5350 = {};
  return obj5350;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__5354 = x__3871__auto__;
        return goog.typeOf(G__5354);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._pop_BANG_[function() {
        var G__5358 = x__3871__auto__;
        return goog.typeOf(G__5358);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5360 = {};
  return obj5360;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3215__auto__ = tcoll;
    if (and__3215__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__3871__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3227__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__5364 = x__3871__auto__;
        return goog.typeOf(G__5364);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5366 = {};
  return obj5366;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._compare[function() {
        var G__5370 = x__3871__auto__;
        return goog.typeOf(G__5370);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._compare["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5372 = {};
  return obj5372;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._drop_first[function() {
        var G__5376 = x__3871__auto__;
        return goog.typeOf(G__5376);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._drop_first["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5378 = {};
  return obj5378;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._chunked_first[function() {
        var G__5382 = x__3871__auto__;
        return goog.typeOf(G__5382);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._chunked_rest[function() {
        var G__5386 = x__3871__auto__;
        return goog.typeOf(G__5386);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5388 = {};
  return obj5388;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._chunked_next[function() {
        var G__5392 = x__3871__auto__;
        return goog.typeOf(G__5392);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5394 = {};
  return obj5394;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._name[function() {
        var G__5398 = x__3871__auto__;
        return goog.typeOf(G__5398);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._name["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._namespace[function() {
        var G__5402 = x__3871__auto__;
        return goog.typeOf(G__5402);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._namespace["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5404 = {};
  return obj5404;
}();
cljs.core.IReset = function() {
  var obj5406 = {};
  return obj5406;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._reset_BANG_[function() {
        var G__5410 = x__3871__auto__;
        return goog.typeOf(G__5410);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5412 = {};
  return obj5412;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._swap_BANG_[function() {
          var G__5422 = x__3871__auto__;
          return goog.typeOf(G__5422);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._swap_BANG_[function() {
          var G__5424 = x__3871__auto__;
          return goog.typeOf(G__5424);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._swap_BANG_[function() {
          var G__5426 = x__3871__auto__;
          return goog.typeOf(G__5426);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3215__auto__ = o;
      if (and__3215__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3215__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__3871__auto__ = o == null ? null : o;
      return function() {
        var or__3227__auto__ = cljs.core._swap_BANG_[function() {
          var G__5428 = x__3871__auto__;
          return goog.typeOf(G__5428);
        }()];
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3227__auto____$1) {
            return or__3227__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5430 = {};
  return obj5430;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3215__auto__ = o;
    if (and__3215__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__3871__auto__ = o == null ? null : o;
    return function() {
      var or__3227__auto__ = cljs.core._vreset_BANG_[function() {
        var G__5434 = x__3871__auto__;
        return goog.typeOf(G__5434);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5436 = {};
  return obj5436;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3215__auto__ = coll;
    if (and__3215__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__3871__auto__ = coll == null ? null : coll;
    return function() {
      var or__3227__auto__ = cljs.core._iterator[function() {
        var G__5440 = x__3871__auto__;
        return goog.typeOf(G__5440);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._iterator["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__5443 = 4294967295;
  var G__5444 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5443, G__5444) : Math.imul.call(null, G__5443, G__5444);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__5447 = a;
    var G__5448 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5447, G__5448) : Math.imul.call(null, G__5447, G__5448);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5449 = i + 2;
        var G__5450 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5449;
        h1 = G__5450;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5452 = {};
  return obj5452;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5453 = i + 1;
          var G__5454 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__5453;
          hash = G__5454;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5458 = {};
      return obj5458;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5461 = o;
    if (G__5461) {
      var bit__3901__auto__ = G__5461.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__3901__auto__ || G__5461.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__5462 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5462) : Math.floor.call(null, G__5462);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3215__auto__ = cljs.core.not(a.ns);
      if (and__3215__auto__) {
        return b.ns;
      } else {
        return and__3215__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__5469 = a.ns;
            var G__5470 = b.ns;
            return goog.array.defaultCompare(G__5469, G__5470);
          }();
          if (0 === nsc) {
            var G__5471 = a.name;
            var G__5472 = b.name;
            return goog.array.defaultCompare(G__5471, G__5472);
          } else {
            return nsc;
          }
        }
      } else {
        var G__5473 = a.name;
        var G__5474 = b.name;
        return goog.array.defaultCompare(G__5473, G__5474);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3648__auto__ = self__._hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5476 = null;
  var G__5476__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__5476__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__5476 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5476__2.call(this, self__, coll);
      case 3:
        return G__5476__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5476.cljs$core$IFn$_invoke$arity$2 = G__5476__2;
  G__5476.cljs$core$IFn$_invoke$arity$3 = G__5476__3;
  return G__5476;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5475) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5475)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__5524 = null;
  var G__5524__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__5524__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__5524__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__5524__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__5524__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__5524__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__5524__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__5524__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__5524__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__5524__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5524__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5524__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5524__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5524__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5524__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5524__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5524__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5524__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5524__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5524__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5524__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5524__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5480 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__5481 = a;
    var G__5482 = b;
    var G__5483 = c;
    var G__5484 = d;
    var G__5485 = e;
    var G__5486 = f;
    var G__5487 = g;
    var G__5488 = h;
    var G__5489 = i;
    var G__5490 = j;
    var G__5491 = k;
    var G__5492 = l;
    var G__5493 = m;
    var G__5494 = n;
    var G__5495 = o;
    var G__5496 = p;
    var G__5497 = q;
    var G__5498 = r;
    var G__5499 = s;
    var G__5500 = t;
    var G__5501 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5480, G__5481, G__5482, G__5483, G__5484, G__5485, G__5486, G__5487, G__5488, G__5489, G__5490, G__5491, G__5492, G__5493, G__5494, G__5495, G__5496, G__5497, G__5498, G__5499, G__5500, G__5501) : cljs.core.apply.call(null, G__5480, G__5481, G__5482, G__5483, G__5484, G__5485, G__5486, G__5487, G__5488, G__5489, G__5490, G__5491, G__5492, G__5493, G__5494, G__5495, G__5496, G__5497, G__5498, 
    G__5499, G__5500, G__5501);
  };
  G__5524 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5524__1.call(this, self__);
      case 2:
        return G__5524__2.call(this, self__, a);
      case 3:
        return G__5524__3.call(this, self__, a, b);
      case 4:
        return G__5524__4.call(this, self__, a, b, c);
      case 5:
        return G__5524__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5524__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5524__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5524__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5524__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5524__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5524__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5524__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5524__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5524__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5524__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5524__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5524__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5524__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5524__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5524__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5524__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5524__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5524.cljs$core$IFn$_invoke$arity$1 = G__5524__1;
  G__5524.cljs$core$IFn$_invoke$arity$2 = G__5524__2;
  G__5524.cljs$core$IFn$_invoke$arity$3 = G__5524__3;
  G__5524.cljs$core$IFn$_invoke$arity$4 = G__5524__4;
  G__5524.cljs$core$IFn$_invoke$arity$5 = G__5524__5;
  G__5524.cljs$core$IFn$_invoke$arity$6 = G__5524__6;
  G__5524.cljs$core$IFn$_invoke$arity$7 = G__5524__7;
  G__5524.cljs$core$IFn$_invoke$arity$8 = G__5524__8;
  G__5524.cljs$core$IFn$_invoke$arity$9 = G__5524__9;
  G__5524.cljs$core$IFn$_invoke$arity$10 = G__5524__10;
  G__5524.cljs$core$IFn$_invoke$arity$11 = G__5524__11;
  G__5524.cljs$core$IFn$_invoke$arity$12 = G__5524__12;
  G__5524.cljs$core$IFn$_invoke$arity$13 = G__5524__13;
  G__5524.cljs$core$IFn$_invoke$arity$14 = G__5524__14;
  G__5524.cljs$core$IFn$_invoke$arity$15 = G__5524__15;
  G__5524.cljs$core$IFn$_invoke$arity$16 = G__5524__16;
  G__5524.cljs$core$IFn$_invoke$arity$17 = G__5524__17;
  G__5524.cljs$core$IFn$_invoke$arity$18 = G__5524__18;
  G__5524.cljs$core$IFn$_invoke$arity$19 = G__5524__19;
  G__5524.cljs$core$IFn$_invoke$arity$20 = G__5524__20;
  G__5524.cljs$core$IFn$_invoke$arity$21 = G__5524__21;
  G__5524.cljs$core$IFn$_invoke$arity$22 = G__5524__22;
  return G__5524;
}();
cljs.core.Var.prototype.apply = function(self__, args5479) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5479)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__5502 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__5503 = a;
  var G__5504 = b;
  var G__5505 = c;
  var G__5506 = d;
  var G__5507 = e;
  var G__5508 = f;
  var G__5509 = g;
  var G__5510 = h;
  var G__5511 = i;
  var G__5512 = j;
  var G__5513 = k;
  var G__5514 = l;
  var G__5515 = m;
  var G__5516 = n;
  var G__5517 = o;
  var G__5518 = p;
  var G__5519 = q;
  var G__5520 = r;
  var G__5521 = s;
  var G__5522 = t;
  var G__5523 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5502, G__5503, G__5504, G__5505, G__5506, G__5507, G__5508, G__5509, G__5510, G__5511, G__5512, G__5513, G__5514, G__5515, G__5516, G__5517, G__5518, G__5519, G__5520, G__5521, G__5522, G__5523) : cljs.core.apply.call(null, G__5502, G__5503, G__5504, G__5505, G__5506, G__5507, G__5508, G__5509, G__5510, G__5511, G__5512, G__5513, G__5514, G__5515, G__5516, G__5517, G__5518, G__5519, G__5520, 
  G__5521, G__5522, G__5523);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5526 = x;
  if (G__5526) {
    var bit__3908__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3227__auto__ = bit__3908__auto__;
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return G__5526.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5526.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5526);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5526);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5528 = value;
  if (G__5528) {
    var bit__3908__auto__ = G__5528.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__3908__auto__ || G__5528.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5528.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5528);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5528);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5530 = coll;
      if (G__5530) {
        var bit__3901__auto__ = G__5530.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__3901__auto__ || G__5530.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5532 = coll;
      if (G__5532) {
        var bit__3901__auto__ = G__5532.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__3901__auto__ || G__5532.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5534 = coll;
      if (G__5534) {
        var bit__3901__auto__ = G__5534.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__3901__auto__ || G__5534.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5536 = coll;
      if (G__5536) {
        var bit__3901__auto__ = G__5536.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__3901__auto__ || G__5536.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5541__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__5542 = y;
            var G__5543 = cljs.core.first(more);
            var G__5544 = cljs.core.next(more);
            x = G__5542;
            y = G__5543;
            more = G__5544;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5541 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__5545__i = 0, G__5545__a = new Array(arguments.length - 2);
        while (G__5545__i < G__5545__a.length) {
          G__5545__a[G__5545__i] = arguments[G__5545__i + 2];
          ++G__5545__i;
        }
        more = new cljs.core.IndexedSeq(G__5545__a, 0);
      }
      return G__5541__delegate.call(this, x, y, more);
    };
    G__5541.cljs$lang$maxFixedArity = 2;
    G__5541.cljs$lang$applyTo = function(arglist__5546) {
      var x = cljs.core.first(arglist__5546);
      arglist__5546 = cljs.core.next(arglist__5546);
      var y = cljs.core.first(arglist__5546);
      var more = cljs.core.rest(arglist__5546);
      return G__5541__delegate(x, y, more);
    };
    G__5541.cljs$core$IFn$_invoke$arity$variadic = G__5541__delegate;
    return G__5541;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__5547 = null;
        if (arguments.length > 2) {
          var G__5548__i = 0, G__5548__a = new Array(arguments.length - 2);
          while (G__5548__i < G__5548__a.length) {
            G__5548__a[G__5548__i] = arguments[G__5548__i + 2];
            ++G__5548__i;
          }
          G__5547 = new cljs.core.IndexedSeq(G__5548__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__5547);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__5549 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5549) : cljs.core.es6_iterator_seq.call(null, G__5549);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5550 = n + 1;
      var G__5551 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5552 = cljs.core.next(coll__$1);
      n = G__5550;
      hash_code = G__5551;
      coll__$1 = G__5552;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5553 = n + 1;
      var G__5554 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5555 = cljs.core.next(coll__$1);
      n = G__5553;
      hash_code = G__5554;
      coll__$1 = G__5555;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__5556 = o;
  return goog.getUid(G__5556);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__5558 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5558) : cljs.core.deref.call(null, G__5558);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5565 = val;
            var G__5566 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5565, G__5566) : f.call(null, G__5565, G__5566);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5571 = nval;
            var G__5572 = n + 1;
            val = G__5571;
            n = G__5572;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5567 = val__$1;
          var G__5568 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5567, G__5568) : f.call(null, G__5567, G__5568);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5573 = nval;
          var G__5574 = n + 1;
          val__$1 = G__5573;
          n = G__5574;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5569 = val__$1;
          var G__5570 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5569, G__5570) : f.call(null, G__5569, G__5570);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5575 = nval;
          var G__5576 = n + 1;
          val__$1 = G__5575;
          n = G__5576;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5583 = val;
            var G__5584 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5583, G__5584) : f.call(null, G__5583, G__5584);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5589 = nval;
            var G__5590 = n + 1;
            val = G__5589;
            n = G__5590;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5585 = val__$1;
          var G__5586 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5585, G__5586) : f.call(null, G__5585, G__5586);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5591 = nval;
          var G__5592 = n + 1;
          val__$1 = G__5591;
          n = G__5592;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5587 = val__$1;
          var G__5588 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5587, G__5588) : f.call(null, G__5587, G__5588);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5593 = nval;
          var G__5594 = n + 1;
          val__$1 = G__5593;
          n = G__5594;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5596 = x;
  if (G__5596) {
    var bit__3908__auto__ = G__5596.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__3908__auto__ || G__5596.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5596.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5596);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5596);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5598 = x;
  if (G__5598) {
    var bit__3908__auto__ = G__5598.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__3908__auto__ || G__5598.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5598.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5598);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5598);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5599 = coll__$1;
  var G__5600 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5599, G__5600) : cljs.core.equiv_sequential.call(null, G__5599, G__5600);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5601 = o;
  var G__5602 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5601, G__5602) : cljs.core.cons.call(null, G__5601, G__5602);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5605 = coll__$1;
  var G__5606 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5605, G__5606) : cljs.core.equiv_sequential.call(null, G__5605, G__5606);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__5607 = cljs.core.List.EMPTY;
  var G__5608 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5607, G__5608) : cljs.core.with_meta.call(null, G__5607, G__5608);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__5609 = f;
  var G__5610 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5609, G__5610) : cljs.core.seq_reduce.call(null, G__5609, G__5610);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__5611 = f;
  var G__5612 = start;
  var G__5613 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5611, G__5612, G__5613) : cljs.core.seq_reduce.call(null, G__5611, G__5612, G__5613);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5614 = o;
  var G__5615 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5614, G__5615) : cljs.core.cons.call(null, G__5614, G__5615);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__5616 = sn;
      s = G__5616;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5621__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5622 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__5623 = cljs.core.first(xs);
          var G__5624 = cljs.core.next(xs);
          coll = G__5622;
          x = G__5623;
          xs = G__5624;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__5621 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__5625__i = 0, G__5625__a = new Array(arguments.length - 2);
        while (G__5625__i < G__5625__a.length) {
          G__5625__a[G__5625__i] = arguments[G__5625__i + 2];
          ++G__5625__i;
        }
        xs = new cljs.core.IndexedSeq(G__5625__a, 0);
      }
      return G__5621__delegate.call(this, coll, x, xs);
    };
    G__5621.cljs$lang$maxFixedArity = 2;
    G__5621.cljs$lang$applyTo = function(arglist__5626) {
      var coll = cljs.core.first(arglist__5626);
      arglist__5626 = cljs.core.next(arglist__5626);
      var x = cljs.core.first(arglist__5626);
      var xs = cljs.core.rest(arglist__5626);
      return G__5621__delegate(coll, x, xs);
    };
    G__5621.cljs$core$IFn$_invoke$arity$variadic = G__5621__delegate;
    return G__5621;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__5627 = null;
        if (arguments.length > 2) {
          var G__5628__i = 0, G__5628__a = new Array(arguments.length - 2);
          while (G__5628__i < G__5628__a.length) {
            G__5628__a[G__5628__i] = arguments[G__5628__i + 2];
            ++G__5628__i;
          }
          G__5627 = new cljs.core.IndexedSeq(G__5628__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__5627);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__5629 = cljs.core.next(s);
      var G__5630 = acc + 1;
      s = G__5629;
      acc = G__5630;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5632 = coll;
      if (G__5632) {
        var bit__3901__auto__ = G__5632.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__3901__auto__ || G__5632.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5633 = cljs.core.next(coll);
              var G__5634 = n - 1;
              coll = G__5633;
              n = G__5634;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5635 = cljs.core.next(coll);
              var G__5636 = n - 1;
              var G__5637 = not_found;
              coll = G__5635;
              n = G__5636;
              not_found = G__5637;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5642 = coll;
          if (G__5642) {
            var bit__3901__auto__ = G__5642.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__3901__auto__ || G__5642.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5643 = coll;
                  if (G__5643) {
                    var bit__3908__auto__ = G__5643.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__3908__auto__ || G__5643.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5643.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5643);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5643);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5644 = coll;
          if (G__5644) {
            var bit__3901__auto__ = G__5644.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__3901__auto__ || G__5644.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5645 = coll;
                  if (G__5645) {
                    var bit__3908__auto__ = G__5645.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__3908__auto__ || G__5645.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5645.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5645);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5645);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__5646 = n__$1 - 1;
      var G__5647 = cljs.core.rest(xs);
      n__$1 = G__5646;
      xs = G__5647;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5650 = o;
        if (G__5650) {
          var bit__3901__auto__ = G__5650.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__3901__auto__ || G__5650.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5651 = o;
        if (G__5651) {
          var bit__3901__auto__ = G__5651.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__3901__auto__ || G__5651.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5655__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5656 = ret;
          var G__5657 = cljs.core.first(kvs);
          var G__5658 = cljs.core.second(kvs);
          var G__5659 = cljs.core.nnext(kvs);
          coll = G__5656;
          k = G__5657;
          v = G__5658;
          kvs = G__5659;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5655 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__5660__i = 0, G__5660__a = new Array(arguments.length - 3);
        while (G__5660__i < G__5660__a.length) {
          G__5660__a[G__5660__i] = arguments[G__5660__i + 3];
          ++G__5660__i;
        }
        kvs = new cljs.core.IndexedSeq(G__5660__a, 0);
      }
      return G__5655__delegate.call(this, coll, k, v, kvs);
    };
    G__5655.cljs$lang$maxFixedArity = 3;
    G__5655.cljs$lang$applyTo = function(arglist__5661) {
      var coll = cljs.core.first(arglist__5661);
      arglist__5661 = cljs.core.next(arglist__5661);
      var k = cljs.core.first(arglist__5661);
      arglist__5661 = cljs.core.next(arglist__5661);
      var v = cljs.core.first(arglist__5661);
      var kvs = cljs.core.rest(arglist__5661);
      return G__5655__delegate(coll, k, v, kvs);
    };
    G__5655.cljs$core$IFn$_invoke$arity$variadic = G__5655__delegate;
    return G__5655;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__5662 = null;
        if (arguments.length > 3) {
          var G__5663__i = 0, G__5663__a = new Array(arguments.length - 3);
          while (G__5663__i < G__5663__a.length) {
            G__5663__a[G__5663__i] = arguments[G__5663__i + 3];
            ++G__5663__i;
          }
          G__5662 = new cljs.core.IndexedSeq(G__5663__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__5662);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__5666__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5667 = ret;
            var G__5668 = cljs.core.first(ks);
            var G__5669 = cljs.core.next(ks);
            coll = G__5667;
            k = G__5668;
            ks = G__5669;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5666 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__5670__i = 0, G__5670__a = new Array(arguments.length - 2);
        while (G__5670__i < G__5670__a.length) {
          G__5670__a[G__5670__i] = arguments[G__5670__i + 2];
          ++G__5670__i;
        }
        ks = new cljs.core.IndexedSeq(G__5670__a, 0);
      }
      return G__5666__delegate.call(this, coll, k, ks);
    };
    G__5666.cljs$lang$maxFixedArity = 2;
    G__5666.cljs$lang$applyTo = function(arglist__5671) {
      var coll = cljs.core.first(arglist__5671);
      arglist__5671 = cljs.core.next(arglist__5671);
      var k = cljs.core.first(arglist__5671);
      var ks = cljs.core.rest(arglist__5671);
      return G__5666__delegate(coll, k, ks);
    };
    G__5666.cljs$core$IFn$_invoke$arity$variadic = G__5666__delegate;
    return G__5666;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__5672 = null;
        if (arguments.length > 2) {
          var G__5673__i = 0, G__5673__a = new Array(arguments.length - 2);
          while (G__5673__i < G__5673__a.length) {
            G__5673__a[G__5673__i] = arguments[G__5673__i + 2];
            ++G__5673__i;
          }
          G__5672 = new cljs.core.IndexedSeq(G__5673__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__5672);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3227__auto__ = function() {
    var G__5678 = f;
    return goog.isFunction(G__5678);
  }();
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    var G__5679 = f;
    if (G__5679) {
      var bit__3908__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3227__auto____$1 = bit__3908__auto__;
        if (cljs.core.truth_(or__3227__auto____$1)) {
          return or__3227__auto____$1;
        } else {
          return G__5679.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__5679.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__5679);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__5679);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6145 = null;
  var G__6145__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6145__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5681 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5681) : self__.afn.call(null, G__5681);
  };
  var G__6145__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5682 = a;
    var G__5683 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5682, G__5683) : self__.afn.call(null, G__5682, G__5683);
  };
  var G__6145__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5684 = a;
    var G__5685 = b;
    var G__5686 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5684, G__5685, G__5686) : self__.afn.call(null, G__5684, G__5685, G__5686);
  };
  var G__6145__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5687 = a;
    var G__5688 = b;
    var G__5689 = c;
    var G__5690 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5687, G__5688, G__5689, G__5690) : self__.afn.call(null, G__5687, G__5688, G__5689, G__5690);
  };
  var G__6145__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5691 = a;
    var G__5692 = b;
    var G__5693 = c;
    var G__5694 = d;
    var G__5695 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5691, G__5692, G__5693, G__5694, G__5695) : self__.afn.call(null, G__5691, G__5692, G__5693, G__5694, G__5695);
  };
  var G__6145__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5696 = a;
    var G__5697 = b;
    var G__5698 = c;
    var G__5699 = d;
    var G__5700 = e;
    var G__5701 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5696, G__5697, G__5698, G__5699, G__5700, G__5701) : self__.afn.call(null, G__5696, G__5697, G__5698, G__5699, G__5700, G__5701);
  };
  var G__6145__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5702 = a;
    var G__5703 = b;
    var G__5704 = c;
    var G__5705 = d;
    var G__5706 = e;
    var G__5707 = f;
    var G__5708 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5702, G__5703, G__5704, G__5705, G__5706, G__5707, G__5708) : self__.afn.call(null, G__5702, G__5703, G__5704, G__5705, G__5706, G__5707, G__5708);
  };
  var G__6145__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5709 = a;
    var G__5710 = b;
    var G__5711 = c;
    var G__5712 = d;
    var G__5713 = e;
    var G__5714 = f;
    var G__5715 = g;
    var G__5716 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5709, G__5710, G__5711, G__5712, G__5713, G__5714, G__5715, G__5716) : self__.afn.call(null, G__5709, G__5710, G__5711, G__5712, G__5713, G__5714, G__5715, G__5716);
  };
  var G__6145__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5717 = a;
    var G__5718 = b;
    var G__5719 = c;
    var G__5720 = d;
    var G__5721 = e;
    var G__5722 = f;
    var G__5723 = g;
    var G__5724 = h;
    var G__5725 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5717, G__5718, G__5719, G__5720, G__5721, G__5722, G__5723, G__5724, G__5725) : self__.afn.call(null, G__5717, G__5718, G__5719, G__5720, G__5721, G__5722, G__5723, G__5724, G__5725);
  };
  var G__6145__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5726 = a;
    var G__5727 = b;
    var G__5728 = c;
    var G__5729 = d;
    var G__5730 = e;
    var G__5731 = f;
    var G__5732 = g;
    var G__5733 = h;
    var G__5734 = i;
    var G__5735 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5726, G__5727, G__5728, G__5729, G__5730, G__5731, G__5732, G__5733, G__5734, G__5735) : self__.afn.call(null, G__5726, G__5727, G__5728, G__5729, G__5730, G__5731, G__5732, G__5733, G__5734, G__5735);
  };
  var G__6145__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5736 = a;
    var G__5737 = b;
    var G__5738 = c;
    var G__5739 = d;
    var G__5740 = e;
    var G__5741 = f;
    var G__5742 = g;
    var G__5743 = h;
    var G__5744 = i;
    var G__5745 = j;
    var G__5746 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5736, G__5737, G__5738, G__5739, G__5740, G__5741, G__5742, G__5743, G__5744, G__5745, G__5746) : self__.afn.call(null, G__5736, G__5737, G__5738, G__5739, G__5740, G__5741, G__5742, G__5743, G__5744, G__5745, G__5746);
  };
  var G__6145__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5747 = a;
    var G__5748 = b;
    var G__5749 = c;
    var G__5750 = d;
    var G__5751 = e;
    var G__5752 = f;
    var G__5753 = g;
    var G__5754 = h;
    var G__5755 = i;
    var G__5756 = j;
    var G__5757 = k;
    var G__5758 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5747, G__5748, G__5749, G__5750, G__5751, G__5752, G__5753, G__5754, G__5755, G__5756, G__5757, G__5758) : self__.afn.call(null, G__5747, G__5748, G__5749, G__5750, G__5751, G__5752, G__5753, G__5754, G__5755, G__5756, G__5757, G__5758);
  };
  var G__6145__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5759 = a;
    var G__5760 = b;
    var G__5761 = c;
    var G__5762 = d;
    var G__5763 = e;
    var G__5764 = f;
    var G__5765 = g;
    var G__5766 = h;
    var G__5767 = i;
    var G__5768 = j;
    var G__5769 = k;
    var G__5770 = l;
    var G__5771 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5759, G__5760, G__5761, G__5762, G__5763, G__5764, G__5765, G__5766, G__5767, G__5768, G__5769, G__5770, G__5771) : self__.afn.call(null, G__5759, G__5760, G__5761, G__5762, G__5763, G__5764, G__5765, G__5766, G__5767, G__5768, G__5769, G__5770, G__5771);
  };
  var G__6145__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5772 = a;
    var G__5773 = b;
    var G__5774 = c;
    var G__5775 = d;
    var G__5776 = e;
    var G__5777 = f;
    var G__5778 = g;
    var G__5779 = h;
    var G__5780 = i;
    var G__5781 = j;
    var G__5782 = k;
    var G__5783 = l;
    var G__5784 = m;
    var G__5785 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5772, G__5773, G__5774, G__5775, G__5776, G__5777, G__5778, G__5779, G__5780, G__5781, G__5782, G__5783, G__5784, G__5785) : self__.afn.call(null, G__5772, G__5773, G__5774, G__5775, G__5776, G__5777, G__5778, G__5779, G__5780, G__5781, G__5782, G__5783, G__5784, G__5785);
  };
  var G__6145__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5786 = a;
    var G__5787 = b;
    var G__5788 = c;
    var G__5789 = d;
    var G__5790 = e;
    var G__5791 = f;
    var G__5792 = g;
    var G__5793 = h;
    var G__5794 = i;
    var G__5795 = j;
    var G__5796 = k;
    var G__5797 = l;
    var G__5798 = m;
    var G__5799 = n;
    var G__5800 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5786, G__5787, G__5788, G__5789, G__5790, G__5791, G__5792, G__5793, G__5794, G__5795, G__5796, G__5797, G__5798, G__5799, G__5800) : self__.afn.call(null, G__5786, G__5787, G__5788, G__5789, G__5790, G__5791, G__5792, G__5793, G__5794, G__5795, G__5796, G__5797, G__5798, G__5799, G__5800);
  };
  var G__6145__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5801 = a;
    var G__5802 = b;
    var G__5803 = c;
    var G__5804 = d;
    var G__5805 = e;
    var G__5806 = f;
    var G__5807 = g;
    var G__5808 = h;
    var G__5809 = i;
    var G__5810 = j;
    var G__5811 = k;
    var G__5812 = l;
    var G__5813 = m;
    var G__5814 = n;
    var G__5815 = o;
    var G__5816 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5801, G__5802, G__5803, G__5804, G__5805, G__5806, G__5807, G__5808, G__5809, G__5810, G__5811, G__5812, G__5813, G__5814, G__5815, G__5816) : self__.afn.call(null, G__5801, G__5802, G__5803, G__5804, G__5805, G__5806, G__5807, G__5808, G__5809, G__5810, G__5811, G__5812, G__5813, G__5814, G__5815, G__5816);
  };
  var G__6145__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5817 = a;
    var G__5818 = b;
    var G__5819 = c;
    var G__5820 = d;
    var G__5821 = e;
    var G__5822 = f;
    var G__5823 = g;
    var G__5824 = h;
    var G__5825 = i;
    var G__5826 = j;
    var G__5827 = k;
    var G__5828 = l;
    var G__5829 = m;
    var G__5830 = n;
    var G__5831 = o;
    var G__5832 = p;
    var G__5833 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, G__5828, G__5829, G__5830, G__5831, G__5832, G__5833) : self__.afn.call(null, G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, G__5828, G__5829, G__5830, G__5831, G__5832, G__5833);
  };
  var G__6145__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5834 = a;
    var G__5835 = b;
    var G__5836 = c;
    var G__5837 = d;
    var G__5838 = e;
    var G__5839 = f;
    var G__5840 = g;
    var G__5841 = h;
    var G__5842 = i;
    var G__5843 = j;
    var G__5844 = k;
    var G__5845 = l;
    var G__5846 = m;
    var G__5847 = n;
    var G__5848 = o;
    var G__5849 = p;
    var G__5850 = q;
    var G__5851 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5834, G__5835, G__5836, G__5837, G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, G__5850, G__5851) : self__.afn.call(null, G__5834, G__5835, G__5836, G__5837, G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, G__5850, G__5851);
  };
  var G__6145__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5852 = a;
    var G__5853 = b;
    var G__5854 = c;
    var G__5855 = d;
    var G__5856 = e;
    var G__5857 = f;
    var G__5858 = g;
    var G__5859 = h;
    var G__5860 = i;
    var G__5861 = j;
    var G__5862 = k;
    var G__5863 = l;
    var G__5864 = m;
    var G__5865 = n;
    var G__5866 = o;
    var G__5867 = p;
    var G__5868 = q;
    var G__5869 = r;
    var G__5870 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5852, G__5853, G__5854, G__5855, G__5856, G__5857, G__5858, G__5859, G__5860, G__5861, G__5862, G__5863, G__5864, G__5865, G__5866, G__5867, G__5868, G__5869, G__5870) : self__.afn.call(null, G__5852, G__5853, G__5854, G__5855, G__5856, G__5857, G__5858, G__5859, G__5860, G__5861, G__5862, G__5863, G__5864, G__5865, G__5866, G__5867, G__5868, G__5869, G__5870);
  };
  var G__6145__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5871 = a;
    var G__5872 = b;
    var G__5873 = c;
    var G__5874 = d;
    var G__5875 = e;
    var G__5876 = f;
    var G__5877 = g;
    var G__5878 = h;
    var G__5879 = i;
    var G__5880 = j;
    var G__5881 = k;
    var G__5882 = l;
    var G__5883 = m;
    var G__5884 = n;
    var G__5885 = o;
    var G__5886 = p;
    var G__5887 = q;
    var G__5888 = r;
    var G__5889 = s;
    var G__5890 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5871, G__5872, G__5873, G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880, G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890) : self__.afn.call(null, G__5871, G__5872, G__5873, G__5874, G__5875, G__5876, G__5877, G__5878, G__5879, G__5880, G__5881, G__5882, G__5883, G__5884, G__5885, G__5886, G__5887, G__5888, G__5889, G__5890);
  };
  var G__6145__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5891 = self__.afn;
    var G__5892 = a;
    var G__5893 = b;
    var G__5894 = c;
    var G__5895 = d;
    var G__5896 = e;
    var G__5897 = f;
    var G__5898 = g;
    var G__5899 = h;
    var G__5900 = i;
    var G__5901 = j;
    var G__5902 = k;
    var G__5903 = l;
    var G__5904 = m;
    var G__5905 = n;
    var G__5906 = o;
    var G__5907 = p;
    var G__5908 = q;
    var G__5909 = r;
    var G__5910 = s;
    var G__5911 = t;
    var G__5912 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5891, G__5892, G__5893, G__5894, G__5895, G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903, G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, G__5910, G__5911, G__5912) : cljs.core.apply.call(null, G__5891, G__5892, G__5893, G__5894, G__5895, G__5896, G__5897, G__5898, G__5899, G__5900, G__5901, G__5902, G__5903, G__5904, G__5905, G__5906, G__5907, G__5908, G__5909, 
    G__5910, G__5911, G__5912);
  };
  G__6145 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6145__1.call(this, self__);
      case 2:
        return G__6145__2.call(this, self__, a);
      case 3:
        return G__6145__3.call(this, self__, a, b);
      case 4:
        return G__6145__4.call(this, self__, a, b, c);
      case 5:
        return G__6145__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6145__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6145__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6145__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6145__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6145__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6145__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6145__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6145__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6145__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6145__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6145__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6145__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6145__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6145__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6145__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6145__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6145__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6145.cljs$core$IFn$_invoke$arity$1 = G__6145__1;
  G__6145.cljs$core$IFn$_invoke$arity$2 = G__6145__2;
  G__6145.cljs$core$IFn$_invoke$arity$3 = G__6145__3;
  G__6145.cljs$core$IFn$_invoke$arity$4 = G__6145__4;
  G__6145.cljs$core$IFn$_invoke$arity$5 = G__6145__5;
  G__6145.cljs$core$IFn$_invoke$arity$6 = G__6145__6;
  G__6145.cljs$core$IFn$_invoke$arity$7 = G__6145__7;
  G__6145.cljs$core$IFn$_invoke$arity$8 = G__6145__8;
  G__6145.cljs$core$IFn$_invoke$arity$9 = G__6145__9;
  G__6145.cljs$core$IFn$_invoke$arity$10 = G__6145__10;
  G__6145.cljs$core$IFn$_invoke$arity$11 = G__6145__11;
  G__6145.cljs$core$IFn$_invoke$arity$12 = G__6145__12;
  G__6145.cljs$core$IFn$_invoke$arity$13 = G__6145__13;
  G__6145.cljs$core$IFn$_invoke$arity$14 = G__6145__14;
  G__6145.cljs$core$IFn$_invoke$arity$15 = G__6145__15;
  G__6145.cljs$core$IFn$_invoke$arity$16 = G__6145__16;
  G__6145.cljs$core$IFn$_invoke$arity$17 = G__6145__17;
  G__6145.cljs$core$IFn$_invoke$arity$18 = G__6145__18;
  G__6145.cljs$core$IFn$_invoke$arity$19 = G__6145__19;
  G__6145.cljs$core$IFn$_invoke$arity$20 = G__6145__20;
  G__6145.cljs$core$IFn$_invoke$arity$21 = G__6145__21;
  G__6145.cljs$core$IFn$_invoke$arity$22 = G__6145__22;
  return G__6145;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args5680) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5680)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__5913 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5913) : self__.afn.call(null, G__5913);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__5914 = a;
  var G__5915 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5914, G__5915) : self__.afn.call(null, G__5914, G__5915);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__5916 = a;
  var G__5917 = b;
  var G__5918 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5916, G__5917, G__5918) : self__.afn.call(null, G__5916, G__5917, G__5918);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__5919 = a;
  var G__5920 = b;
  var G__5921 = c;
  var G__5922 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5919, G__5920, G__5921, G__5922) : self__.afn.call(null, G__5919, G__5920, G__5921, G__5922);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__5923 = a;
  var G__5924 = b;
  var G__5925 = c;
  var G__5926 = d;
  var G__5927 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5923, G__5924, G__5925, G__5926, G__5927) : self__.afn.call(null, G__5923, G__5924, G__5925, G__5926, G__5927);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__5928 = a;
  var G__5929 = b;
  var G__5930 = c;
  var G__5931 = d;
  var G__5932 = e;
  var G__5933 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5928, G__5929, G__5930, G__5931, G__5932, G__5933) : self__.afn.call(null, G__5928, G__5929, G__5930, G__5931, G__5932, G__5933);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__5934 = a;
  var G__5935 = b;
  var G__5936 = c;
  var G__5937 = d;
  var G__5938 = e;
  var G__5939 = f;
  var G__5940 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5934, G__5935, G__5936, G__5937, G__5938, G__5939, G__5940) : self__.afn.call(null, G__5934, G__5935, G__5936, G__5937, G__5938, G__5939, G__5940);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__5941 = a;
  var G__5942 = b;
  var G__5943 = c;
  var G__5944 = d;
  var G__5945 = e;
  var G__5946 = f;
  var G__5947 = g;
  var G__5948 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5941, G__5942, G__5943, G__5944, G__5945, G__5946, G__5947, G__5948) : self__.afn.call(null, G__5941, G__5942, G__5943, G__5944, G__5945, G__5946, G__5947, G__5948);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__5949 = a;
  var G__5950 = b;
  var G__5951 = c;
  var G__5952 = d;
  var G__5953 = e;
  var G__5954 = f;
  var G__5955 = g;
  var G__5956 = h;
  var G__5957 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5949, G__5950, G__5951, G__5952, G__5953, G__5954, G__5955, G__5956, G__5957) : self__.afn.call(null, G__5949, G__5950, G__5951, G__5952, G__5953, G__5954, G__5955, G__5956, G__5957);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__5958 = a;
  var G__5959 = b;
  var G__5960 = c;
  var G__5961 = d;
  var G__5962 = e;
  var G__5963 = f;
  var G__5964 = g;
  var G__5965 = h;
  var G__5966 = i;
  var G__5967 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5958, G__5959, G__5960, G__5961, G__5962, G__5963, G__5964, G__5965, G__5966, G__5967) : self__.afn.call(null, G__5958, G__5959, G__5960, G__5961, G__5962, G__5963, G__5964, G__5965, G__5966, G__5967);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__5968 = a;
  var G__5969 = b;
  var G__5970 = c;
  var G__5971 = d;
  var G__5972 = e;
  var G__5973 = f;
  var G__5974 = g;
  var G__5975 = h;
  var G__5976 = i;
  var G__5977 = j;
  var G__5978 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5968, G__5969, G__5970, G__5971, G__5972, G__5973, G__5974, G__5975, G__5976, G__5977, G__5978) : self__.afn.call(null, G__5968, G__5969, G__5970, G__5971, G__5972, G__5973, G__5974, G__5975, G__5976, G__5977, G__5978);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__5979 = a;
  var G__5980 = b;
  var G__5981 = c;
  var G__5982 = d;
  var G__5983 = e;
  var G__5984 = f;
  var G__5985 = g;
  var G__5986 = h;
  var G__5987 = i;
  var G__5988 = j;
  var G__5989 = k;
  var G__5990 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5979, G__5980, G__5981, G__5982, G__5983, G__5984, G__5985, G__5986, G__5987, G__5988, G__5989, G__5990) : self__.afn.call(null, G__5979, G__5980, G__5981, G__5982, G__5983, G__5984, G__5985, G__5986, G__5987, G__5988, G__5989, G__5990);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__5991 = a;
  var G__5992 = b;
  var G__5993 = c;
  var G__5994 = d;
  var G__5995 = e;
  var G__5996 = f;
  var G__5997 = g;
  var G__5998 = h;
  var G__5999 = i;
  var G__6000 = j;
  var G__6001 = k;
  var G__6002 = l;
  var G__6003 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5991, G__5992, G__5993, G__5994, G__5995, G__5996, G__5997, G__5998, G__5999, G__6000, G__6001, G__6002, G__6003) : self__.afn.call(null, G__5991, G__5992, G__5993, G__5994, G__5995, G__5996, G__5997, G__5998, G__5999, G__6000, G__6001, G__6002, G__6003);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__6004 = a;
  var G__6005 = b;
  var G__6006 = c;
  var G__6007 = d;
  var G__6008 = e;
  var G__6009 = f;
  var G__6010 = g;
  var G__6011 = h;
  var G__6012 = i;
  var G__6013 = j;
  var G__6014 = k;
  var G__6015 = l;
  var G__6016 = m;
  var G__6017 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6004, G__6005, G__6006, G__6007, G__6008, G__6009, G__6010, G__6011, G__6012, G__6013, G__6014, G__6015, G__6016, G__6017) : self__.afn.call(null, G__6004, G__6005, G__6006, G__6007, G__6008, G__6009, G__6010, G__6011, G__6012, G__6013, G__6014, G__6015, G__6016, G__6017);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__6018 = a;
  var G__6019 = b;
  var G__6020 = c;
  var G__6021 = d;
  var G__6022 = e;
  var G__6023 = f;
  var G__6024 = g;
  var G__6025 = h;
  var G__6026 = i;
  var G__6027 = j;
  var G__6028 = k;
  var G__6029 = l;
  var G__6030 = m;
  var G__6031 = n;
  var G__6032 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6018, G__6019, G__6020, G__6021, G__6022, G__6023, G__6024, G__6025, G__6026, G__6027, G__6028, G__6029, G__6030, G__6031, G__6032) : self__.afn.call(null, G__6018, G__6019, G__6020, G__6021, G__6022, G__6023, G__6024, G__6025, G__6026, G__6027, G__6028, G__6029, G__6030, G__6031, G__6032);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__6033 = a;
  var G__6034 = b;
  var G__6035 = c;
  var G__6036 = d;
  var G__6037 = e;
  var G__6038 = f;
  var G__6039 = g;
  var G__6040 = h;
  var G__6041 = i;
  var G__6042 = j;
  var G__6043 = k;
  var G__6044 = l;
  var G__6045 = m;
  var G__6046 = n;
  var G__6047 = o;
  var G__6048 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6033, G__6034, G__6035, G__6036, G__6037, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045, G__6046, G__6047, G__6048) : self__.afn.call(null, G__6033, G__6034, G__6035, G__6036, G__6037, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044, G__6045, G__6046, G__6047, G__6048);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__6049 = a;
  var G__6050 = b;
  var G__6051 = c;
  var G__6052 = d;
  var G__6053 = e;
  var G__6054 = f;
  var G__6055 = g;
  var G__6056 = h;
  var G__6057 = i;
  var G__6058 = j;
  var G__6059 = k;
  var G__6060 = l;
  var G__6061 = m;
  var G__6062 = n;
  var G__6063 = o;
  var G__6064 = p;
  var G__6065 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6049, G__6050, G__6051, G__6052, G__6053, G__6054, G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061, G__6062, G__6063, G__6064, G__6065) : self__.afn.call(null, G__6049, G__6050, G__6051, G__6052, G__6053, G__6054, G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061, G__6062, G__6063, G__6064, G__6065);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__6066 = a;
  var G__6067 = b;
  var G__6068 = c;
  var G__6069 = d;
  var G__6070 = e;
  var G__6071 = f;
  var G__6072 = g;
  var G__6073 = h;
  var G__6074 = i;
  var G__6075 = j;
  var G__6076 = k;
  var G__6077 = l;
  var G__6078 = m;
  var G__6079 = n;
  var G__6080 = o;
  var G__6081 = p;
  var G__6082 = q;
  var G__6083 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6066, G__6067, G__6068, G__6069, G__6070, G__6071, G__6072, G__6073, G__6074, G__6075, G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082, G__6083) : self__.afn.call(null, G__6066, G__6067, G__6068, G__6069, G__6070, G__6071, G__6072, G__6073, G__6074, G__6075, G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082, G__6083);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__6084 = a;
  var G__6085 = b;
  var G__6086 = c;
  var G__6087 = d;
  var G__6088 = e;
  var G__6089 = f;
  var G__6090 = g;
  var G__6091 = h;
  var G__6092 = i;
  var G__6093 = j;
  var G__6094 = k;
  var G__6095 = l;
  var G__6096 = m;
  var G__6097 = n;
  var G__6098 = o;
  var G__6099 = p;
  var G__6100 = q;
  var G__6101 = r;
  var G__6102 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6084, G__6085, G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102) : self__.afn.call(null, G__6084, G__6085, G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__6103 = a;
  var G__6104 = b;
  var G__6105 = c;
  var G__6106 = d;
  var G__6107 = e;
  var G__6108 = f;
  var G__6109 = g;
  var G__6110 = h;
  var G__6111 = i;
  var G__6112 = j;
  var G__6113 = k;
  var G__6114 = l;
  var G__6115 = m;
  var G__6116 = n;
  var G__6117 = o;
  var G__6118 = p;
  var G__6119 = q;
  var G__6120 = r;
  var G__6121 = s;
  var G__6122 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122) : self__.afn.call(null, G__6103, G__6104, G__6105, G__6106, G__6107, G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121, G__6122);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6123 = self__.afn;
  var G__6124 = a;
  var G__6125 = b;
  var G__6126 = c;
  var G__6127 = d;
  var G__6128 = e;
  var G__6129 = f;
  var G__6130 = g;
  var G__6131 = h;
  var G__6132 = i;
  var G__6133 = j;
  var G__6134 = k;
  var G__6135 = l;
  var G__6136 = m;
  var G__6137 = n;
  var G__6138 = o;
  var G__6139 = p;
  var G__6140 = q;
  var G__6141 = r;
  var G__6142 = s;
  var G__6143 = t;
  var G__6144 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144) : cljs.core.apply.call(null, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136, G__6137, G__6138, G__6139, G__6140, G__6141, 
  G__6142, G__6143, G__6144);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__6149 = o;
    if (G__6149) {
      var bit__3908__auto__ = G__6149.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__3908__auto__ || G__6149.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6149.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6149);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6149);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3215__auto__ = !(o == null);
    if (and__3215__auto__) {
      var G__6153 = o;
      if (G__6153) {
        var bit__3908__auto__ = G__6153.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__3908__auto__ || G__6153.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6153.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6153);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6153);
      }
    } else {
      return and__3215__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__6156__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6157 = ret;
            var G__6158 = cljs.core.first(ks);
            var G__6159 = cljs.core.next(ks);
            coll = G__6157;
            k = G__6158;
            ks = G__6159;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6156 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6160__i = 0, G__6160__a = new Array(arguments.length - 2);
        while (G__6160__i < G__6160__a.length) {
          G__6160__a[G__6160__i] = arguments[G__6160__i + 2];
          ++G__6160__i;
        }
        ks = new cljs.core.IndexedSeq(G__6160__a, 0);
      }
      return G__6156__delegate.call(this, coll, k, ks);
    };
    G__6156.cljs$lang$maxFixedArity = 2;
    G__6156.cljs$lang$applyTo = function(arglist__6161) {
      var coll = cljs.core.first(arglist__6161);
      arglist__6161 = cljs.core.next(arglist__6161);
      var k = cljs.core.first(arglist__6161);
      var ks = cljs.core.rest(arglist__6161);
      return G__6156__delegate(coll, k, ks);
    };
    G__6156.cljs$core$IFn$_invoke$arity$variadic = G__6156__delegate;
    return G__6156;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__6162 = null;
        if (arguments.length > 2) {
          var G__6163__i = 0, G__6163__a = new Array(arguments.length - 2);
          while (G__6163__i < G__6163__a.length) {
            G__6163__a[G__6163__i] = arguments[G__6163__i + 2];
            ++G__6163__i;
          }
          G__6162 = new cljs.core.IndexedSeq(G__6163__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6162);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6165 = x;
    if (G__6165) {
      var bit__3908__auto__ = G__6165.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__3908__auto__ || G__6165.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6165.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6165);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6165);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6167 = x;
    if (G__6167) {
      var bit__3908__auto__ = G__6167.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__3908__auto__ || G__6167.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6167.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6167);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6167);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6169 = x;
  if (G__6169) {
    var bit__3908__auto__ = G__6169.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__3908__auto__ || G__6169.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6169.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6169);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6169);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6171 = x;
  if (G__6171) {
    var bit__3908__auto__ = G__6171.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__3908__auto__ || G__6171.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6171.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6171);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6171);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6173 = x;
  if (G__6173) {
    var bit__3908__auto__ = G__6173.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__3908__auto__ || G__6173.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6173.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6173);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6173);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6175 = x;
  if (G__6175) {
    var bit__3908__auto__ = G__6175.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__3908__auto__ || G__6175.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6175.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6175);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6175);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6177 = x;
    if (G__6177) {
      var bit__3908__auto__ = G__6177.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__3908__auto__ || G__6177.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6177.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6177);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6177);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6179 = x;
  if (G__6179) {
    var bit__3908__auto__ = G__6179.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__3908__auto__ || G__6179.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6179.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6179);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6179);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6181 = x;
  if (G__6181) {
    var bit__3901__auto__ = G__6181.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__3901__auto__ || G__6181.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6187 = {};
    return obj6187;
  };
  var js_obj__1 = function() {
    var G__6190__delegate = function(keyvals) {
      var G__6188 = goog.object.create;
      var G__6189 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6188, G__6189) : cljs.core.apply.call(null, G__6188, G__6189);
    };
    var G__6190 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__6191__i = 0, G__6191__a = new Array(arguments.length - 0);
        while (G__6191__i < G__6191__a.length) {
          G__6191__a[G__6191__i] = arguments[G__6191__i + 0];
          ++G__6191__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__6191__a, 0);
      }
      return G__6190__delegate.call(this, keyvals);
    };
    G__6190.cljs$lang$maxFixedArity = 0;
    G__6190.cljs$lang$applyTo = function(arglist__6192) {
      var keyvals = cljs.core.seq(arglist__6192);
      return G__6190__delegate(keyvals);
    };
    G__6190.cljs$core$IFn$_invoke$arity$variadic = G__6190__delegate;
    return G__6190;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__6193 = null;
        if (arguments.length > 0) {
          var G__6194__i = 0, G__6194__a = new Array(arguments.length - 0);
          while (G__6194__i < G__6194__a.length) {
            G__6194__a[G__6194__i] = arguments[G__6194__i + 0];
            ++G__6194__i;
          }
          G__6193 = new cljs.core.IndexedSeq(G__6194__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6193);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__6197_6199 = obj;
  var G__6198_6200 = function(G__6197_6199, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6197_6199, keys);
  goog.object.forEach(G__6197_6199, G__6198_6200);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6201 = i__$1 + 1;
      var G__6202 = j__$1 + 1;
      var G__6203 = len__$1 - 1;
      i__$1 = G__6201;
      j__$1 = G__6202;
      len__$1 = G__6203;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6204 = i__$1 - 1;
      var G__6205 = j__$1 - 1;
      var G__6206 = len__$1 - 1;
      i__$1 = G__6204;
      j__$1 = G__6205;
      len__$1 = G__6206;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6208 = {};
  return obj6208;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6210 = s;
    if (G__6210) {
      var bit__3908__auto__ = G__6210.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__3908__auto__ || G__6210.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6210.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6210);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6210);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6212 = s;
  if (G__6212) {
    var bit__3908__auto__ = G__6212.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__3908__auto__ || G__6212.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6212.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6212);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6212);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3227__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3227__auto__) {
    return or__3227__auto__;
  } else {
    var G__6216 = f;
    if (G__6216) {
      var bit__3908__auto__ = G__6216.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__3908__auto__ || G__6216.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6216.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6216);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6216);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__6229 = n;
    return isNaN(G__6229);
  }()) && !(n === Infinity) && function() {
    var G__6230 = n;
    return parseFloat(G__6230);
  }() === function() {
    var G__6231 = n;
    var G__6232 = 10;
    return parseInt(G__6231, G__6232);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6233__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__6234 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__6235 = etc;
              s = G__6234;
              xs = G__6235;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6233 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6236__i = 0, G__6236__a = new Array(arguments.length - 2);
        while (G__6236__i < G__6236__a.length) {
          G__6236__a[G__6236__i] = arguments[G__6236__i + 2];
          ++G__6236__i;
        }
        more = new cljs.core.IndexedSeq(G__6236__a, 0);
      }
      return G__6233__delegate.call(this, x, y, more);
    };
    G__6233.cljs$lang$maxFixedArity = 2;
    G__6233.cljs$lang$applyTo = function(arglist__6237) {
      var x = cljs.core.first(arglist__6237);
      arglist__6237 = cljs.core.next(arglist__6237);
      var y = cljs.core.first(arglist__6237);
      var more = cljs.core.rest(arglist__6237);
      return G__6233__delegate(x, y, more);
    };
    G__6233.cljs$core$IFn$_invoke$arity$variadic = G__6233__delegate;
    return G__6233;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__6238 = null;
        if (arguments.length > 2) {
          var G__6239__i = 0, G__6239__a = new Array(arguments.length - 2);
          while (G__6239__i < G__6239__a.length) {
            G__6239__a[G__6239__i] = arguments[G__6239__i + 2];
            ++G__6239__i;
          }
          G__6238 = new cljs.core.IndexedSeq(G__6239__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6238);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__6243 = x;
            if (G__6243) {
              var bit__3901__auto__ = G__6243.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__3901__auto__ || G__6243.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__6244 = x;
            var G__6245 = y;
            return goog.array.defaultCompare(G__6244, G__6245);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6250 = xs;
        var G__6251 = ys;
        var G__6252 = len;
        var G__6253 = n + 1;
        xs = G__6250;
        ys = G__6251;
        len = G__6252;
        n = G__6253;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__6258 = x;
        var G__6259 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6258, G__6259) : f.call(null, G__6258, G__6259);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__6260 = y;
            var G__6261 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6260, G__6261) : f.call(null, G__6260, G__6261);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__6267 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6267) : cljs.core.to_array.call(null, G__6267);
      }();
      var G__6268_6270 = a;
      var G__6269_6271 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__6268_6270, G__6269_6271);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__6277 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6277) : keyfn.call(null, G__6277);
      }(), function() {
        var G__6278 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6278) : keyfn.call(null, G__6278);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__6284 = f;
      var G__6285 = cljs.core.first(s);
      var G__6286 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6284, G__6285, G__6286) : cljs.core.reduce.call(null, G__6284, G__6285, G__6286);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__6287 = val__$1;
          var G__6288 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6287, G__6288) : f.call(null, G__6287, G__6288);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6289 = nval;
          var G__6290 = cljs.core.next(coll__$1);
          val__$1 = G__6289;
          coll__$1 = G__6290;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__6294 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6294) : cljs.core.to_array.call(null, G__6294);
  }();
  var G__6295_6297 = a;
  goog.array.shuffle(G__6295_6297);
  var G__6296 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6296) : cljs.core.vec.call(null, G__6296);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6300 = coll;
      if (G__6300) {
        var bit__3901__auto__ = G__6300.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__3901__auto__ || G__6300.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6301 = coll;
      if (G__6301) {
        var bit__3901__auto__ = G__6301.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__3901__auto__ || G__6301.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6310 = null;
      var G__6310__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__6310__1 = function(x) {
        var G__6307 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6307) : cf.call(null, G__6307);
      };
      var G__6310__2 = function(x, y) {
        var G__6308 = x;
        var G__6309 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6308, G__6309) : f.call(null, G__6308, G__6309);
      };
      G__6310 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6310__0.call(this);
          case 1:
            return G__6310__1.call(this, x);
          case 2:
            return G__6310__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6310.cljs$core$IFn$_invoke$arity$0 = G__6310__0;
      G__6310.cljs$core$IFn$_invoke$arity$1 = G__6310__1;
      G__6310.cljs$core$IFn$_invoke$arity$2 = G__6310__2;
      return G__6310;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__6317 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6317) : xform.call(null, G__6317);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__6318 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6318) : f__$1.call(null, G__6318);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6319__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__6319 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6320__i = 0, G__6320__a = new Array(arguments.length - 2);
        while (G__6320__i < G__6320__a.length) {
          G__6320__a[G__6320__i] = arguments[G__6320__i + 2];
          ++G__6320__i;
        }
        more = new cljs.core.IndexedSeq(G__6320__a, 0);
      }
      return G__6319__delegate.call(this, x, y, more);
    };
    G__6319.cljs$lang$maxFixedArity = 2;
    G__6319.cljs$lang$applyTo = function(arglist__6321) {
      var x = cljs.core.first(arglist__6321);
      arglist__6321 = cljs.core.next(arglist__6321);
      var y = cljs.core.first(arglist__6321);
      var more = cljs.core.rest(arglist__6321);
      return G__6319__delegate(x, y, more);
    };
    G__6319.cljs$core$IFn$_invoke$arity$variadic = G__6319__delegate;
    return G__6319;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__6322 = null;
        if (arguments.length > 2) {
          var G__6323__i = 0, G__6323__a = new Array(arguments.length - 2);
          while (G__6323__i < G__6323__a.length) {
            G__6323__a[G__6323__i] = arguments[G__6323__i + 2];
            ++G__6323__i;
          }
          G__6322 = new cljs.core.IndexedSeq(G__6323__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6322);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6324__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__6324 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6325__i = 0, G__6325__a = new Array(arguments.length - 2);
        while (G__6325__i < G__6325__a.length) {
          G__6325__a[G__6325__i] = arguments[G__6325__i + 2];
          ++G__6325__i;
        }
        more = new cljs.core.IndexedSeq(G__6325__a, 0);
      }
      return G__6324__delegate.call(this, x, y, more);
    };
    G__6324.cljs$lang$maxFixedArity = 2;
    G__6324.cljs$lang$applyTo = function(arglist__6326) {
      var x = cljs.core.first(arglist__6326);
      arglist__6326 = cljs.core.next(arglist__6326);
      var y = cljs.core.first(arglist__6326);
      var more = cljs.core.rest(arglist__6326);
      return G__6324__delegate(x, y, more);
    };
    G__6324.cljs$core$IFn$_invoke$arity$variadic = G__6324__delegate;
    return G__6324;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__6327 = null;
        if (arguments.length > 2) {
          var G__6328__i = 0, G__6328__a = new Array(arguments.length - 2);
          while (G__6328__i < G__6328__a.length) {
            G__6328__a[G__6328__i] = arguments[G__6328__i + 2];
            ++G__6328__i;
          }
          G__6327 = new cljs.core.IndexedSeq(G__6328__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6327);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6329__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__6329 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6330__i = 0, G__6330__a = new Array(arguments.length - 2);
        while (G__6330__i < G__6330__a.length) {
          G__6330__a[G__6330__i] = arguments[G__6330__i + 2];
          ++G__6330__i;
        }
        more = new cljs.core.IndexedSeq(G__6330__a, 0);
      }
      return G__6329__delegate.call(this, x, y, more);
    };
    G__6329.cljs$lang$maxFixedArity = 2;
    G__6329.cljs$lang$applyTo = function(arglist__6331) {
      var x = cljs.core.first(arglist__6331);
      arglist__6331 = cljs.core.next(arglist__6331);
      var y = cljs.core.first(arglist__6331);
      var more = cljs.core.rest(arglist__6331);
      return G__6329__delegate(x, y, more);
    };
    G__6329.cljs$core$IFn$_invoke$arity$variadic = G__6329__delegate;
    return G__6329;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__6332 = null;
        if (arguments.length > 2) {
          var G__6333__i = 0, G__6333__a = new Array(arguments.length - 2);
          while (G__6333__i < G__6333__a.length) {
            G__6333__a[G__6333__i] = arguments[G__6333__i + 2];
            ++G__6333__i;
          }
          G__6332 = new cljs.core.IndexedSeq(G__6333__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6332);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6338__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6338 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6339__i = 0, G__6339__a = new Array(arguments.length - 2);
        while (G__6339__i < G__6339__a.length) {
          G__6339__a[G__6339__i] = arguments[G__6339__i + 2];
          ++G__6339__i;
        }
        more = new cljs.core.IndexedSeq(G__6339__a, 0);
      }
      return G__6338__delegate.call(this, x, y, more);
    };
    G__6338.cljs$lang$maxFixedArity = 2;
    G__6338.cljs$lang$applyTo = function(arglist__6340) {
      var x = cljs.core.first(arglist__6340);
      arglist__6340 = cljs.core.next(arglist__6340);
      var y = cljs.core.first(arglist__6340);
      var more = cljs.core.rest(arglist__6340);
      return G__6338__delegate(x, y, more);
    };
    G__6338.cljs$core$IFn$_invoke$arity$variadic = G__6338__delegate;
    return G__6338;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__6341 = null;
        if (arguments.length > 2) {
          var G__6342__i = 0, G__6342__a = new Array(arguments.length - 2);
          while (G__6342__i < G__6342__a.length) {
            G__6342__a[G__6342__i] = arguments[G__6342__i + 2];
            ++G__6342__i;
          }
          G__6341 = new cljs.core.IndexedSeq(G__6342__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6341);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6343__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__6344 = y;
            var G__6345 = cljs.core.first(more);
            var G__6346 = cljs.core.next(more);
            x = G__6344;
            y = G__6345;
            more = G__6346;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6343 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6347__i = 0, G__6347__a = new Array(arguments.length - 2);
        while (G__6347__i < G__6347__a.length) {
          G__6347__a[G__6347__i] = arguments[G__6347__i + 2];
          ++G__6347__i;
        }
        more = new cljs.core.IndexedSeq(G__6347__a, 0);
      }
      return G__6343__delegate.call(this, x, y, more);
    };
    G__6343.cljs$lang$maxFixedArity = 2;
    G__6343.cljs$lang$applyTo = function(arglist__6348) {
      var x = cljs.core.first(arglist__6348);
      arglist__6348 = cljs.core.next(arglist__6348);
      var y = cljs.core.first(arglist__6348);
      var more = cljs.core.rest(arglist__6348);
      return G__6343__delegate(x, y, more);
    };
    G__6343.cljs$core$IFn$_invoke$arity$variadic = G__6343__delegate;
    return G__6343;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__6349 = null;
        if (arguments.length > 2) {
          var G__6350__i = 0, G__6350__a = new Array(arguments.length - 2);
          while (G__6350__i < G__6350__a.length) {
            G__6350__a[G__6350__i] = arguments[G__6350__i + 2];
            ++G__6350__i;
          }
          G__6349 = new cljs.core.IndexedSeq(G__6350__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6349);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6351__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__6352 = y;
            var G__6353 = cljs.core.first(more);
            var G__6354 = cljs.core.next(more);
            x = G__6352;
            y = G__6353;
            more = G__6354;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6351 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6355__i = 0, G__6355__a = new Array(arguments.length - 2);
        while (G__6355__i < G__6355__a.length) {
          G__6355__a[G__6355__i] = arguments[G__6355__i + 2];
          ++G__6355__i;
        }
        more = new cljs.core.IndexedSeq(G__6355__a, 0);
      }
      return G__6351__delegate.call(this, x, y, more);
    };
    G__6351.cljs$lang$maxFixedArity = 2;
    G__6351.cljs$lang$applyTo = function(arglist__6356) {
      var x = cljs.core.first(arglist__6356);
      arglist__6356 = cljs.core.next(arglist__6356);
      var y = cljs.core.first(arglist__6356);
      var more = cljs.core.rest(arglist__6356);
      return G__6351__delegate(x, y, more);
    };
    G__6351.cljs$core$IFn$_invoke$arity$variadic = G__6351__delegate;
    return G__6351;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__6357 = null;
        if (arguments.length > 2) {
          var G__6358__i = 0, G__6358__a = new Array(arguments.length - 2);
          while (G__6358__i < G__6358__a.length) {
            G__6358__a[G__6358__i] = arguments[G__6358__i + 2];
            ++G__6358__i;
          }
          G__6357 = new cljs.core.IndexedSeq(G__6358__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6357);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6359__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__6360 = y;
            var G__6361 = cljs.core.first(more);
            var G__6362 = cljs.core.next(more);
            x = G__6360;
            y = G__6361;
            more = G__6362;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6359 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6363__i = 0, G__6363__a = new Array(arguments.length - 2);
        while (G__6363__i < G__6363__a.length) {
          G__6363__a[G__6363__i] = arguments[G__6363__i + 2];
          ++G__6363__i;
        }
        more = new cljs.core.IndexedSeq(G__6363__a, 0);
      }
      return G__6359__delegate.call(this, x, y, more);
    };
    G__6359.cljs$lang$maxFixedArity = 2;
    G__6359.cljs$lang$applyTo = function(arglist__6364) {
      var x = cljs.core.first(arglist__6364);
      arglist__6364 = cljs.core.next(arglist__6364);
      var y = cljs.core.first(arglist__6364);
      var more = cljs.core.rest(arglist__6364);
      return G__6359__delegate(x, y, more);
    };
    G__6359.cljs$core$IFn$_invoke$arity$variadic = G__6359__delegate;
    return G__6359;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__6365 = null;
        if (arguments.length > 2) {
          var G__6366__i = 0, G__6366__a = new Array(arguments.length - 2);
          while (G__6366__i < G__6366__a.length) {
            G__6366__a[G__6366__i] = arguments[G__6366__i + 2];
            ++G__6366__i;
          }
          G__6365 = new cljs.core.IndexedSeq(G__6366__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6365);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6367__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__6368 = y;
            var G__6369 = cljs.core.first(more);
            var G__6370 = cljs.core.next(more);
            x = G__6368;
            y = G__6369;
            more = G__6370;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6367 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6371__i = 0, G__6371__a = new Array(arguments.length - 2);
        while (G__6371__i < G__6371__a.length) {
          G__6371__a[G__6371__i] = arguments[G__6371__i + 2];
          ++G__6371__i;
        }
        more = new cljs.core.IndexedSeq(G__6371__a, 0);
      }
      return G__6367__delegate.call(this, x, y, more);
    };
    G__6367.cljs$lang$maxFixedArity = 2;
    G__6367.cljs$lang$applyTo = function(arglist__6372) {
      var x = cljs.core.first(arglist__6372);
      arglist__6372 = cljs.core.next(arglist__6372);
      var y = cljs.core.first(arglist__6372);
      var more = cljs.core.rest(arglist__6372);
      return G__6367__delegate(x, y, more);
    };
    G__6367.cljs$core$IFn$_invoke$arity$variadic = G__6367__delegate;
    return G__6367;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__6373 = null;
        if (arguments.length > 2) {
          var G__6374__i = 0, G__6374__a = new Array(arguments.length - 2);
          while (G__6374__i < G__6374__a.length) {
            G__6374__a[G__6374__i] = arguments[G__6374__i + 2];
            ++G__6374__i;
          }
          G__6373 = new cljs.core.IndexedSeq(G__6374__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6373);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3544__auto__ = x;
    var y__3545__auto__ = y;
    return x__3544__auto__ > y__3545__auto__ ? x__3544__auto__ : y__3545__auto__;
  };
  var max__3 = function() {
    var G__6375__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__3544__auto__ = x;
        var y__3545__auto__ = y;
        return x__3544__auto__ > y__3545__auto__ ? x__3544__auto__ : y__3545__auto__;
      }(), more);
    };
    var G__6375 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6376__i = 0, G__6376__a = new Array(arguments.length - 2);
        while (G__6376__i < G__6376__a.length) {
          G__6376__a[G__6376__i] = arguments[G__6376__i + 2];
          ++G__6376__i;
        }
        more = new cljs.core.IndexedSeq(G__6376__a, 0);
      }
      return G__6375__delegate.call(this, x, y, more);
    };
    G__6375.cljs$lang$maxFixedArity = 2;
    G__6375.cljs$lang$applyTo = function(arglist__6377) {
      var x = cljs.core.first(arglist__6377);
      arglist__6377 = cljs.core.next(arglist__6377);
      var y = cljs.core.first(arglist__6377);
      var more = cljs.core.rest(arglist__6377);
      return G__6375__delegate(x, y, more);
    };
    G__6375.cljs$core$IFn$_invoke$arity$variadic = G__6375__delegate;
    return G__6375;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__6378 = null;
        if (arguments.length > 2) {
          var G__6379__i = 0, G__6379__a = new Array(arguments.length - 2);
          while (G__6379__i < G__6379__a.length) {
            G__6379__a[G__6379__i] = arguments[G__6379__i + 2];
            ++G__6379__i;
          }
          G__6378 = new cljs.core.IndexedSeq(G__6379__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6378);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3551__auto__ = x;
    var y__3552__auto__ = y;
    return x__3551__auto__ < y__3552__auto__ ? x__3551__auto__ : y__3552__auto__;
  };
  var min__3 = function() {
    var G__6380__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__3551__auto__ = x;
        var y__3552__auto__ = y;
        return x__3551__auto__ < y__3552__auto__ ? x__3551__auto__ : y__3552__auto__;
      }(), more);
    };
    var G__6380 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6381__i = 0, G__6381__a = new Array(arguments.length - 2);
        while (G__6381__i < G__6381__a.length) {
          G__6381__a[G__6381__i] = arguments[G__6381__i + 2];
          ++G__6381__i;
        }
        more = new cljs.core.IndexedSeq(G__6381__a, 0);
      }
      return G__6380__delegate.call(this, x, y, more);
    };
    G__6380.cljs$lang$maxFixedArity = 2;
    G__6380.cljs$lang$applyTo = function(arglist__6382) {
      var x = cljs.core.first(arglist__6382);
      arglist__6382 = cljs.core.next(arglist__6382);
      var y = cljs.core.first(arglist__6382);
      var more = cljs.core.rest(arglist__6382);
      return G__6380__delegate(x, y, more);
    };
    G__6380.cljs$core$IFn$_invoke$arity$variadic = G__6380__delegate;
    return G__6380;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__6383 = null;
        if (arguments.length > 2) {
          var G__6384__i = 0, G__6384__a = new Array(arguments.length - 2);
          while (G__6384__i < G__6384__a.length) {
            G__6384__a[G__6384__i] = arguments[G__6384__i + 2];
            ++G__6384__i;
          }
          G__6383 = new cljs.core.IndexedSeq(G__6384__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6383);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6385__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__6385 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6386__i = 0, G__6386__a = new Array(arguments.length - 2);
        while (G__6386__i < G__6386__a.length) {
          G__6386__a[G__6386__i] = arguments[G__6386__i + 2];
          ++G__6386__i;
        }
        more = new cljs.core.IndexedSeq(G__6386__a, 0);
      }
      return G__6385__delegate.call(this, x, y, more);
    };
    G__6385.cljs$lang$maxFixedArity = 2;
    G__6385.cljs$lang$applyTo = function(arglist__6387) {
      var x = cljs.core.first(arglist__6387);
      arglist__6387 = cljs.core.next(arglist__6387);
      var y = cljs.core.first(arglist__6387);
      var more = cljs.core.rest(arglist__6387);
      return G__6385__delegate(x, y, more);
    };
    G__6385.cljs$core$IFn$_invoke$arity$variadic = G__6385__delegate;
    return G__6385;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__6388 = null;
        if (arguments.length > 2) {
          var G__6389__i = 0, G__6389__a = new Array(arguments.length - 2);
          while (G__6389__i < G__6389__a.length) {
            G__6389__a[G__6389__i] = arguments[G__6389__i + 2];
            ++G__6389__i;
          }
          G__6388 = new cljs.core.IndexedSeq(G__6389__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6388);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6390__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__6390 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6391__i = 0, G__6391__a = new Array(arguments.length - 2);
        while (G__6391__i < G__6391__a.length) {
          G__6391__a[G__6391__i] = arguments[G__6391__i + 2];
          ++G__6391__i;
        }
        more = new cljs.core.IndexedSeq(G__6391__a, 0);
      }
      return G__6390__delegate.call(this, x, y, more);
    };
    G__6390.cljs$lang$maxFixedArity = 2;
    G__6390.cljs$lang$applyTo = function(arglist__6392) {
      var x = cljs.core.first(arglist__6392);
      arglist__6392 = cljs.core.next(arglist__6392);
      var y = cljs.core.first(arglist__6392);
      var more = cljs.core.rest(arglist__6392);
      return G__6390__delegate(x, y, more);
    };
    G__6390.cljs$core$IFn$_invoke$arity$variadic = G__6390__delegate;
    return G__6390;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__6393 = null;
        if (arguments.length > 2) {
          var G__6394__i = 0, G__6394__a = new Array(arguments.length - 2);
          while (G__6394__i < G__6394__a.length) {
            G__6394__a[G__6394__i] = arguments[G__6394__i + 2];
            ++G__6394__i;
          }
          G__6393 = new cljs.core.IndexedSeq(G__6394__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6393);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6399__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6399 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6400__i = 0, G__6400__a = new Array(arguments.length - 2);
        while (G__6400__i < G__6400__a.length) {
          G__6400__a[G__6400__i] = arguments[G__6400__i + 2];
          ++G__6400__i;
        }
        more = new cljs.core.IndexedSeq(G__6400__a, 0);
      }
      return G__6399__delegate.call(this, x, y, more);
    };
    G__6399.cljs$lang$maxFixedArity = 2;
    G__6399.cljs$lang$applyTo = function(arglist__6401) {
      var x = cljs.core.first(arglist__6401);
      arglist__6401 = cljs.core.next(arglist__6401);
      var y = cljs.core.first(arglist__6401);
      var more = cljs.core.rest(arglist__6401);
      return G__6399__delegate(x, y, more);
    };
    G__6399.cljs$core$IFn$_invoke$arity$variadic = G__6399__delegate;
    return G__6399;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__6402 = null;
        if (arguments.length > 2) {
          var G__6403__i = 0, G__6403__a = new Array(arguments.length - 2);
          while (G__6403__i < G__6403__a.length) {
            G__6403__a[G__6403__i] = arguments[G__6403__i + 2];
            ++G__6403__i;
          }
          G__6402 = new cljs.core.IndexedSeq(G__6403__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6402);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6404__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__6404 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6405__i = 0, G__6405__a = new Array(arguments.length - 2);
        while (G__6405__i < G__6405__a.length) {
          G__6405__a[G__6405__i] = arguments[G__6405__i + 2];
          ++G__6405__i;
        }
        more = new cljs.core.IndexedSeq(G__6405__a, 0);
      }
      return G__6404__delegate.call(this, x, y, more);
    };
    G__6404.cljs$lang$maxFixedArity = 2;
    G__6404.cljs$lang$applyTo = function(arglist__6406) {
      var x = cljs.core.first(arglist__6406);
      arglist__6406 = cljs.core.next(arglist__6406);
      var y = cljs.core.first(arglist__6406);
      var more = cljs.core.rest(arglist__6406);
      return G__6404__delegate(x, y, more);
    };
    G__6404.cljs$core$IFn$_invoke$arity$variadic = G__6404__delegate;
    return G__6404;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__6407 = null;
        if (arguments.length > 2) {
          var G__6408__i = 0, G__6408__a = new Array(arguments.length - 2);
          while (G__6408__i < G__6408__a.length) {
            G__6408__a[G__6408__i] = arguments[G__6408__i + 2];
            ++G__6408__i;
          }
          G__6407 = new cljs.core.IndexedSeq(G__6408__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6407);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6409__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__6409 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6410__i = 0, G__6410__a = new Array(arguments.length - 2);
        while (G__6410__i < G__6410__a.length) {
          G__6410__a[G__6410__i] = arguments[G__6410__i + 2];
          ++G__6410__i;
        }
        more = new cljs.core.IndexedSeq(G__6410__a, 0);
      }
      return G__6409__delegate.call(this, x, y, more);
    };
    G__6409.cljs$lang$maxFixedArity = 2;
    G__6409.cljs$lang$applyTo = function(arglist__6411) {
      var x = cljs.core.first(arglist__6411);
      arglist__6411 = cljs.core.next(arglist__6411);
      var y = cljs.core.first(arglist__6411);
      var more = cljs.core.rest(arglist__6411);
      return G__6409__delegate(x, y, more);
    };
    G__6409.cljs$core$IFn$_invoke$arity$variadic = G__6409__delegate;
    return G__6409;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__6412 = null;
        if (arguments.length > 2) {
          var G__6413__i = 0, G__6413__a = new Array(arguments.length - 2);
          while (G__6413__i < G__6413__a.length) {
            G__6413__a[G__6413__i] = arguments[G__6413__i + 2];
            ++G__6413__i;
          }
          G__6412 = new cljs.core.IndexedSeq(G__6413__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6412);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__6416 = x;
  var G__6417 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6416, G__6417) : cljs.core.mod.call(null, G__6416, G__6417);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6418__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__6418 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6419__i = 0, G__6419__a = new Array(arguments.length - 2);
        while (G__6419__i < G__6419__a.length) {
          G__6419__a[G__6419__i] = arguments[G__6419__i + 2];
          ++G__6419__i;
        }
        more = new cljs.core.IndexedSeq(G__6419__a, 0);
      }
      return G__6418__delegate.call(this, x, y, more);
    };
    G__6418.cljs$lang$maxFixedArity = 2;
    G__6418.cljs$lang$applyTo = function(arglist__6420) {
      var x = cljs.core.first(arglist__6420);
      arglist__6420 = cljs.core.next(arglist__6420);
      var y = cljs.core.first(arglist__6420);
      var more = cljs.core.rest(arglist__6420);
      return G__6418__delegate(x, y, more);
    };
    G__6418.cljs$core$IFn$_invoke$arity$variadic = G__6418__delegate;
    return G__6418;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__6421 = null;
        if (arguments.length > 2) {
          var G__6422__i = 0, G__6422__a = new Array(arguments.length - 2);
          while (G__6422__i < G__6422__a.length) {
            G__6422__a[G__6422__i] = arguments[G__6422__i + 2];
            ++G__6422__i;
          }
          G__6421 = new cljs.core.IndexedSeq(G__6422__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6421);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6423__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__6423 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6424__i = 0, G__6424__a = new Array(arguments.length - 2);
        while (G__6424__i < G__6424__a.length) {
          G__6424__a[G__6424__i] = arguments[G__6424__i + 2];
          ++G__6424__i;
        }
        more = new cljs.core.IndexedSeq(G__6424__a, 0);
      }
      return G__6423__delegate.call(this, x, y, more);
    };
    G__6423.cljs$lang$maxFixedArity = 2;
    G__6423.cljs$lang$applyTo = function(arglist__6425) {
      var x = cljs.core.first(arglist__6425);
      arglist__6425 = cljs.core.next(arglist__6425);
      var y = cljs.core.first(arglist__6425);
      var more = cljs.core.rest(arglist__6425);
      return G__6423__delegate(x, y, more);
    };
    G__6423.cljs$core$IFn$_invoke$arity$variadic = G__6423__delegate;
    return G__6423;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__6426 = null;
        if (arguments.length > 2) {
          var G__6427__i = 0, G__6427__a = new Array(arguments.length - 2);
          while (G__6427__i < G__6427__a.length) {
            G__6427__a[G__6427__i] = arguments[G__6427__i + 2];
            ++G__6427__i;
          }
          G__6426 = new cljs.core.IndexedSeq(G__6427__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6426);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__6430 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6430) : Math.floor.call(null, G__6430);
  } else {
    var G__6431 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6431) : Math.ceil.call(null, G__6431);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__6432__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__6432 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6433__i = 0, G__6433__a = new Array(arguments.length - 2);
        while (G__6433__i < G__6433__a.length) {
          G__6433__a[G__6433__i] = arguments[G__6433__i + 2];
          ++G__6433__i;
        }
        more = new cljs.core.IndexedSeq(G__6433__a, 0);
      }
      return G__6432__delegate.call(this, x, y, more);
    };
    G__6432.cljs$lang$maxFixedArity = 2;
    G__6432.cljs$lang$applyTo = function(arglist__6434) {
      var x = cljs.core.first(arglist__6434);
      arglist__6434 = cljs.core.next(arglist__6434);
      var y = cljs.core.first(arglist__6434);
      var more = cljs.core.rest(arglist__6434);
      return G__6432__delegate(x, y, more);
    };
    G__6432.cljs$core$IFn$_invoke$arity$variadic = G__6432__delegate;
    return G__6432;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__6435 = null;
        if (arguments.length > 2) {
          var G__6436__i = 0, G__6436__a = new Array(arguments.length - 2);
          while (G__6436__i < G__6436__a.length) {
            G__6436__a[G__6436__i] = arguments[G__6436__i + 2];
            ++G__6436__i;
          }
          G__6435 = new cljs.core.IndexedSeq(G__6436__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6435);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__6437__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__6437 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6438__i = 0, G__6438__a = new Array(arguments.length - 2);
        while (G__6438__i < G__6438__a.length) {
          G__6438__a[G__6438__i] = arguments[G__6438__i + 2];
          ++G__6438__i;
        }
        more = new cljs.core.IndexedSeq(G__6438__a, 0);
      }
      return G__6437__delegate.call(this, x, y, more);
    };
    G__6437.cljs$lang$maxFixedArity = 2;
    G__6437.cljs$lang$applyTo = function(arglist__6439) {
      var x = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var y = cljs.core.first(arglist__6439);
      var more = cljs.core.rest(arglist__6439);
      return G__6437__delegate(x, y, more);
    };
    G__6437.cljs$core$IFn$_invoke$arity$variadic = G__6437__delegate;
    return G__6437;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__6440 = null;
        if (arguments.length > 2) {
          var G__6441__i = 0, G__6441__a = new Array(arguments.length - 2);
          while (G__6441__i < G__6441__a.length) {
            G__6441__a[G__6441__i] = arguments[G__6441__i + 2];
            ++G__6441__i;
          }
          G__6440 = new cljs.core.IndexedSeq(G__6441__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6440);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__6442__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__6442 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6443__i = 0, G__6443__a = new Array(arguments.length - 2);
        while (G__6443__i < G__6443__a.length) {
          G__6443__a[G__6443__i] = arguments[G__6443__i + 2];
          ++G__6443__i;
        }
        more = new cljs.core.IndexedSeq(G__6443__a, 0);
      }
      return G__6442__delegate.call(this, x, y, more);
    };
    G__6442.cljs$lang$maxFixedArity = 2;
    G__6442.cljs$lang$applyTo = function(arglist__6444) {
      var x = cljs.core.first(arglist__6444);
      arglist__6444 = cljs.core.next(arglist__6444);
      var y = cljs.core.first(arglist__6444);
      var more = cljs.core.rest(arglist__6444);
      return G__6442__delegate(x, y, more);
    };
    G__6442.cljs$core$IFn$_invoke$arity$variadic = G__6442__delegate;
    return G__6442;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__6445 = null;
        if (arguments.length > 2) {
          var G__6446__i = 0, G__6446__a = new Array(arguments.length - 2);
          while (G__6446__i < G__6446__a.length) {
            G__6446__a[G__6446__i] = arguments[G__6446__i + 2];
            ++G__6446__i;
          }
          G__6445 = new cljs.core.IndexedSeq(G__6446__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6445);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__6447__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__6447 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6448__i = 0, G__6448__a = new Array(arguments.length - 2);
        while (G__6448__i < G__6448__a.length) {
          G__6448__a[G__6448__i] = arguments[G__6448__i + 2];
          ++G__6448__i;
        }
        more = new cljs.core.IndexedSeq(G__6448__a, 0);
      }
      return G__6447__delegate.call(this, x, y, more);
    };
    G__6447.cljs$lang$maxFixedArity = 2;
    G__6447.cljs$lang$applyTo = function(arglist__6449) {
      var x = cljs.core.first(arglist__6449);
      arglist__6449 = cljs.core.next(arglist__6449);
      var y = cljs.core.first(arglist__6449);
      var more = cljs.core.rest(arglist__6449);
      return G__6447__delegate(x, y, more);
    };
    G__6447.cljs$core$IFn$_invoke$arity$variadic = G__6447__delegate;
    return G__6447;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__6450 = null;
        if (arguments.length > 2) {
          var G__6451__i = 0, G__6451__a = new Array(arguments.length - 2);
          while (G__6451__i < G__6451__a.length) {
            G__6451__a[G__6451__i] = arguments[G__6451__i + 2];
            ++G__6451__i;
          }
          G__6450 = new cljs.core.IndexedSeq(G__6451__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6450);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6456__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__6457 = y;
            var G__6458 = cljs.core.first(more);
            var G__6459 = cljs.core.next(more);
            x = G__6457;
            y = G__6458;
            more = G__6459;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6456 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6460__i = 0, G__6460__a = new Array(arguments.length - 2);
        while (G__6460__i < G__6460__a.length) {
          G__6460__a[G__6460__i] = arguments[G__6460__i + 2];
          ++G__6460__i;
        }
        more = new cljs.core.IndexedSeq(G__6460__a, 0);
      }
      return G__6456__delegate.call(this, x, y, more);
    };
    G__6456.cljs$lang$maxFixedArity = 2;
    G__6456.cljs$lang$applyTo = function(arglist__6461) {
      var x = cljs.core.first(arglist__6461);
      arglist__6461 = cljs.core.next(arglist__6461);
      var y = cljs.core.first(arglist__6461);
      var more = cljs.core.rest(arglist__6461);
      return G__6456__delegate(x, y, more);
    };
    G__6456.cljs$core$IFn$_invoke$arity$variadic = G__6456__delegate;
    return G__6456;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__6462 = null;
        if (arguments.length > 2) {
          var G__6463__i = 0, G__6463__a = new Array(arguments.length - 2);
          while (G__6463__i < G__6463__a.length) {
            G__6463__a[G__6463__i] = arguments[G__6463__i + 2];
            ++G__6463__i;
          }
          G__6462 = new cljs.core.IndexedSeq(G__6463__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6462);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6464 = n__$1 - 1;
      var G__6465 = cljs.core.next(xs);
      n__$1 = G__6464;
      xs = G__6465;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__6469 = x;
      return goog.string.buildString(G__6469);
    }
  };
  var str__2 = function() {
    var G__6470__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6471 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__6472 = cljs.core.next(more);
          sb = G__6471;
          more = G__6472;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6470 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__6473__i = 0, G__6473__a = new Array(arguments.length - 1);
        while (G__6473__i < G__6473__a.length) {
          G__6473__a[G__6473__i] = arguments[G__6473__i + 1];
          ++G__6473__i;
        }
        ys = new cljs.core.IndexedSeq(G__6473__a, 0);
      }
      return G__6470__delegate.call(this, x, ys);
    };
    G__6470.cljs$lang$maxFixedArity = 1;
    G__6470.cljs$lang$applyTo = function(arglist__6474) {
      var x = cljs.core.first(arglist__6474);
      var ys = cljs.core.rest(arglist__6474);
      return G__6470__delegate(x, ys);
    };
    G__6470.cljs$core$IFn$_invoke$arity$variadic = G__6470__delegate;
    return G__6470;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__6475 = null;
        if (arguments.length > 1) {
          var G__6476__i = 0, G__6476__a = new Array(arguments.length - 1);
          while (G__6476__i < G__6476__a.length) {
            G__6476__a[G__6476__i] = arguments[G__6476__i + 1];
            ++G__6476__i;
          }
          G__6475 = new cljs.core.IndexedSeq(G__6476__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6475);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6477 = cljs.core.next(xs);
            var G__6478 = cljs.core.next(ys);
            xs = G__6477;
            ys = G__6478;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6479 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6480 = cljs.core.next(s);
        res = G__6479;
        s = G__6480;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6485 = (h + (cljs.core.hash(function() {
        var G__6483 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6483) : cljs.core.key.call(null, G__6483);
      }()) ^ cljs.core.hash(function() {
        var G__6484 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6484) : cljs.core.val.call(null, G__6484);
      }()))) % 4503599627370496;
      var G__6486 = cljs.core.next(s);
      h = G__6485;
      s = G__6486;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6487 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6488 = cljs.core.next(s__$1);
      h = G__6487;
      s__$1 = G__6488;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6499_6509 = cljs.core.seq(fn_map);
  var chunk__6500_6510 = null;
  var count__6501_6511 = 0;
  var i__6502_6512 = 0;
  while (true) {
    if (i__6502_6512 < count__6501_6511) {
      var vec__6503_6513 = chunk__6500_6510.cljs$core$IIndexed$_nth$arity$2(null, i__6502_6512);
      var key_name_6514 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6503_6513, 0, null);
      var f_6515 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6503_6513, 1, null);
      var str_name_6516 = function() {
        var G__6504 = key_name_6514;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6504) : cljs.core.name.call(null, G__6504);
      }();
      obj[str_name_6516] = f_6515;
      var G__6517 = seq__6499_6509;
      var G__6518 = chunk__6500_6510;
      var G__6519 = count__6501_6511;
      var G__6520 = i__6502_6512 + 1;
      seq__6499_6509 = G__6517;
      chunk__6500_6510 = G__6518;
      count__6501_6511 = G__6519;
      i__6502_6512 = G__6520;
      continue;
    } else {
      var temp__4126__auto___6521 = cljs.core.seq(seq__6499_6509);
      if (temp__4126__auto___6521) {
        var seq__6499_6522__$1 = temp__4126__auto___6521;
        if (cljs.core.chunked_seq_QMARK_(seq__6499_6522__$1)) {
          var c__4014__auto___6523 = function() {
            var G__6505 = seq__6499_6522__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6505) : cljs.core.chunk_first.call(null, G__6505);
          }();
          var G__6524 = function() {
            var G__6506 = seq__6499_6522__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6506) : cljs.core.chunk_rest.call(null, G__6506);
          }();
          var G__6525 = c__4014__auto___6523;
          var G__6526 = cljs.core.count(c__4014__auto___6523);
          var G__6527 = 0;
          seq__6499_6509 = G__6524;
          chunk__6500_6510 = G__6525;
          count__6501_6511 = G__6526;
          i__6502_6512 = G__6527;
          continue;
        } else {
          var vec__6507_6528 = cljs.core.first(seq__6499_6522__$1);
          var key_name_6529 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6507_6528, 0, null);
          var f_6530 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6507_6528, 1, null);
          var str_name_6531 = function() {
            var G__6508 = key_name_6529;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6508) : cljs.core.name.call(null, G__6508);
          }();
          obj[str_name_6531] = f_6530;
          var G__6532 = cljs.core.next(seq__6499_6522__$1);
          var G__6533 = null;
          var G__6534 = 0;
          var G__6535 = 0;
          seq__6499_6509 = G__6532;
          chunk__6500_6510 = G__6533;
          count__6501_6511 = G__6534;
          i__6502_6512 = G__6535;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6537 = coll;
  if (G__6537) {
    var bit__3908__auto__ = G__6537.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__3908__auto__ || G__6537.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6537.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6537);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6537);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__6538 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__6538;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6539 = i - 1;
        var G__6540 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__6539;
        r = G__6540;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__6541__i = 0, G__6541__a = new Array(arguments.length - 0);
      while (G__6541__i < G__6541__a.length) {
        G__6541__a[G__6541__i] = arguments[G__6541__i + 0];
        ++G__6541__i;
      }
      xs = new cljs.core.IndexedSeq(G__6541__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6542) {
    var xs = cljs.core.seq(arglist__6542);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3227__auto__ = coll == null;
    if (or__3227__auto__) {
      return or__3227__auto__;
    } else {
      var G__6546 = coll;
      if (G__6546) {
        var bit__3901__auto__ = G__6546.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__3901__auto__ || G__6546.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6548 = x;
  if (G__6548) {
    var bit__3908__auto__ = G__6548.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__3908__auto__ || G__6548.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6548.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6548);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6548);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3215__auto__ = cljs.core.not(a.ns);
      if (and__3215__auto__) {
        return b.ns;
      } else {
        return and__3215__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6555 = a.ns;
            var G__6556 = b.ns;
            return goog.array.defaultCompare(G__6555, G__6556);
          }();
          if (0 === nsc) {
            var G__6557 = a.name;
            var G__6558 = b.name;
            return goog.array.defaultCompare(G__6557, G__6558);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6559 = a.name;
        var G__6560 = b.name;
        return goog.array.defaultCompare(G__6559, G__6560);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3648__auto__ = self__._hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6562 = null;
  var G__6562__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6562__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6562 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6562__2.call(this, self__, coll);
      case 3:
        return G__6562__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6562.cljs$core$IFn$_invoke$arity$2 = G__6562__2;
  G__6562.cljs$core$IFn$_invoke$arity$3 = G__6562__3;
  return G__6562;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6561) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6561)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6564 = x;
    if (G__6564) {
      var bit__3901__auto__ = G__6564.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__3901__auto__ || G__6564.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__6566 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6566) : cljs.core.name.call(null, G__6566);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6567 = ls.sval();
        ls = G__6567;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6569 = s;
    if (G__6569) {
      var bit__3901__auto__ = G__6569.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__3901__auto__ || G__6569.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__6570 = cljs.core.next(s__$1);
      s__$1 = G__6570;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6571 = 0;
  var xs_6572 = cljs.core.seq(coll);
  while (true) {
    if (xs_6572) {
      ret[i_6571] = cljs.core.to_array(cljs.core.first(xs_6572));
      var G__6573 = i_6571 + 1;
      var G__6574 = cljs.core.next(xs_6572);
      i_6571 = G__6573;
      xs_6572 = G__6574;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6577 = i + 1;
          var G__6578 = cljs.core.next(s__$1);
          i = G__6577;
          s__$1 = G__6578;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4114__auto___6579 = size;
      var i_6580 = 0;
      while (true) {
        if (i_6580 < n__4114__auto___6579) {
          a[i_6580] = init_val_or_seq;
          var G__6581 = i_6580 + 1;
          i_6580 = G__6581;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6584 = i + 1;
          var G__6585 = cljs.core.next(s__$1);
          i = G__6584;
          s__$1 = G__6585;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4114__auto___6586 = size;
      var i_6587 = 0;
      while (true) {
        if (i_6587 < n__4114__auto___6586) {
          a[i_6587] = init_val_or_seq;
          var G__6588 = i_6587 + 1;
          i_6587 = G__6588;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6591 = i + 1;
          var G__6592 = cljs.core.next(s__$1);
          i = G__6591;
          s__$1 = G__6592;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4114__auto___6593 = size;
      var i_6594 = 0;
      while (true) {
        if (i_6594 < n__4114__auto___6593) {
          a[i_6594] = init_val_or_seq;
          var G__6595 = i_6594 + 1;
          i_6594 = G__6595;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6598 = i + 1;
          var G__6599 = cljs.core.next(s__$1);
          i = G__6598;
          s__$1 = G__6599;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4114__auto___6600 = size;
      var i_6601 = 0;
      while (true) {
        if (i_6601 < n__4114__auto___6600) {
          a[i_6601] = init_val_or_seq;
          var G__6602 = i_6601 + 1;
          i_6601 = G__6602;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__6603 = cljs.core.next(s__$1);
        var G__6604 = i - 1;
        var G__6605 = sum + 1;
        s__$1 = G__6603;
        i = G__6604;
        sum = G__6605;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6625__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__6625 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__6626__i = 0, G__6626__a = new Array(arguments.length - 2);
        while (G__6626__i < G__6626__a.length) {
          G__6626__a[G__6626__i] = arguments[G__6626__i + 2];
          ++G__6626__i;
        }
        zs = new cljs.core.IndexedSeq(G__6626__a, 0);
      }
      return G__6625__delegate.call(this, x, y, zs);
    };
    G__6625.cljs$lang$maxFixedArity = 2;
    G__6625.cljs$lang$applyTo = function(arglist__6627) {
      var x = cljs.core.first(arglist__6627);
      arglist__6627 = cljs.core.next(arglist__6627);
      var y = cljs.core.first(arglist__6627);
      var zs = cljs.core.rest(arglist__6627);
      return G__6625__delegate(x, y, zs);
    };
    G__6625.cljs$core$IFn$_invoke$arity$variadic = G__6625__delegate;
    return G__6625;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__6628 = null;
        if (arguments.length > 2) {
          var G__6629__i = 0, G__6629__a = new Array(arguments.length - 2);
          while (G__6629__i < G__6629__a.length) {
            G__6629__a[G__6629__i] = arguments[G__6629__i + 2];
            ++G__6629__i;
          }
          G__6628 = new cljs.core.IndexedSeq(G__6629__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6628);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__6630__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__6630 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__6631__i = 0, G__6631__a = new Array(arguments.length - 4);
        while (G__6631__i < G__6631__a.length) {
          G__6631__a[G__6631__i] = arguments[G__6631__i + 4];
          ++G__6631__i;
        }
        more = new cljs.core.IndexedSeq(G__6631__a, 0);
      }
      return G__6630__delegate.call(this, a, b, c, d, more);
    };
    G__6630.cljs$lang$maxFixedArity = 4;
    G__6630.cljs$lang$applyTo = function(arglist__6632) {
      var a = cljs.core.first(arglist__6632);
      arglist__6632 = cljs.core.next(arglist__6632);
      var b = cljs.core.first(arglist__6632);
      arglist__6632 = cljs.core.next(arglist__6632);
      var c = cljs.core.first(arglist__6632);
      arglist__6632 = cljs.core.next(arglist__6632);
      var d = cljs.core.first(arglist__6632);
      var more = cljs.core.rest(arglist__6632);
      return G__6630__delegate(a, b, c, d, more);
    };
    G__6630.cljs$core$IFn$_invoke$arity$variadic = G__6630__delegate;
    return G__6630;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__6633 = null;
        if (arguments.length > 4) {
          var G__6634__i = 0, G__6634__a = new Array(arguments.length - 4);
          while (G__6634__i < G__6634__a.length) {
            G__6634__a[G__6634__i] = arguments[G__6634__i + 4];
            ++G__6634__i;
          }
          G__6633 = new cljs.core.IndexedSeq(G__6634__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__6633);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6635__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6636 = ntcoll;
          var G__6637 = cljs.core.first(vals);
          var G__6638 = cljs.core.next(vals);
          tcoll = G__6636;
          val = G__6637;
          vals = G__6638;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6635 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6639__i = 0, G__6639__a = new Array(arguments.length - 2);
        while (G__6639__i < G__6639__a.length) {
          G__6639__a[G__6639__i] = arguments[G__6639__i + 2];
          ++G__6639__i;
        }
        vals = new cljs.core.IndexedSeq(G__6639__a, 0);
      }
      return G__6635__delegate.call(this, tcoll, val, vals);
    };
    G__6635.cljs$lang$maxFixedArity = 2;
    G__6635.cljs$lang$applyTo = function(arglist__6640) {
      var tcoll = cljs.core.first(arglist__6640);
      arglist__6640 = cljs.core.next(arglist__6640);
      var val = cljs.core.first(arglist__6640);
      var vals = cljs.core.rest(arglist__6640);
      return G__6635__delegate(tcoll, val, vals);
    };
    G__6635.cljs$core$IFn$_invoke$arity$variadic = G__6635__delegate;
    return G__6635;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__6641 = null;
        if (arguments.length > 2) {
          var G__6642__i = 0, G__6642__a = new Array(arguments.length - 2);
          while (G__6642__i < G__6642__a.length) {
            G__6642__a[G__6642__i] = arguments[G__6642__i + 2];
            ++G__6642__i;
          }
          G__6641 = new cljs.core.IndexedSeq(G__6642__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6641);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6643__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6644 = ntcoll;
          var G__6645 = cljs.core.first(kvs);
          var G__6646 = cljs.core.second(kvs);
          var G__6647 = cljs.core.nnext(kvs);
          tcoll = G__6644;
          key = G__6645;
          val = G__6646;
          kvs = G__6647;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6643 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__6648__i = 0, G__6648__a = new Array(arguments.length - 3);
        while (G__6648__i < G__6648__a.length) {
          G__6648__a[G__6648__i] = arguments[G__6648__i + 3];
          ++G__6648__i;
        }
        kvs = new cljs.core.IndexedSeq(G__6648__a, 0);
      }
      return G__6643__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6643.cljs$lang$maxFixedArity = 3;
    G__6643.cljs$lang$applyTo = function(arglist__6649) {
      var tcoll = cljs.core.first(arglist__6649);
      arglist__6649 = cljs.core.next(arglist__6649);
      var key = cljs.core.first(arglist__6649);
      arglist__6649 = cljs.core.next(arglist__6649);
      var val = cljs.core.first(arglist__6649);
      var kvs = cljs.core.rest(arglist__6649);
      return G__6643__delegate(tcoll, key, val, kvs);
    };
    G__6643.cljs$core$IFn$_invoke$arity$variadic = G__6643__delegate;
    return G__6643;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__6650 = null;
        if (arguments.length > 3) {
          var G__6651__i = 0, G__6651__a = new Array(arguments.length - 3);
          while (G__6651__i < G__6651__a.length) {
            G__6651__a[G__6651__i] = arguments[G__6651__i + 3];
            ++G__6651__i;
          }
          G__6650 = new cljs.core.IndexedSeq(G__6651__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__6650);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6652__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6653 = ntcoll;
          var G__6654 = cljs.core.first(ks);
          var G__6655 = cljs.core.next(ks);
          tcoll = G__6653;
          key = G__6654;
          ks = G__6655;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6652 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6656__i = 0, G__6656__a = new Array(arguments.length - 2);
        while (G__6656__i < G__6656__a.length) {
          G__6656__a[G__6656__i] = arguments[G__6656__i + 2];
          ++G__6656__i;
        }
        ks = new cljs.core.IndexedSeq(G__6656__a, 0);
      }
      return G__6652__delegate.call(this, tcoll, key, ks);
    };
    G__6652.cljs$lang$maxFixedArity = 2;
    G__6652.cljs$lang$applyTo = function(arglist__6657) {
      var tcoll = cljs.core.first(arglist__6657);
      arglist__6657 = cljs.core.next(arglist__6657);
      var key = cljs.core.first(arglist__6657);
      var ks = cljs.core.rest(arglist__6657);
      return G__6652__delegate(tcoll, key, ks);
    };
    G__6652.cljs$core$IFn$_invoke$arity$variadic = G__6652__delegate;
    return G__6652;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__6658 = null;
        if (arguments.length > 2) {
          var G__6659__i = 0, G__6659__a = new Array(arguments.length - 2);
          while (G__6659__i < G__6659__a.length) {
            G__6659__a[G__6659__i] = arguments[G__6659__i + 2];
            ++G__6659__i;
          }
          G__6658 = new cljs.core.IndexedSeq(G__6659__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__6658);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6660__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6661 = ntcoll;
          var G__6662 = cljs.core.first(vals);
          var G__6663 = cljs.core.next(vals);
          tcoll = G__6661;
          val = G__6662;
          vals = G__6663;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6660 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6664__i = 0, G__6664__a = new Array(arguments.length - 2);
        while (G__6664__i < G__6664__a.length) {
          G__6664__a[G__6664__i] = arguments[G__6664__i + 2];
          ++G__6664__i;
        }
        vals = new cljs.core.IndexedSeq(G__6664__a, 0);
      }
      return G__6660__delegate.call(this, tcoll, val, vals);
    };
    G__6660.cljs$lang$maxFixedArity = 2;
    G__6660.cljs$lang$applyTo = function(arglist__6665) {
      var tcoll = cljs.core.first(arglist__6665);
      arglist__6665 = cljs.core.next(arglist__6665);
      var val = cljs.core.first(arglist__6665);
      var vals = cljs.core.rest(arglist__6665);
      return G__6660__delegate(tcoll, val, vals);
    };
    G__6660.cljs$core$IFn$_invoke$arity$variadic = G__6660__delegate;
    return G__6660;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__6666 = null;
        if (arguments.length > 2) {
          var G__6667__i = 0, G__6667__a = new Array(arguments.length - 2);
          while (G__6667__i < G__6667__a.length) {
            G__6667__a[G__6667__i] = arguments[G__6667__i + 2];
            ++G__6667__i;
          }
          G__6666 = new cljs.core.IndexedSeq(G__6667__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6666);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4158 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4158);
      } else {
        var G__6878 = a4158;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6878) : f.call(null, G__6878);
      }
    } else {
      var b4159 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4158, b4159);
        } else {
          var G__6879 = a4158;
          var G__6880 = b4159;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6879, G__6880) : f.call(null, G__6879, G__6880);
        }
      } else {
        var c4160 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4158, b4159, c4160);
          } else {
            var G__6881 = a4158;
            var G__6882 = b4159;
            var G__6883 = c4160;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6881, G__6882, G__6883) : f.call(null, G__6881, G__6882, G__6883);
          }
        } else {
          var d4161 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4158, b4159, c4160, d4161);
            } else {
              var G__6884 = a4158;
              var G__6885 = b4159;
              var G__6886 = c4160;
              var G__6887 = d4161;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6884, G__6885, G__6886, G__6887) : f.call(null, G__6884, G__6885, G__6886, G__6887);
            }
          } else {
            var e4162 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4158, b4159, c4160, d4161, e4162);
              } else {
                var G__6888 = a4158;
                var G__6889 = b4159;
                var G__6890 = c4160;
                var G__6891 = d4161;
                var G__6892 = e4162;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6888, G__6889, G__6890, G__6891, G__6892) : f.call(null, G__6888, G__6889, G__6890, G__6891, G__6892);
              }
            } else {
              var f4163 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4158, b4159, c4160, d4161, e4162, f4163);
                } else {
                  var G__6893 = a4158;
                  var G__6894 = b4159;
                  var G__6895 = c4160;
                  var G__6896 = d4161;
                  var G__6897 = e4162;
                  var G__6898 = f4163;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__6893, G__6894, G__6895, G__6896, G__6897, G__6898) : f.call(null, G__6893, G__6894, G__6895, G__6896, G__6897, G__6898);
                }
              } else {
                var g4164 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4158, b4159, c4160, d4161, e4162, f4163, g4164);
                  } else {
                    var G__6899 = a4158;
                    var G__6900 = b4159;
                    var G__6901 = c4160;
                    var G__6902 = d4161;
                    var G__6903 = e4162;
                    var G__6904 = f4163;
                    var G__6905 = g4164;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__6899, G__6900, G__6901, G__6902, G__6903, G__6904, G__6905) : f.call(null, G__6899, G__6900, G__6901, G__6902, G__6903, G__6904, G__6905);
                  }
                } else {
                  var h4165 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165);
                    } else {
                      var G__6906 = a4158;
                      var G__6907 = b4159;
                      var G__6908 = c4160;
                      var G__6909 = d4161;
                      var G__6910 = e4162;
                      var G__6911 = f4163;
                      var G__6912 = g4164;
                      var G__6913 = h4165;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__6906, G__6907, G__6908, G__6909, G__6910, G__6911, G__6912, G__6913) : f.call(null, G__6906, G__6907, G__6908, G__6909, G__6910, G__6911, G__6912, G__6913);
                    }
                  } else {
                    var i4166 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166);
                      } else {
                        var G__6914 = a4158;
                        var G__6915 = b4159;
                        var G__6916 = c4160;
                        var G__6917 = d4161;
                        var G__6918 = e4162;
                        var G__6919 = f4163;
                        var G__6920 = g4164;
                        var G__6921 = h4165;
                        var G__6922 = i4166;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__6914, G__6915, G__6916, G__6917, G__6918, G__6919, G__6920, G__6921, G__6922) : f.call(null, G__6914, G__6915, G__6916, G__6917, G__6918, G__6919, G__6920, G__6921, G__6922);
                      }
                    } else {
                      var j4167 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167);
                        } else {
                          var G__6923 = a4158;
                          var G__6924 = b4159;
                          var G__6925 = c4160;
                          var G__6926 = d4161;
                          var G__6927 = e4162;
                          var G__6928 = f4163;
                          var G__6929 = g4164;
                          var G__6930 = h4165;
                          var G__6931 = i4166;
                          var G__6932 = j4167;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__6923, G__6924, G__6925, G__6926, G__6927, G__6928, G__6929, G__6930, G__6931, G__6932) : f.call(null, G__6923, G__6924, G__6925, G__6926, G__6927, G__6928, G__6929, G__6930, G__6931, G__6932);
                        }
                      } else {
                        var k4168 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168);
                          } else {
                            var G__6933 = a4158;
                            var G__6934 = b4159;
                            var G__6935 = c4160;
                            var G__6936 = d4161;
                            var G__6937 = e4162;
                            var G__6938 = f4163;
                            var G__6939 = g4164;
                            var G__6940 = h4165;
                            var G__6941 = i4166;
                            var G__6942 = j4167;
                            var G__6943 = k4168;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__6933, G__6934, G__6935, G__6936, G__6937, G__6938, G__6939, G__6940, G__6941, G__6942, G__6943) : f.call(null, G__6933, G__6934, G__6935, G__6936, G__6937, G__6938, G__6939, G__6940, G__6941, G__6942, G__6943);
                          }
                        } else {
                          var l4169 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169);
                            } else {
                              var G__6944 = a4158;
                              var G__6945 = b4159;
                              var G__6946 = c4160;
                              var G__6947 = d4161;
                              var G__6948 = e4162;
                              var G__6949 = f4163;
                              var G__6950 = g4164;
                              var G__6951 = h4165;
                              var G__6952 = i4166;
                              var G__6953 = j4167;
                              var G__6954 = k4168;
                              var G__6955 = l4169;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__6944, G__6945, G__6946, G__6947, G__6948, G__6949, G__6950, G__6951, G__6952, G__6953, G__6954, G__6955) : f.call(null, G__6944, G__6945, G__6946, G__6947, G__6948, G__6949, G__6950, G__6951, G__6952, G__6953, G__6954, G__6955);
                            }
                          } else {
                            var m4170 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170);
                              } else {
                                var G__6956 = a4158;
                                var G__6957 = b4159;
                                var G__6958 = c4160;
                                var G__6959 = d4161;
                                var G__6960 = e4162;
                                var G__6961 = f4163;
                                var G__6962 = g4164;
                                var G__6963 = h4165;
                                var G__6964 = i4166;
                                var G__6965 = j4167;
                                var G__6966 = k4168;
                                var G__6967 = l4169;
                                var G__6968 = m4170;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__6956, G__6957, G__6958, G__6959, G__6960, G__6961, G__6962, G__6963, G__6964, G__6965, G__6966, G__6967, G__6968) : f.call(null, G__6956, G__6957, G__6958, G__6959, G__6960, G__6961, G__6962, G__6963, G__6964, G__6965, G__6966, G__6967, G__6968);
                              }
                            } else {
                              var n4171 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171);
                                } else {
                                  var G__6969 = a4158;
                                  var G__6970 = b4159;
                                  var G__6971 = c4160;
                                  var G__6972 = d4161;
                                  var G__6973 = e4162;
                                  var G__6974 = f4163;
                                  var G__6975 = g4164;
                                  var G__6976 = h4165;
                                  var G__6977 = i4166;
                                  var G__6978 = j4167;
                                  var G__6979 = k4168;
                                  var G__6980 = l4169;
                                  var G__6981 = m4170;
                                  var G__6982 = n4171;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__6969, G__6970, G__6971, G__6972, G__6973, G__6974, G__6975, G__6976, G__6977, G__6978, G__6979, G__6980, G__6981, G__6982) : f.call(null, G__6969, G__6970, G__6971, G__6972, G__6973, G__6974, G__6975, G__6976, G__6977, G__6978, G__6979, G__6980, G__6981, G__6982);
                                }
                              } else {
                                var o4172 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172);
                                  } else {
                                    var G__6983 = a4158;
                                    var G__6984 = b4159;
                                    var G__6985 = c4160;
                                    var G__6986 = d4161;
                                    var G__6987 = e4162;
                                    var G__6988 = f4163;
                                    var G__6989 = g4164;
                                    var G__6990 = h4165;
                                    var G__6991 = i4166;
                                    var G__6992 = j4167;
                                    var G__6993 = k4168;
                                    var G__6994 = l4169;
                                    var G__6995 = m4170;
                                    var G__6996 = n4171;
                                    var G__6997 = o4172;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__6983, G__6984, G__6985, G__6986, G__6987, G__6988, G__6989, G__6990, G__6991, G__6992, G__6993, G__6994, G__6995, G__6996, G__6997) : f.call(null, G__6983, G__6984, G__6985, G__6986, G__6987, G__6988, G__6989, G__6990, G__6991, G__6992, G__6993, G__6994, G__6995, G__6996, G__6997);
                                  }
                                } else {
                                  var p4173 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172, p4173);
                                    } else {
                                      var G__6998 = a4158;
                                      var G__6999 = b4159;
                                      var G__7000 = c4160;
                                      var G__7001 = d4161;
                                      var G__7002 = e4162;
                                      var G__7003 = f4163;
                                      var G__7004 = g4164;
                                      var G__7005 = h4165;
                                      var G__7006 = i4166;
                                      var G__7007 = j4167;
                                      var G__7008 = k4168;
                                      var G__7009 = l4169;
                                      var G__7010 = m4170;
                                      var G__7011 = n4171;
                                      var G__7012 = o4172;
                                      var G__7013 = p4173;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__6998, G__6999, G__7000, G__7001, G__7002, G__7003, G__7004, G__7005, G__7006, G__7007, G__7008, G__7009, G__7010, G__7011, G__7012, G__7013) : f.call(null, G__6998, G__6999, G__7000, G__7001, G__7002, G__7003, G__7004, G__7005, G__7006, G__7007, G__7008, G__7009, G__7010, G__7011, G__7012, G__7013);
                                    }
                                  } else {
                                    var q4174 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172, p4173, q4174);
                                      } else {
                                        var G__7014 = a4158;
                                        var G__7015 = b4159;
                                        var G__7016 = c4160;
                                        var G__7017 = d4161;
                                        var G__7018 = e4162;
                                        var G__7019 = f4163;
                                        var G__7020 = g4164;
                                        var G__7021 = h4165;
                                        var G__7022 = i4166;
                                        var G__7023 = j4167;
                                        var G__7024 = k4168;
                                        var G__7025 = l4169;
                                        var G__7026 = m4170;
                                        var G__7027 = n4171;
                                        var G__7028 = o4172;
                                        var G__7029 = p4173;
                                        var G__7030 = q4174;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7014, G__7015, G__7016, G__7017, G__7018, G__7019, G__7020, G__7021, G__7022, G__7023, G__7024, G__7025, G__7026, G__7027, G__7028, G__7029, G__7030) : f.call(null, G__7014, G__7015, G__7016, G__7017, G__7018, G__7019, G__7020, G__7021, G__7022, G__7023, G__7024, G__7025, G__7026, G__7027, G__7028, G__7029, G__7030);
                                      }
                                    } else {
                                      var r4175 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172, p4173, q4174, r4175);
                                        } else {
                                          var G__7031 = a4158;
                                          var G__7032 = b4159;
                                          var G__7033 = c4160;
                                          var G__7034 = d4161;
                                          var G__7035 = e4162;
                                          var G__7036 = f4163;
                                          var G__7037 = g4164;
                                          var G__7038 = h4165;
                                          var G__7039 = i4166;
                                          var G__7040 = j4167;
                                          var G__7041 = k4168;
                                          var G__7042 = l4169;
                                          var G__7043 = m4170;
                                          var G__7044 = n4171;
                                          var G__7045 = o4172;
                                          var G__7046 = p4173;
                                          var G__7047 = q4174;
                                          var G__7048 = r4175;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7031, G__7032, G__7033, G__7034, G__7035, G__7036, G__7037, G__7038, G__7039, G__7040, G__7041, G__7042, G__7043, G__7044, G__7045, G__7046, G__7047, G__7048) : f.call(null, G__7031, G__7032, G__7033, G__7034, G__7035, G__7036, G__7037, G__7038, G__7039, G__7040, G__7041, G__7042, G__7043, G__7044, G__7045, G__7046, G__7047, G__7048);
                                        }
                                      } else {
                                        var s4176 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172, p4173, q4174, r4175, s4176);
                                          } else {
                                            var G__7049 = a4158;
                                            var G__7050 = b4159;
                                            var G__7051 = c4160;
                                            var G__7052 = d4161;
                                            var G__7053 = e4162;
                                            var G__7054 = f4163;
                                            var G__7055 = g4164;
                                            var G__7056 = h4165;
                                            var G__7057 = i4166;
                                            var G__7058 = j4167;
                                            var G__7059 = k4168;
                                            var G__7060 = l4169;
                                            var G__7061 = m4170;
                                            var G__7062 = n4171;
                                            var G__7063 = o4172;
                                            var G__7064 = p4173;
                                            var G__7065 = q4174;
                                            var G__7066 = r4175;
                                            var G__7067 = s4176;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7049, G__7050, G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057, G__7058, G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067) : f.call(null, G__7049, G__7050, G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057, G__7058, G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067);
                                          }
                                        } else {
                                          var t4177 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4158, b4159, c4160, d4161, e4162, f4163, g4164, h4165, i4166, j4167, k4168, l4169, m4170, n4171, o4172, p4173, q4174, r4175, s4176, t4177);
                                            } else {
                                              var G__7068 = a4158;
                                              var G__7069 = b4159;
                                              var G__7070 = c4160;
                                              var G__7071 = d4161;
                                              var G__7072 = e4162;
                                              var G__7073 = f4163;
                                              var G__7074 = g4164;
                                              var G__7075 = h4165;
                                              var G__7076 = i4166;
                                              var G__7077 = j4167;
                                              var G__7078 = k4168;
                                              var G__7079 = l4169;
                                              var G__7080 = m4170;
                                              var G__7081 = n4171;
                                              var G__7082 = o4172;
                                              var G__7083 = p4173;
                                              var G__7084 = q4174;
                                              var G__7085 = r4175;
                                              var G__7086 = s4176;
                                              var G__7087 = t4177;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7068, G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077, G__7078, G__7079, G__7080, G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087) : f.call(null, G__7068, G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077, G__7078, G__7079, G__7080, G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__7088__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__7088 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__7089__i = 0, G__7089__a = new Array(arguments.length - 5);
        while (G__7089__i < G__7089__a.length) {
          G__7089__a[G__7089__i] = arguments[G__7089__i + 5];
          ++G__7089__i;
        }
        args = new cljs.core.IndexedSeq(G__7089__a, 0);
      }
      return G__7088__delegate.call(this, f, a, b, c, d, args);
    };
    G__7088.cljs$lang$maxFixedArity = 5;
    G__7088.cljs$lang$applyTo = function(arglist__7090) {
      var f = cljs.core.first(arglist__7090);
      arglist__7090 = cljs.core.next(arglist__7090);
      var a = cljs.core.first(arglist__7090);
      arglist__7090 = cljs.core.next(arglist__7090);
      var b = cljs.core.first(arglist__7090);
      arglist__7090 = cljs.core.next(arglist__7090);
      var c = cljs.core.first(arglist__7090);
      arglist__7090 = cljs.core.next(arglist__7090);
      var d = cljs.core.first(arglist__7090);
      var args = cljs.core.rest(arglist__7090);
      return G__7088__delegate(f, a, b, c, d, args);
    };
    G__7088.cljs$core$IFn$_invoke$arity$variadic = G__7088__delegate;
    return G__7088;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__7091 = null;
        if (arguments.length > 5) {
          var G__7092__i = 0, G__7092__a = new Array(arguments.length - 5);
          while (G__7092__i < G__7092__a.length) {
            G__7092__a[G__7092__i] = arguments[G__7092__i + 5];
            ++G__7092__i;
          }
          G__7091 = new cljs.core.IndexedSeq(G__7092__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__7091);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__7108 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7108) : f.call(null, G__7108);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__7109 = cljs.core.meta(obj);
      var G__7110 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7109, G__7110) : f.call(null, G__7109, G__7110);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__7111 = cljs.core.meta(obj);
      var G__7112 = a;
      var G__7113 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7111, G__7112, G__7113) : f.call(null, G__7111, G__7112, G__7113);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__7114 = cljs.core.meta(obj);
      var G__7115 = a;
      var G__7116 = b;
      var G__7117 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7114, G__7115, G__7116, G__7117) : f.call(null, G__7114, G__7115, G__7116, G__7117);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__7118 = cljs.core.meta(obj);
      var G__7119 = a;
      var G__7120 = b;
      var G__7121 = c;
      var G__7122 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7118, G__7119, G__7120, G__7121, G__7122) : f.call(null, G__7118, G__7119, G__7120, G__7121, G__7122);
    }());
  };
  var vary_meta__7 = function() {
    var G__7123__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__7123 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__7124__i = 0, G__7124__a = new Array(arguments.length - 6);
        while (G__7124__i < G__7124__a.length) {
          G__7124__a[G__7124__i] = arguments[G__7124__i + 6];
          ++G__7124__i;
        }
        args = new cljs.core.IndexedSeq(G__7124__a, 0);
      }
      return G__7123__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__7123.cljs$lang$maxFixedArity = 6;
    G__7123.cljs$lang$applyTo = function(arglist__7125) {
      var obj = cljs.core.first(arglist__7125);
      arglist__7125 = cljs.core.next(arglist__7125);
      var f = cljs.core.first(arglist__7125);
      arglist__7125 = cljs.core.next(arglist__7125);
      var a = cljs.core.first(arglist__7125);
      arglist__7125 = cljs.core.next(arglist__7125);
      var b = cljs.core.first(arglist__7125);
      arglist__7125 = cljs.core.next(arglist__7125);
      var c = cljs.core.first(arglist__7125);
      arglist__7125 = cljs.core.next(arglist__7125);
      var d = cljs.core.first(arglist__7125);
      var args = cljs.core.rest(arglist__7125);
      return G__7123__delegate(obj, f, a, b, c, d, args);
    };
    G__7123.cljs$core$IFn$_invoke$arity$variadic = G__7123__delegate;
    return G__7123;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__7126 = null;
        if (arguments.length > 6) {
          var G__7127__i = 0, G__7127__a = new Array(arguments.length - 6);
          while (G__7127__i < G__7127__a.length) {
            G__7127__a[G__7127__i] = arguments[G__7127__i + 6];
            ++G__7127__i;
          }
          G__7126 = new cljs.core.IndexedSeq(G__7127__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__7126);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__7128__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__7128 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__7129__i = 0, G__7129__a = new Array(arguments.length - 2);
        while (G__7129__i < G__7129__a.length) {
          G__7129__a[G__7129__i] = arguments[G__7129__i + 2];
          ++G__7129__i;
        }
        more = new cljs.core.IndexedSeq(G__7129__a, 0);
      }
      return G__7128__delegate.call(this, x, y, more);
    };
    G__7128.cljs$lang$maxFixedArity = 2;
    G__7128.cljs$lang$applyTo = function(arglist__7130) {
      var x = cljs.core.first(arglist__7130);
      arglist__7130 = cljs.core.next(arglist__7130);
      var y = cljs.core.first(arglist__7130);
      var more = cljs.core.rest(arglist__7130);
      return G__7128__delegate(x, y, more);
    };
    G__7128.cljs$core$IFn$_invoke$arity$variadic = G__7128__delegate;
    return G__7128;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__7131 = null;
        if (arguments.length > 2) {
          var G__7132__i = 0, G__7132__a = new Array(arguments.length - 2);
          while (G__7132__i < G__7132__a.length) {
            G__7132__a[G__7132__i] = arguments[G__7132__i + 2];
            ++G__7132__i;
          }
          G__7131 = new cljs.core.IndexedSeq(G__7132__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7131);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t7136 !== "undefined") {
  } else {
    cljs.core.t7136 = function(nil_iter, meta7137) {
      this.nil_iter = nil_iter;
      this.meta7137 = meta7137;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t7136.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7136.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7136.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7136.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7138) {
      var self__ = this;
      var _7138__$1 = this;
      return self__.meta7137;
    };
    cljs.core.t7136.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7138, meta7137__$1) {
      var self__ = this;
      var _7138__$1 = this;
      return new cljs.core.t7136(self__.nil_iter, meta7137__$1);
    };
    cljs.core.t7136.cljs$lang$type = true;
    cljs.core.t7136.cljs$lang$ctorStr = "cljs.core/t7136";
    cljs.core.t7136.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
      return cljs.core._write(writer__3815__auto__, "cljs.core/t7136");
    };
    cljs.core.__GT_t7136 = function __GT_t7136(nil_iter__$1, meta7137) {
      return new cljs.core.t7136(nil_iter__$1, meta7137);
    };
  }
  return new cljs.core.t7136(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/cab/Dev/spcr/resources/public/js/out/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3215__auto__ = !(lt.stepper == null);
      if (and__3215__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3215__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7139 = lt;
        var G__7140 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7139, G__7140) : self__.xform.call(null, G__7139, G__7140);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7141 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7141) : self__.xform.call(null, G__7141);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__7143 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7143) : xform.call(null, G__7143);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7145 = cljs.core.next(iters__$1);
        iters__$1 = G__7145;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4114__auto___7146 = self__.iters.length;
  var i_7147 = 0;
  while (true) {
    if (i_7147 < n__4114__auto___7146) {
      self__.nexts[i_7147] = self__.iters[i_7147].next();
      var G__7148 = i_7147 + 1;
      i_7147 = G__7148;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3215__auto__ = !(lt.stepper == null);
      if (and__3215__auto__) {
        return this$.hasNext();
      } else {
        return and__3215__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7144 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7144) : self__.xform.call(null, G__7144);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__7153 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7153) : xform.call(null, G__7153);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7154_7158 = cljs.core.seq(colls);
  var chunk__7155_7159 = null;
  var count__7156_7160 = 0;
  var i__7157_7161 = 0;
  while (true) {
    if (i__7157_7161 < count__7156_7160) {
      var coll_7162 = chunk__7155_7159.cljs$core$IIndexed$_nth$arity$2(null, i__7157_7161);
      iters.push(cljs.core.iter(coll_7162));
      var G__7163 = seq__7154_7158;
      var G__7164 = chunk__7155_7159;
      var G__7165 = count__7156_7160;
      var G__7166 = i__7157_7161 + 1;
      seq__7154_7158 = G__7163;
      chunk__7155_7159 = G__7164;
      count__7156_7160 = G__7165;
      i__7157_7161 = G__7166;
      continue;
    } else {
      var temp__4126__auto___7167 = cljs.core.seq(seq__7154_7158);
      if (temp__4126__auto___7167) {
        var seq__7154_7168__$1 = temp__4126__auto___7167;
        if (cljs.core.chunked_seq_QMARK_(seq__7154_7168__$1)) {
          var c__4014__auto___7169 = cljs.core.chunk_first(seq__7154_7168__$1);
          var G__7170 = cljs.core.chunk_rest(seq__7154_7168__$1);
          var G__7171 = c__4014__auto___7169;
          var G__7172 = cljs.core.count(c__4014__auto___7169);
          var G__7173 = 0;
          seq__7154_7158 = G__7170;
          chunk__7155_7159 = G__7171;
          count__7156_7160 = G__7172;
          i__7157_7161 = G__7173;
          continue;
        } else {
          var coll_7174 = cljs.core.first(seq__7154_7168__$1);
          iters.push(cljs.core.iter(coll_7174));
          var G__7175 = cljs.core.next(seq__7154_7168__$1);
          var G__7176 = null;
          var G__7177 = 0;
          var G__7178 = 0;
          seq__7154_7158 = G__7175;
          chunk__7155_7159 = G__7176;
          count__7156_7160 = G__7177;
          i__7157_7161 = G__7178;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3227__auto__ = cljs.core.seq(coll);
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__7179__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__7179 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__7180__i = 0, G__7180__a = new Array(arguments.length - 2);
        while (G__7180__i < G__7180__a.length) {
          G__7180__a[G__7180__i] = arguments[G__7180__i + 2];
          ++G__7180__i;
        }
        colls = new cljs.core.IndexedSeq(G__7180__a, 0);
      }
      return G__7179__delegate.call(this, xform, coll, colls);
    };
    G__7179.cljs$lang$maxFixedArity = 2;
    G__7179.cljs$lang$applyTo = function(arglist__7181) {
      var xform = cljs.core.first(arglist__7181);
      arglist__7181 = cljs.core.next(arglist__7181);
      var coll = cljs.core.first(arglist__7181);
      var colls = cljs.core.rest(arglist__7181);
      return G__7179__delegate(xform, coll, colls);
    };
    G__7179.cljs$core$IFn$_invoke$arity$variadic = G__7179__delegate;
    return G__7179;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__7182 = null;
        if (arguments.length > 2) {
          var G__7183__i = 0, G__7183__a = new Array(arguments.length - 2);
          while (G__7183__i < G__7183__a.length) {
            G__7183__a[G__7183__i] = arguments[G__7183__i + 2];
            ++G__7183__i;
          }
          G__7182 = new cljs.core.IndexedSeq(G__7183__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__7182);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7185 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7185) : pred.call(null, G__7185);
      }())) {
        var G__7186 = pred;
        var G__7187 = cljs.core.next(coll);
        pred = G__7186;
        coll = G__7187;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3227__auto__ = function() {
        var G__7191 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7191) : pred.call(null, G__7191);
      }();
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        var G__7192 = pred;
        var G__7193 = cljs.core.next(coll);
        pred = G__7192;
        coll = G__7193;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__7200 = null;
    var G__7200__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__7200__1 = function(x) {
      return cljs.core.not(function() {
        var G__7197 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7197) : f.call(null, G__7197);
      }());
    };
    var G__7200__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__7198 = x;
        var G__7199 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7198, G__7199) : f.call(null, G__7198, G__7199);
      }());
    };
    var G__7200__3 = function() {
      var G__7201__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7201 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7202__i = 0, G__7202__a = new Array(arguments.length - 2);
          while (G__7202__i < G__7202__a.length) {
            G__7202__a[G__7202__i] = arguments[G__7202__i + 2];
            ++G__7202__i;
          }
          zs = new cljs.core.IndexedSeq(G__7202__a, 0);
        }
        return G__7201__delegate.call(this, x, y, zs);
      };
      G__7201.cljs$lang$maxFixedArity = 2;
      G__7201.cljs$lang$applyTo = function(arglist__7203) {
        var x = cljs.core.first(arglist__7203);
        arglist__7203 = cljs.core.next(arglist__7203);
        var y = cljs.core.first(arglist__7203);
        var zs = cljs.core.rest(arglist__7203);
        return G__7201__delegate(x, y, zs);
      };
      G__7201.cljs$core$IFn$_invoke$arity$variadic = G__7201__delegate;
      return G__7201;
    }();
    G__7200 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7200__0.call(this);
        case 1:
          return G__7200__1.call(this, x);
        case 2:
          return G__7200__2.call(this, x, y);
        default:
          var G__7204 = null;
          if (arguments.length > 2) {
            var G__7205__i = 0, G__7205__a = new Array(arguments.length - 2);
            while (G__7205__i < G__7205__a.length) {
              G__7205__a[G__7205__i] = arguments[G__7205__i + 2];
              ++G__7205__i;
            }
            G__7204 = new cljs.core.IndexedSeq(G__7205__a, 0);
          }
          return G__7200__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7204);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7200.cljs$lang$maxFixedArity = 2;
    G__7200.cljs$lang$applyTo = G__7200__3.cljs$lang$applyTo;
    G__7200.cljs$core$IFn$_invoke$arity$0 = G__7200__0;
    G__7200.cljs$core$IFn$_invoke$arity$1 = G__7200__1;
    G__7200.cljs$core$IFn$_invoke$arity$2 = G__7200__2;
    G__7200.cljs$core$IFn$_invoke$arity$variadic = G__7200__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7200;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__7206__delegate = function(args) {
      return x;
    };
    var G__7206 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7207__i = 0, G__7207__a = new Array(arguments.length - 0);
        while (G__7207__i < G__7207__a.length) {
          G__7207__a[G__7207__i] = arguments[G__7207__i + 0];
          ++G__7207__i;
        }
        args = new cljs.core.IndexedSeq(G__7207__a, 0);
      }
      return G__7206__delegate.call(this, args);
    };
    G__7206.cljs$lang$maxFixedArity = 0;
    G__7206.cljs$lang$applyTo = function(arglist__7208) {
      var args = cljs.core.seq(arglist__7208);
      return G__7206__delegate(args);
    };
    G__7206.cljs$core$IFn$_invoke$arity$variadic = G__7206__delegate;
    return G__7206;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__7263 = null;
      var G__7263__0 = function() {
        var G__7236 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7236) : f.call(null, G__7236);
      };
      var G__7263__1 = function(x) {
        var G__7237 = function() {
          var G__7238 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7238) : g.call(null, G__7238);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7237) : f.call(null, G__7237);
      };
      var G__7263__2 = function(x, y) {
        var G__7239 = function() {
          var G__7240 = x;
          var G__7241 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7240, G__7241) : g.call(null, G__7240, G__7241);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7239) : f.call(null, G__7239);
      };
      var G__7263__3 = function(x, y, z) {
        var G__7242 = function() {
          var G__7243 = x;
          var G__7244 = y;
          var G__7245 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7243, G__7244, G__7245) : g.call(null, G__7243, G__7244, G__7245);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7242) : f.call(null, G__7242);
      };
      var G__7263__4 = function() {
        var G__7264__delegate = function(x, y, z, args) {
          var G__7246 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7246) : f.call(null, G__7246);
        };
        var G__7264 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7265__i = 0, G__7265__a = new Array(arguments.length - 3);
            while (G__7265__i < G__7265__a.length) {
              G__7265__a[G__7265__i] = arguments[G__7265__i + 3];
              ++G__7265__i;
            }
            args = new cljs.core.IndexedSeq(G__7265__a, 0);
          }
          return G__7264__delegate.call(this, x, y, z, args);
        };
        G__7264.cljs$lang$maxFixedArity = 3;
        G__7264.cljs$lang$applyTo = function(arglist__7266) {
          var x = cljs.core.first(arglist__7266);
          arglist__7266 = cljs.core.next(arglist__7266);
          var y = cljs.core.first(arglist__7266);
          arglist__7266 = cljs.core.next(arglist__7266);
          var z = cljs.core.first(arglist__7266);
          var args = cljs.core.rest(arglist__7266);
          return G__7264__delegate(x, y, z, args);
        };
        G__7264.cljs$core$IFn$_invoke$arity$variadic = G__7264__delegate;
        return G__7264;
      }();
      G__7263 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7263__0.call(this);
          case 1:
            return G__7263__1.call(this, x);
          case 2:
            return G__7263__2.call(this, x, y);
          case 3:
            return G__7263__3.call(this, x, y, z);
          default:
            var G__7267 = null;
            if (arguments.length > 3) {
              var G__7268__i = 0, G__7268__a = new Array(arguments.length - 3);
              while (G__7268__i < G__7268__a.length) {
                G__7268__a[G__7268__i] = arguments[G__7268__i + 3];
                ++G__7268__i;
              }
              G__7267 = new cljs.core.IndexedSeq(G__7268__a, 0);
            }
            return G__7263__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7267);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7263.cljs$lang$maxFixedArity = 3;
      G__7263.cljs$lang$applyTo = G__7263__4.cljs$lang$applyTo;
      G__7263.cljs$core$IFn$_invoke$arity$0 = G__7263__0;
      G__7263.cljs$core$IFn$_invoke$arity$1 = G__7263__1;
      G__7263.cljs$core$IFn$_invoke$arity$2 = G__7263__2;
      G__7263.cljs$core$IFn$_invoke$arity$3 = G__7263__3;
      G__7263.cljs$core$IFn$_invoke$arity$variadic = G__7263__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7263;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__7269 = null;
      var G__7269__0 = function() {
        var G__7247 = function() {
          var G__7248 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7248) : g.call(null, G__7248);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7247) : f.call(null, G__7247);
      };
      var G__7269__1 = function(x) {
        var G__7249 = function() {
          var G__7250 = function() {
            var G__7251 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7251) : h.call(null, G__7251);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7250) : g.call(null, G__7250);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7249) : f.call(null, G__7249);
      };
      var G__7269__2 = function(x, y) {
        var G__7252 = function() {
          var G__7253 = function() {
            var G__7254 = x;
            var G__7255 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7254, G__7255) : h.call(null, G__7254, G__7255);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7253) : g.call(null, G__7253);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7252) : f.call(null, G__7252);
      };
      var G__7269__3 = function(x, y, z) {
        var G__7256 = function() {
          var G__7257 = function() {
            var G__7258 = x;
            var G__7259 = y;
            var G__7260 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7258, G__7259, G__7260) : h.call(null, G__7258, G__7259, G__7260);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7257) : g.call(null, G__7257);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7256) : f.call(null, G__7256);
      };
      var G__7269__4 = function() {
        var G__7270__delegate = function(x, y, z, args) {
          var G__7261 = function() {
            var G__7262 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7262) : g.call(null, G__7262);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7261) : f.call(null, G__7261);
        };
        var G__7270 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7271__i = 0, G__7271__a = new Array(arguments.length - 3);
            while (G__7271__i < G__7271__a.length) {
              G__7271__a[G__7271__i] = arguments[G__7271__i + 3];
              ++G__7271__i;
            }
            args = new cljs.core.IndexedSeq(G__7271__a, 0);
          }
          return G__7270__delegate.call(this, x, y, z, args);
        };
        G__7270.cljs$lang$maxFixedArity = 3;
        G__7270.cljs$lang$applyTo = function(arglist__7272) {
          var x = cljs.core.first(arglist__7272);
          arglist__7272 = cljs.core.next(arglist__7272);
          var y = cljs.core.first(arglist__7272);
          arglist__7272 = cljs.core.next(arglist__7272);
          var z = cljs.core.first(arglist__7272);
          var args = cljs.core.rest(arglist__7272);
          return G__7270__delegate(x, y, z, args);
        };
        G__7270.cljs$core$IFn$_invoke$arity$variadic = G__7270__delegate;
        return G__7270;
      }();
      G__7269 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7269__0.call(this);
          case 1:
            return G__7269__1.call(this, x);
          case 2:
            return G__7269__2.call(this, x, y);
          case 3:
            return G__7269__3.call(this, x, y, z);
          default:
            var G__7273 = null;
            if (arguments.length > 3) {
              var G__7274__i = 0, G__7274__a = new Array(arguments.length - 3);
              while (G__7274__i < G__7274__a.length) {
                G__7274__a[G__7274__i] = arguments[G__7274__i + 3];
                ++G__7274__i;
              }
              G__7273 = new cljs.core.IndexedSeq(G__7274__a, 0);
            }
            return G__7269__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7273);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7269.cljs$lang$maxFixedArity = 3;
      G__7269.cljs$lang$applyTo = G__7269__4.cljs$lang$applyTo;
      G__7269.cljs$core$IFn$_invoke$arity$0 = G__7269__0;
      G__7269.cljs$core$IFn$_invoke$arity$1 = G__7269__1;
      G__7269.cljs$core$IFn$_invoke$arity$2 = G__7269__2;
      G__7269.cljs$core$IFn$_invoke$arity$3 = G__7269__3;
      G__7269.cljs$core$IFn$_invoke$arity$variadic = G__7269__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7269;
    }();
  };
  var comp__4 = function() {
    var G__7275__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__7276__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__7277 = cljs.core.first(fs__$2).call(null, ret);
                var G__7278 = cljs.core.next(fs__$2);
                ret = G__7277;
                fs__$2 = G__7278;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__7276 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__7279__i = 0, G__7279__a = new Array(arguments.length - 0);
              while (G__7279__i < G__7279__a.length) {
                G__7279__a[G__7279__i] = arguments[G__7279__i + 0];
                ++G__7279__i;
              }
              args = new cljs.core.IndexedSeq(G__7279__a, 0);
            }
            return G__7276__delegate.call(this, args);
          };
          G__7276.cljs$lang$maxFixedArity = 0;
          G__7276.cljs$lang$applyTo = function(arglist__7280) {
            var args = cljs.core.seq(arglist__7280);
            return G__7276__delegate(args);
          };
          G__7276.cljs$core$IFn$_invoke$arity$variadic = G__7276__delegate;
          return G__7276;
        }();
      }(fs__$1);
    };
    var G__7275 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__7281__i = 0, G__7281__a = new Array(arguments.length - 3);
        while (G__7281__i < G__7281__a.length) {
          G__7281__a[G__7281__i] = arguments[G__7281__i + 3];
          ++G__7281__i;
        }
        fs = new cljs.core.IndexedSeq(G__7281__a, 0);
      }
      return G__7275__delegate.call(this, f1, f2, f3, fs);
    };
    G__7275.cljs$lang$maxFixedArity = 3;
    G__7275.cljs$lang$applyTo = function(arglist__7282) {
      var f1 = cljs.core.first(arglist__7282);
      arglist__7282 = cljs.core.next(arglist__7282);
      var f2 = cljs.core.first(arglist__7282);
      arglist__7282 = cljs.core.next(arglist__7282);
      var f3 = cljs.core.first(arglist__7282);
      var fs = cljs.core.rest(arglist__7282);
      return G__7275__delegate(f1, f2, f3, fs);
    };
    G__7275.cljs$core$IFn$_invoke$arity$variadic = G__7275__delegate;
    return G__7275;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__7283 = null;
        if (arguments.length > 3) {
          var G__7284__i = 0, G__7284__a = new Array(arguments.length - 3);
          while (G__7284__i < G__7284__a.length) {
            G__7284__a[G__7284__i] = arguments[G__7284__i + 3];
            ++G__7284__i;
          }
          G__7283 = new cljs.core.IndexedSeq(G__7284__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__7283);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__7369 = null;
      var G__7369__0 = function() {
        var G__7327 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7327) : f.call(null, G__7327);
      };
      var G__7369__1 = function(x) {
        var G__7328 = arg1;
        var G__7329 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7328, G__7329) : f.call(null, G__7328, G__7329);
      };
      var G__7369__2 = function(x, y) {
        var G__7330 = arg1;
        var G__7331 = x;
        var G__7332 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7330, G__7331, G__7332) : f.call(null, G__7330, G__7331, G__7332);
      };
      var G__7369__3 = function(x, y, z) {
        var G__7333 = arg1;
        var G__7334 = x;
        var G__7335 = y;
        var G__7336 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7333, G__7334, G__7335, G__7336) : f.call(null, G__7333, G__7334, G__7335, G__7336);
      };
      var G__7369__4 = function() {
        var G__7370__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__7370 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7371__i = 0, G__7371__a = new Array(arguments.length - 3);
            while (G__7371__i < G__7371__a.length) {
              G__7371__a[G__7371__i] = arguments[G__7371__i + 3];
              ++G__7371__i;
            }
            args = new cljs.core.IndexedSeq(G__7371__a, 0);
          }
          return G__7370__delegate.call(this, x, y, z, args);
        };
        G__7370.cljs$lang$maxFixedArity = 3;
        G__7370.cljs$lang$applyTo = function(arglist__7372) {
          var x = cljs.core.first(arglist__7372);
          arglist__7372 = cljs.core.next(arglist__7372);
          var y = cljs.core.first(arglist__7372);
          arglist__7372 = cljs.core.next(arglist__7372);
          var z = cljs.core.first(arglist__7372);
          var args = cljs.core.rest(arglist__7372);
          return G__7370__delegate(x, y, z, args);
        };
        G__7370.cljs$core$IFn$_invoke$arity$variadic = G__7370__delegate;
        return G__7370;
      }();
      G__7369 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7369__0.call(this);
          case 1:
            return G__7369__1.call(this, x);
          case 2:
            return G__7369__2.call(this, x, y);
          case 3:
            return G__7369__3.call(this, x, y, z);
          default:
            var G__7373 = null;
            if (arguments.length > 3) {
              var G__7374__i = 0, G__7374__a = new Array(arguments.length - 3);
              while (G__7374__i < G__7374__a.length) {
                G__7374__a[G__7374__i] = arguments[G__7374__i + 3];
                ++G__7374__i;
              }
              G__7373 = new cljs.core.IndexedSeq(G__7374__a, 0);
            }
            return G__7369__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7373);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7369.cljs$lang$maxFixedArity = 3;
      G__7369.cljs$lang$applyTo = G__7369__4.cljs$lang$applyTo;
      G__7369.cljs$core$IFn$_invoke$arity$0 = G__7369__0;
      G__7369.cljs$core$IFn$_invoke$arity$1 = G__7369__1;
      G__7369.cljs$core$IFn$_invoke$arity$2 = G__7369__2;
      G__7369.cljs$core$IFn$_invoke$arity$3 = G__7369__3;
      G__7369.cljs$core$IFn$_invoke$arity$variadic = G__7369__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7369;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7375 = null;
      var G__7375__0 = function() {
        var G__7337 = arg1;
        var G__7338 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7337, G__7338) : f.call(null, G__7337, G__7338);
      };
      var G__7375__1 = function(x) {
        var G__7339 = arg1;
        var G__7340 = arg2;
        var G__7341 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7339, G__7340, G__7341) : f.call(null, G__7339, G__7340, G__7341);
      };
      var G__7375__2 = function(x, y) {
        var G__7342 = arg1;
        var G__7343 = arg2;
        var G__7344 = x;
        var G__7345 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7342, G__7343, G__7344, G__7345) : f.call(null, G__7342, G__7343, G__7344, G__7345);
      };
      var G__7375__3 = function(x, y, z) {
        var G__7346 = arg1;
        var G__7347 = arg2;
        var G__7348 = x;
        var G__7349 = y;
        var G__7350 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7346, G__7347, G__7348, G__7349, G__7350) : f.call(null, G__7346, G__7347, G__7348, G__7349, G__7350);
      };
      var G__7375__4 = function() {
        var G__7376__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__7376 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7377__i = 0, G__7377__a = new Array(arguments.length - 3);
            while (G__7377__i < G__7377__a.length) {
              G__7377__a[G__7377__i] = arguments[G__7377__i + 3];
              ++G__7377__i;
            }
            args = new cljs.core.IndexedSeq(G__7377__a, 0);
          }
          return G__7376__delegate.call(this, x, y, z, args);
        };
        G__7376.cljs$lang$maxFixedArity = 3;
        G__7376.cljs$lang$applyTo = function(arglist__7378) {
          var x = cljs.core.first(arglist__7378);
          arglist__7378 = cljs.core.next(arglist__7378);
          var y = cljs.core.first(arglist__7378);
          arglist__7378 = cljs.core.next(arglist__7378);
          var z = cljs.core.first(arglist__7378);
          var args = cljs.core.rest(arglist__7378);
          return G__7376__delegate(x, y, z, args);
        };
        G__7376.cljs$core$IFn$_invoke$arity$variadic = G__7376__delegate;
        return G__7376;
      }();
      G__7375 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7375__0.call(this);
          case 1:
            return G__7375__1.call(this, x);
          case 2:
            return G__7375__2.call(this, x, y);
          case 3:
            return G__7375__3.call(this, x, y, z);
          default:
            var G__7379 = null;
            if (arguments.length > 3) {
              var G__7380__i = 0, G__7380__a = new Array(arguments.length - 3);
              while (G__7380__i < G__7380__a.length) {
                G__7380__a[G__7380__i] = arguments[G__7380__i + 3];
                ++G__7380__i;
              }
              G__7379 = new cljs.core.IndexedSeq(G__7380__a, 0);
            }
            return G__7375__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7379);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7375.cljs$lang$maxFixedArity = 3;
      G__7375.cljs$lang$applyTo = G__7375__4.cljs$lang$applyTo;
      G__7375.cljs$core$IFn$_invoke$arity$0 = G__7375__0;
      G__7375.cljs$core$IFn$_invoke$arity$1 = G__7375__1;
      G__7375.cljs$core$IFn$_invoke$arity$2 = G__7375__2;
      G__7375.cljs$core$IFn$_invoke$arity$3 = G__7375__3;
      G__7375.cljs$core$IFn$_invoke$arity$variadic = G__7375__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7375;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7381 = null;
      var G__7381__0 = function() {
        var G__7351 = arg1;
        var G__7352 = arg2;
        var G__7353 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7351, G__7352, G__7353) : f.call(null, G__7351, G__7352, G__7353);
      };
      var G__7381__1 = function(x) {
        var G__7354 = arg1;
        var G__7355 = arg2;
        var G__7356 = arg3;
        var G__7357 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7354, G__7355, G__7356, G__7357) : f.call(null, G__7354, G__7355, G__7356, G__7357);
      };
      var G__7381__2 = function(x, y) {
        var G__7358 = arg1;
        var G__7359 = arg2;
        var G__7360 = arg3;
        var G__7361 = x;
        var G__7362 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7358, G__7359, G__7360, G__7361, G__7362) : f.call(null, G__7358, G__7359, G__7360, G__7361, G__7362);
      };
      var G__7381__3 = function(x, y, z) {
        var G__7363 = arg1;
        var G__7364 = arg2;
        var G__7365 = arg3;
        var G__7366 = x;
        var G__7367 = y;
        var G__7368 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7363, G__7364, G__7365, G__7366, G__7367, G__7368) : f.call(null, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368);
      };
      var G__7381__4 = function() {
        var G__7382__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__7382 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7383__i = 0, G__7383__a = new Array(arguments.length - 3);
            while (G__7383__i < G__7383__a.length) {
              G__7383__a[G__7383__i] = arguments[G__7383__i + 3];
              ++G__7383__i;
            }
            args = new cljs.core.IndexedSeq(G__7383__a, 0);
          }
          return G__7382__delegate.call(this, x, y, z, args);
        };
        G__7382.cljs$lang$maxFixedArity = 3;
        G__7382.cljs$lang$applyTo = function(arglist__7384) {
          var x = cljs.core.first(arglist__7384);
          arglist__7384 = cljs.core.next(arglist__7384);
          var y = cljs.core.first(arglist__7384);
          arglist__7384 = cljs.core.next(arglist__7384);
          var z = cljs.core.first(arglist__7384);
          var args = cljs.core.rest(arglist__7384);
          return G__7382__delegate(x, y, z, args);
        };
        G__7382.cljs$core$IFn$_invoke$arity$variadic = G__7382__delegate;
        return G__7382;
      }();
      G__7381 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7381__0.call(this);
          case 1:
            return G__7381__1.call(this, x);
          case 2:
            return G__7381__2.call(this, x, y);
          case 3:
            return G__7381__3.call(this, x, y, z);
          default:
            var G__7385 = null;
            if (arguments.length > 3) {
              var G__7386__i = 0, G__7386__a = new Array(arguments.length - 3);
              while (G__7386__i < G__7386__a.length) {
                G__7386__a[G__7386__i] = arguments[G__7386__i + 3];
                ++G__7386__i;
              }
              G__7385 = new cljs.core.IndexedSeq(G__7386__a, 0);
            }
            return G__7381__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7385);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7381.cljs$lang$maxFixedArity = 3;
      G__7381.cljs$lang$applyTo = G__7381__4.cljs$lang$applyTo;
      G__7381.cljs$core$IFn$_invoke$arity$0 = G__7381__0;
      G__7381.cljs$core$IFn$_invoke$arity$1 = G__7381__1;
      G__7381.cljs$core$IFn$_invoke$arity$2 = G__7381__2;
      G__7381.cljs$core$IFn$_invoke$arity$3 = G__7381__3;
      G__7381.cljs$core$IFn$_invoke$arity$variadic = G__7381__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7381;
    }();
  };
  var partial__5 = function() {
    var G__7387__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7388__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__7388 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__7389__i = 0, G__7389__a = new Array(arguments.length - 0);
            while (G__7389__i < G__7389__a.length) {
              G__7389__a[G__7389__i] = arguments[G__7389__i + 0];
              ++G__7389__i;
            }
            args = new cljs.core.IndexedSeq(G__7389__a, 0);
          }
          return G__7388__delegate.call(this, args);
        };
        G__7388.cljs$lang$maxFixedArity = 0;
        G__7388.cljs$lang$applyTo = function(arglist__7390) {
          var args = cljs.core.seq(arglist__7390);
          return G__7388__delegate(args);
        };
        G__7388.cljs$core$IFn$_invoke$arity$variadic = G__7388__delegate;
        return G__7388;
      }();
    };
    var G__7387 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7391__i = 0, G__7391__a = new Array(arguments.length - 4);
        while (G__7391__i < G__7391__a.length) {
          G__7391__a[G__7391__i] = arguments[G__7391__i + 4];
          ++G__7391__i;
        }
        more = new cljs.core.IndexedSeq(G__7391__a, 0);
      }
      return G__7387__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__7387.cljs$lang$maxFixedArity = 4;
    G__7387.cljs$lang$applyTo = function(arglist__7392) {
      var f = cljs.core.first(arglist__7392);
      arglist__7392 = cljs.core.next(arglist__7392);
      var arg1 = cljs.core.first(arglist__7392);
      arglist__7392 = cljs.core.next(arglist__7392);
      var arg2 = cljs.core.first(arglist__7392);
      arglist__7392 = cljs.core.next(arglist__7392);
      var arg3 = cljs.core.first(arglist__7392);
      var more = cljs.core.rest(arglist__7392);
      return G__7387__delegate(f, arg1, arg2, arg3, more);
    };
    G__7387.cljs$core$IFn$_invoke$arity$variadic = G__7387__delegate;
    return G__7387;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__7393 = null;
        if (arguments.length > 4) {
          var G__7394__i = 0, G__7394__a = new Array(arguments.length - 4);
          while (G__7394__i < G__7394__a.length) {
            G__7394__a[G__7394__i] = arguments[G__7394__i + 4];
            ++G__7394__i;
          }
          G__7393 = new cljs.core.IndexedSeq(G__7394__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__7393);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__7427 = null;
      var G__7427__1 = function(a) {
        var G__7411 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7411) : f.call(null, G__7411);
      };
      var G__7427__2 = function(a, b) {
        var G__7412 = a == null ? x : a;
        var G__7413 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7412, G__7413) : f.call(null, G__7412, G__7413);
      };
      var G__7427__3 = function(a, b, c) {
        var G__7414 = a == null ? x : a;
        var G__7415 = b;
        var G__7416 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7414, G__7415, G__7416) : f.call(null, G__7414, G__7415, G__7416);
      };
      var G__7427__4 = function() {
        var G__7428__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__7428 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7429__i = 0, G__7429__a = new Array(arguments.length - 3);
            while (G__7429__i < G__7429__a.length) {
              G__7429__a[G__7429__i] = arguments[G__7429__i + 3];
              ++G__7429__i;
            }
            ds = new cljs.core.IndexedSeq(G__7429__a, 0);
          }
          return G__7428__delegate.call(this, a, b, c, ds);
        };
        G__7428.cljs$lang$maxFixedArity = 3;
        G__7428.cljs$lang$applyTo = function(arglist__7430) {
          var a = cljs.core.first(arglist__7430);
          arglist__7430 = cljs.core.next(arglist__7430);
          var b = cljs.core.first(arglist__7430);
          arglist__7430 = cljs.core.next(arglist__7430);
          var c = cljs.core.first(arglist__7430);
          var ds = cljs.core.rest(arglist__7430);
          return G__7428__delegate(a, b, c, ds);
        };
        G__7428.cljs$core$IFn$_invoke$arity$variadic = G__7428__delegate;
        return G__7428;
      }();
      G__7427 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7427__1.call(this, a);
          case 2:
            return G__7427__2.call(this, a, b);
          case 3:
            return G__7427__3.call(this, a, b, c);
          default:
            var G__7431 = null;
            if (arguments.length > 3) {
              var G__7432__i = 0, G__7432__a = new Array(arguments.length - 3);
              while (G__7432__i < G__7432__a.length) {
                G__7432__a[G__7432__i] = arguments[G__7432__i + 3];
                ++G__7432__i;
              }
              G__7431 = new cljs.core.IndexedSeq(G__7432__a, 0);
            }
            return G__7427__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7431);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7427.cljs$lang$maxFixedArity = 3;
      G__7427.cljs$lang$applyTo = G__7427__4.cljs$lang$applyTo;
      G__7427.cljs$core$IFn$_invoke$arity$1 = G__7427__1;
      G__7427.cljs$core$IFn$_invoke$arity$2 = G__7427__2;
      G__7427.cljs$core$IFn$_invoke$arity$3 = G__7427__3;
      G__7427.cljs$core$IFn$_invoke$arity$variadic = G__7427__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7427;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__7433 = null;
      var G__7433__2 = function(a, b) {
        var G__7417 = a == null ? x : a;
        var G__7418 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7417, G__7418) : f.call(null, G__7417, G__7418);
      };
      var G__7433__3 = function(a, b, c) {
        var G__7419 = a == null ? x : a;
        var G__7420 = b == null ? y : b;
        var G__7421 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7419, G__7420, G__7421) : f.call(null, G__7419, G__7420, G__7421);
      };
      var G__7433__4 = function() {
        var G__7434__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__7434 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7435__i = 0, G__7435__a = new Array(arguments.length - 3);
            while (G__7435__i < G__7435__a.length) {
              G__7435__a[G__7435__i] = arguments[G__7435__i + 3];
              ++G__7435__i;
            }
            ds = new cljs.core.IndexedSeq(G__7435__a, 0);
          }
          return G__7434__delegate.call(this, a, b, c, ds);
        };
        G__7434.cljs$lang$maxFixedArity = 3;
        G__7434.cljs$lang$applyTo = function(arglist__7436) {
          var a = cljs.core.first(arglist__7436);
          arglist__7436 = cljs.core.next(arglist__7436);
          var b = cljs.core.first(arglist__7436);
          arglist__7436 = cljs.core.next(arglist__7436);
          var c = cljs.core.first(arglist__7436);
          var ds = cljs.core.rest(arglist__7436);
          return G__7434__delegate(a, b, c, ds);
        };
        G__7434.cljs$core$IFn$_invoke$arity$variadic = G__7434__delegate;
        return G__7434;
      }();
      G__7433 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7433__2.call(this, a, b);
          case 3:
            return G__7433__3.call(this, a, b, c);
          default:
            var G__7437 = null;
            if (arguments.length > 3) {
              var G__7438__i = 0, G__7438__a = new Array(arguments.length - 3);
              while (G__7438__i < G__7438__a.length) {
                G__7438__a[G__7438__i] = arguments[G__7438__i + 3];
                ++G__7438__i;
              }
              G__7437 = new cljs.core.IndexedSeq(G__7438__a, 0);
            }
            return G__7433__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7437);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7433.cljs$lang$maxFixedArity = 3;
      G__7433.cljs$lang$applyTo = G__7433__4.cljs$lang$applyTo;
      G__7433.cljs$core$IFn$_invoke$arity$2 = G__7433__2;
      G__7433.cljs$core$IFn$_invoke$arity$3 = G__7433__3;
      G__7433.cljs$core$IFn$_invoke$arity$variadic = G__7433__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7433;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7439 = null;
      var G__7439__2 = function(a, b) {
        var G__7422 = a == null ? x : a;
        var G__7423 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7422, G__7423) : f.call(null, G__7422, G__7423);
      };
      var G__7439__3 = function(a, b, c) {
        var G__7424 = a == null ? x : a;
        var G__7425 = b == null ? y : b;
        var G__7426 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7424, G__7425, G__7426) : f.call(null, G__7424, G__7425, G__7426);
      };
      var G__7439__4 = function() {
        var G__7440__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__7440 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7441__i = 0, G__7441__a = new Array(arguments.length - 3);
            while (G__7441__i < G__7441__a.length) {
              G__7441__a[G__7441__i] = arguments[G__7441__i + 3];
              ++G__7441__i;
            }
            ds = new cljs.core.IndexedSeq(G__7441__a, 0);
          }
          return G__7440__delegate.call(this, a, b, c, ds);
        };
        G__7440.cljs$lang$maxFixedArity = 3;
        G__7440.cljs$lang$applyTo = function(arglist__7442) {
          var a = cljs.core.first(arglist__7442);
          arglist__7442 = cljs.core.next(arglist__7442);
          var b = cljs.core.first(arglist__7442);
          arglist__7442 = cljs.core.next(arglist__7442);
          var c = cljs.core.first(arglist__7442);
          var ds = cljs.core.rest(arglist__7442);
          return G__7440__delegate(a, b, c, ds);
        };
        G__7440.cljs$core$IFn$_invoke$arity$variadic = G__7440__delegate;
        return G__7440;
      }();
      G__7439 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7439__2.call(this, a, b);
          case 3:
            return G__7439__3.call(this, a, b, c);
          default:
            var G__7443 = null;
            if (arguments.length > 3) {
              var G__7444__i = 0, G__7444__a = new Array(arguments.length - 3);
              while (G__7444__i < G__7444__a.length) {
                G__7444__a[G__7444__i] = arguments[G__7444__i + 3];
                ++G__7444__i;
              }
              G__7443 = new cljs.core.IndexedSeq(G__7444__a, 0);
            }
            return G__7439__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7443);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7439.cljs$lang$maxFixedArity = 3;
      G__7439.cljs$lang$applyTo = G__7439__4.cljs$lang$applyTo;
      G__7439.cljs$core$IFn$_invoke$arity$2 = G__7439__2;
      G__7439.cljs$core$IFn$_invoke$arity$3 = G__7439__3;
      G__7439.cljs$core$IFn$_invoke$arity$variadic = G__7439__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7439;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__7475 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7475) : cljs.core.volatile_BANG_.call(null, G__7475);
      }();
      return function(i) {
        return function() {
          var G__7505 = null;
          var G__7505__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7505__1 = function(result) {
            var G__7476 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7476) : rf.call(null, G__7476);
          };
          var G__7505__2 = function(result, input) {
            var G__7477 = result;
            var G__7478 = function() {
              var G__7479 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__7480 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7479, G__7480) : f.call(null, G__7479, G__7480);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7477, G__7478) : rf.call(null, G__7477, G__7478);
          };
          G__7505 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7505__0.call(this);
              case 1:
                return G__7505__1.call(this, result);
              case 2:
                return G__7505__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7505.cljs$core$IFn$_invoke$arity$0 = G__7505__0;
          G__7505.cljs$core$IFn$_invoke$arity$1 = G__7505__1;
          G__7505.cljs$core$IFn$_invoke$arity$2 = G__7505__2;
          return G__7505;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4114__auto___7506 = size;
            var i_7507 = 0;
            while (true) {
              if (i_7507 < n__4114__auto___7506) {
                cljs.core.chunk_append(b, function() {
                  var G__7501 = idx + i_7507;
                  var G__7502 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7507);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7501, G__7502) : f.call(null, G__7501, G__7502);
                }());
                var G__7508 = i_7507 + 1;
                i_7507 = G__7508;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__7503 = idx;
              var G__7504 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7503, G__7504) : f.call(null, G__7503, G__7504);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__7527 = null;
        var G__7527__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7527__1 = function(result) {
          var G__7521 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7521) : rf.call(null, G__7521);
        };
        var G__7527__2 = function(result, input) {
          var v = function() {
            var G__7522 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7522) : f.call(null, G__7522);
          }();
          if (v == null) {
            return result;
          } else {
            var G__7523 = result;
            var G__7524 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7523, G__7524) : rf.call(null, G__7523, G__7524);
          }
        };
        G__7527 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7527__0.call(this);
            case 1:
              return G__7527__1.call(this, result);
            case 2:
              return G__7527__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7527.cljs$core$IFn$_invoke$arity$0 = G__7527__0;
        G__7527.cljs$core$IFn$_invoke$arity$1 = G__7527__1;
        G__7527.cljs$core$IFn$_invoke$arity$2 = G__7527__2;
        return G__7527;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4114__auto___7528 = size;
          var i_7529 = 0;
          while (true) {
            if (i_7529 < n__4114__auto___7528) {
              var x_7530 = function() {
                var G__7525 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7529);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7525) : f.call(null, G__7525);
              }();
              if (x_7530 == null) {
              } else {
                cljs.core.chunk_append(b, x_7530);
              }
              var G__7531 = i_7529 + 1;
              i_7529 = G__7531;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7526 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7526) : f.call(null, G__7526);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__7532 = this$__$1;
  return goog.getUid(G__7532);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7533 = cljs.core.seq(self__.watches);
  var chunk__7534 = null;
  var count__7535 = 0;
  var i__7536 = 0;
  while (true) {
    if (i__7536 < count__7535) {
      var vec__7537 = chunk__7534.cljs$core$IIndexed$_nth$arity$2(null, i__7536);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7537, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7537, 1, null);
      var G__7538_7547 = key;
      var G__7539_7548 = this$__$1;
      var G__7540_7549 = oldval;
      var G__7541_7550 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7538_7547, G__7539_7548, G__7540_7549, G__7541_7550) : f.call(null, G__7538_7547, G__7539_7548, G__7540_7549, G__7541_7550);
      var G__7551 = seq__7533;
      var G__7552 = chunk__7534;
      var G__7553 = count__7535;
      var G__7554 = i__7536 + 1;
      seq__7533 = G__7551;
      chunk__7534 = G__7552;
      count__7535 = G__7553;
      i__7536 = G__7554;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__7533);
      if (temp__4126__auto__) {
        var seq__7533__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7533__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__7533__$1);
          var G__7555 = cljs.core.chunk_rest(seq__7533__$1);
          var G__7556 = c__4014__auto__;
          var G__7557 = cljs.core.count(c__4014__auto__);
          var G__7558 = 0;
          seq__7533 = G__7555;
          chunk__7534 = G__7556;
          count__7535 = G__7557;
          i__7536 = G__7558;
          continue;
        } else {
          var vec__7542 = cljs.core.first(seq__7533__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7542, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7542, 1, null);
          var G__7543_7559 = key;
          var G__7544_7560 = this$__$1;
          var G__7545_7561 = oldval;
          var G__7546_7562 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7543_7559, G__7544_7560, G__7545_7561, G__7546_7562) : f.call(null, G__7543_7559, G__7544_7560, G__7545_7561, G__7546_7562);
          var G__7563 = cljs.core.next(seq__7533__$1);
          var G__7564 = null;
          var G__7565 = 0;
          var G__7566 = 0;
          seq__7533 = G__7563;
          chunk__7534 = G__7564;
          count__7535 = G__7565;
          i__7536 = G__7566;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__7570__delegate = function(x, p__7567) {
      var map__7569 = p__7567;
      var map__7569__$1 = cljs.core.seq_QMARK_(map__7569) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7569) : map__7569;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7569__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7569__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7570 = function(x, var_args) {
      var p__7567 = null;
      if (arguments.length > 1) {
        var G__7571__i = 0, G__7571__a = new Array(arguments.length - 1);
        while (G__7571__i < G__7571__a.length) {
          G__7571__a[G__7571__i] = arguments[G__7571__i + 1];
          ++G__7571__i;
        }
        p__7567 = new cljs.core.IndexedSeq(G__7571__a, 0);
      }
      return G__7570__delegate.call(this, x, p__7567);
    };
    G__7570.cljs$lang$maxFixedArity = 1;
    G__7570.cljs$lang$applyTo = function(arglist__7572) {
      var x = cljs.core.first(arglist__7572);
      var p__7567 = cljs.core.rest(arglist__7572);
      return G__7570__delegate(x, p__7567);
    };
    G__7570.cljs$core$IFn$_invoke$arity$variadic = G__7570__delegate;
    return G__7570;
  }();
  atom = function(x, var_args) {
    var p__7567 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__7573 = null;
        if (arguments.length > 1) {
          var G__7574__i = 0, G__7574__a = new Array(arguments.length - 1);
          while (G__7574__i < G__7574__a.length) {
            G__7574__a[G__7574__i] = arguments[G__7574__i + 1];
            ++G__7574__i;
          }
          G__7573 = new cljs.core.IndexedSeq(G__7574__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7573);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__7577 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7577) : validate.call(null, G__7577);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7578 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7578) : cljs.core.pr_str.call(null, G__7578);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7585 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7585) : f.call(null, G__7585);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7586 = a.state;
        var G__7587 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7586, G__7587) : f.call(null, G__7586, G__7587);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7588 = a.state;
        var G__7589 = x;
        var G__7590 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7588, G__7589, G__7590) : f.call(null, G__7588, G__7589, G__7590);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__7591__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__7591 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7592__i = 0, G__7592__a = new Array(arguments.length - 4);
        while (G__7592__i < G__7592__a.length) {
          G__7592__a[G__7592__i] = arguments[G__7592__i + 4];
          ++G__7592__i;
        }
        more = new cljs.core.IndexedSeq(G__7592__a, 0);
      }
      return G__7591__delegate.call(this, a, f, x, y, more);
    };
    G__7591.cljs$lang$maxFixedArity = 4;
    G__7591.cljs$lang$applyTo = function(arglist__7593) {
      var a = cljs.core.first(arglist__7593);
      arglist__7593 = cljs.core.next(arglist__7593);
      var f = cljs.core.first(arglist__7593);
      arglist__7593 = cljs.core.next(arglist__7593);
      var x = cljs.core.first(arglist__7593);
      arglist__7593 = cljs.core.next(arglist__7593);
      var y = cljs.core.first(arglist__7593);
      var more = cljs.core.rest(arglist__7593);
      return G__7591__delegate(a, f, x, y, more);
    };
    G__7591.cljs$core$IFn$_invoke$arity$variadic = G__7591__delegate;
    return G__7591;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__7594 = null;
        if (arguments.length > 4) {
          var G__7595__i = 0, G__7595__a = new Array(arguments.length - 4);
          while (G__7595__i < G__7595__a.length) {
            G__7595__a[G__7595__i] = arguments[G__7595__i + 4];
            ++G__7595__i;
          }
          G__7594 = new cljs.core.IndexedSeq(G__7595__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__7594);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__7662 = null;
          var G__7662__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7662__1 = function(result) {
            var G__7629 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7629) : rf.call(null, G__7629);
          };
          var G__7662__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__7630 = i;
              var G__7631 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7630, G__7631) : f.call(null, G__7630, G__7631);
            }();
            if (v == null) {
              return result;
            } else {
              var G__7632 = result;
              var G__7633 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7632, G__7633) : rf.call(null, G__7632, G__7633);
            }
          };
          G__7662 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7662__0.call(this);
              case 1:
                return G__7662__1.call(this, result);
              case 2:
                return G__7662__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7662.cljs$core$IFn$_invoke$arity$0 = G__7662__0;
          G__7662.cljs$core$IFn$_invoke$arity$1 = G__7662__1;
          G__7662.cljs$core$IFn$_invoke$arity$2 = G__7662__2;
          return G__7662;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4114__auto___7663 = size;
            var i_7664 = 0;
            while (true) {
              if (i_7664 < n__4114__auto___7663) {
                var x_7665 = function() {
                  var G__7658 = idx + i_7664;
                  var G__7659 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7664);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7658, G__7659) : f.call(null, G__7658, G__7659);
                }();
                if (x_7665 == null) {
                } else {
                  cljs.core.chunk_append(b, x_7665);
                }
                var G__7666 = i_7664 + 1;
                i_7664 = G__7666;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__7660 = idx;
              var G__7661 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7660, G__7661) : f.call(null, G__7660, G__7661);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__7880 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7880) : p.call(null, G__7880);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7882 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7882) : p.call(null, G__7882);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var G__7883 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7883) : p.call(null, G__7883);
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7885 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7885) : p.call(null, G__7885);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__7887 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7887) : p.call(null, G__7887);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var G__7888 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7888) : p.call(null, G__7888);
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__8057__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__8057 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8058__i = 0, G__8058__a = new Array(arguments.length - 3);
            while (G__8058__i < G__8058__a.length) {
              G__8058__a[G__8058__i] = arguments[G__8058__i + 3];
              ++G__8058__i;
            }
            args = new cljs.core.IndexedSeq(G__8058__a, 0);
          }
          return G__8057__delegate.call(this, x, y, z, args);
        };
        G__8057.cljs$lang$maxFixedArity = 3;
        G__8057.cljs$lang$applyTo = function(arglist__8059) {
          var x = cljs.core.first(arglist__8059);
          arglist__8059 = cljs.core.next(arglist__8059);
          var y = cljs.core.first(arglist__8059);
          arglist__8059 = cljs.core.next(arglist__8059);
          var z = cljs.core.first(arglist__8059);
          var args = cljs.core.rest(arglist__8059);
          return G__8057__delegate(x, y, z, args);
        };
        G__8057.cljs$core$IFn$_invoke$arity$variadic = G__8057__delegate;
        return G__8057;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__8060 = null;
            if (arguments.length > 3) {
              var G__8061__i = 0, G__8061__a = new Array(arguments.length - 3);
              while (G__8061__i < G__8061__a.length) {
                G__8061__a[G__8061__i] = arguments[G__8061__i + 3];
                ++G__8061__i;
              }
              G__8060 = new cljs.core.IndexedSeq(G__8061__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8060);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7920 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7920) : p1.call(null, G__7920);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var G__7921 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7921) : p2.call(null, G__7921);
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7923 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7923) : p1.call(null, G__7923);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__7925 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7925) : p1.call(null, G__7925);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var and__3215__auto____$2 = function() {
                var G__7927 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7927) : p2.call(null, G__7927);
              }();
              if (cljs.core.truth_(and__3215__auto____$2)) {
                var G__7928 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7928) : p2.call(null, G__7928);
              } else {
                return and__3215__auto____$2;
              }
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7930 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7930) : p1.call(null, G__7930);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__7932 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7932) : p1.call(null, G__7932);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var and__3215__auto____$2 = function() {
                var G__7934 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7934) : p1.call(null, G__7934);
              }();
              if (cljs.core.truth_(and__3215__auto____$2)) {
                var and__3215__auto____$3 = function() {
                  var G__7936 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7936) : p2.call(null, G__7936);
                }();
                if (cljs.core.truth_(and__3215__auto____$3)) {
                  var and__3215__auto____$4 = function() {
                    var G__7938 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7938) : p2.call(null, G__7938);
                  }();
                  if (cljs.core.truth_(and__3215__auto____$4)) {
                    var G__7939 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7939) : p2.call(null, G__7939);
                  } else {
                    return and__3215__auto____$4;
                  }
                } else {
                  return and__3215__auto____$3;
                }
              } else {
                return and__3215__auto____$2;
              }
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__8062__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7667_SHARP_) {
            var and__3215__auto__ = function() {
              var G__7944 = p1__7667_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7944) : p1.call(null, G__7944);
            }();
            if (cljs.core.truth_(and__3215__auto__)) {
              var G__7945 = p1__7667_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7945) : p2.call(null, G__7945);
            } else {
              return and__3215__auto__;
            }
          }, args));
        };
        var G__8062 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8063__i = 0, G__8063__a = new Array(arguments.length - 3);
            while (G__8063__i < G__8063__a.length) {
              G__8063__a[G__8063__i] = arguments[G__8063__i + 3];
              ++G__8063__i;
            }
            args = new cljs.core.IndexedSeq(G__8063__a, 0);
          }
          return G__8062__delegate.call(this, x, y, z, args);
        };
        G__8062.cljs$lang$maxFixedArity = 3;
        G__8062.cljs$lang$applyTo = function(arglist__8064) {
          var x = cljs.core.first(arglist__8064);
          arglist__8064 = cljs.core.next(arglist__8064);
          var y = cljs.core.first(arglist__8064);
          arglist__8064 = cljs.core.next(arglist__8064);
          var z = cljs.core.first(arglist__8064);
          var args = cljs.core.rest(arglist__8064);
          return G__8062__delegate(x, y, z, args);
        };
        G__8062.cljs$core$IFn$_invoke$arity$variadic = G__8062__delegate;
        return G__8062;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__8065 = null;
            if (arguments.length > 3) {
              var G__8066__i = 0, G__8066__a = new Array(arguments.length - 3);
              while (G__8066__i < G__8066__a.length) {
                G__8066__a[G__8066__i] = arguments[G__8066__i + 3];
                ++G__8066__i;
              }
              G__8065 = new cljs.core.IndexedSeq(G__8066__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8065);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7991 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7991) : p1.call(null, G__7991);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__7993 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7993) : p2.call(null, G__7993);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var G__7994 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7994) : p3.call(null, G__7994);
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__7996 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7996) : p1.call(null, G__7996);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__7998 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7998) : p2.call(null, G__7998);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var and__3215__auto____$2 = function() {
                var G__8000 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8000) : p3.call(null, G__8000);
              }();
              if (cljs.core.truth_(and__3215__auto____$2)) {
                var and__3215__auto____$3 = function() {
                  var G__8002 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8002) : p1.call(null, G__8002);
                }();
                if (cljs.core.truth_(and__3215__auto____$3)) {
                  var and__3215__auto____$4 = function() {
                    var G__8004 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8004) : p2.call(null, G__8004);
                  }();
                  if (cljs.core.truth_(and__3215__auto____$4)) {
                    var G__8005 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8005) : p3.call(null, G__8005);
                  } else {
                    return and__3215__auto____$4;
                  }
                } else {
                  return and__3215__auto____$3;
                }
              } else {
                return and__3215__auto____$2;
              }
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3215__auto__ = function() {
            var G__8007 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8007) : p1.call(null, G__8007);
          }();
          if (cljs.core.truth_(and__3215__auto__)) {
            var and__3215__auto____$1 = function() {
              var G__8009 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8009) : p2.call(null, G__8009);
            }();
            if (cljs.core.truth_(and__3215__auto____$1)) {
              var and__3215__auto____$2 = function() {
                var G__8011 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8011) : p3.call(null, G__8011);
              }();
              if (cljs.core.truth_(and__3215__auto____$2)) {
                var and__3215__auto____$3 = function() {
                  var G__8013 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8013) : p1.call(null, G__8013);
                }();
                if (cljs.core.truth_(and__3215__auto____$3)) {
                  var and__3215__auto____$4 = function() {
                    var G__8015 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8015) : p2.call(null, G__8015);
                  }();
                  if (cljs.core.truth_(and__3215__auto____$4)) {
                    var and__3215__auto____$5 = function() {
                      var G__8017 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8017) : p3.call(null, G__8017);
                    }();
                    if (cljs.core.truth_(and__3215__auto____$5)) {
                      var and__3215__auto____$6 = function() {
                        var G__8019 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8019) : p1.call(null, G__8019);
                      }();
                      if (cljs.core.truth_(and__3215__auto____$6)) {
                        var and__3215__auto____$7 = function() {
                          var G__8021 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8021) : p2.call(null, G__8021);
                        }();
                        if (cljs.core.truth_(and__3215__auto____$7)) {
                          var G__8022 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8022) : p3.call(null, G__8022);
                        } else {
                          return and__3215__auto____$7;
                        }
                      } else {
                        return and__3215__auto____$6;
                      }
                    } else {
                      return and__3215__auto____$5;
                    }
                  } else {
                    return and__3215__auto____$4;
                  }
                } else {
                  return and__3215__auto____$3;
                }
              } else {
                return and__3215__auto____$2;
              }
            } else {
              return and__3215__auto____$1;
            }
          } else {
            return and__3215__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__8067__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__7668_SHARP_) {
            var and__3215__auto__ = function() {
              var G__8029 = p1__7668_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8029) : p1.call(null, G__8029);
            }();
            if (cljs.core.truth_(and__3215__auto__)) {
              var and__3215__auto____$1 = function() {
                var G__8031 = p1__7668_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8031) : p2.call(null, G__8031);
              }();
              if (cljs.core.truth_(and__3215__auto____$1)) {
                var G__8032 = p1__7668_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8032) : p3.call(null, G__8032);
              } else {
                return and__3215__auto____$1;
              }
            } else {
              return and__3215__auto__;
            }
          }, args));
        };
        var G__8067 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8068__i = 0, G__8068__a = new Array(arguments.length - 3);
            while (G__8068__i < G__8068__a.length) {
              G__8068__a[G__8068__i] = arguments[G__8068__i + 3];
              ++G__8068__i;
            }
            args = new cljs.core.IndexedSeq(G__8068__a, 0);
          }
          return G__8067__delegate.call(this, x, y, z, args);
        };
        G__8067.cljs$lang$maxFixedArity = 3;
        G__8067.cljs$lang$applyTo = function(arglist__8069) {
          var x = cljs.core.first(arglist__8069);
          arglist__8069 = cljs.core.next(arglist__8069);
          var y = cljs.core.first(arglist__8069);
          arglist__8069 = cljs.core.next(arglist__8069);
          var z = cljs.core.first(arglist__8069);
          var args = cljs.core.rest(arglist__8069);
          return G__8067__delegate(x, y, z, args);
        };
        G__8067.cljs$core$IFn$_invoke$arity$variadic = G__8067__delegate;
        return G__8067;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__8070 = null;
            if (arguments.length > 3) {
              var G__8071__i = 0, G__8071__a = new Array(arguments.length - 3);
              while (G__8071__i < G__8071__a.length) {
                G__8071__a[G__8071__i] = arguments[G__8071__i + 3];
                ++G__8071__i;
              }
              G__8070 = new cljs.core.IndexedSeq(G__8071__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8070);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__8072__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7669_SHARP_) {
                var G__8048 = x;
                return p1__7669_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7669_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8048) : p1__7669_SHARP_.call(null, G__8048);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7670_SHARP_) {
                var and__3215__auto__ = function() {
                  var G__8050 = x;
                  return p1__7670_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7670_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8050) : p1__7670_SHARP_.call(null, G__8050);
                }();
                if (cljs.core.truth_(and__3215__auto__)) {
                  var G__8051 = y;
                  return p1__7670_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7670_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8051) : p1__7670_SHARP_.call(null, G__8051);
                } else {
                  return and__3215__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__7671_SHARP_) {
                var and__3215__auto__ = function() {
                  var G__8053 = x;
                  return p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8053) : p1__7671_SHARP_.call(null, G__8053);
                }();
                if (cljs.core.truth_(and__3215__auto__)) {
                  var and__3215__auto____$1 = function() {
                    var G__8055 = y;
                    return p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8055) : p1__7671_SHARP_.call(null, G__8055);
                  }();
                  if (cljs.core.truth_(and__3215__auto____$1)) {
                    var G__8056 = z;
                    return p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7671_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8056) : p1__7671_SHARP_.call(null, G__8056);
                  } else {
                    return and__3215__auto____$1;
                  }
                } else {
                  return and__3215__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__8073__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__7672_SHARP_) {
                  return cljs.core.every_QMARK_(p1__7672_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__8073 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8074__i = 0, G__8074__a = new Array(arguments.length - 3);
                while (G__8074__i < G__8074__a.length) {
                  G__8074__a[G__8074__i] = arguments[G__8074__i + 3];
                  ++G__8074__i;
                }
                args = new cljs.core.IndexedSeq(G__8074__a, 0);
              }
              return G__8073__delegate.call(this, x, y, z, args);
            };
            G__8073.cljs$lang$maxFixedArity = 3;
            G__8073.cljs$lang$applyTo = function(arglist__8075) {
              var x = cljs.core.first(arglist__8075);
              arglist__8075 = cljs.core.next(arglist__8075);
              var y = cljs.core.first(arglist__8075);
              arglist__8075 = cljs.core.next(arglist__8075);
              var z = cljs.core.first(arglist__8075);
              var args = cljs.core.rest(arglist__8075);
              return G__8073__delegate(x, y, z, args);
            };
            G__8073.cljs$core$IFn$_invoke$arity$variadic = G__8073__delegate;
            return G__8073;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__8076 = null;
                if (arguments.length > 3) {
                  var G__8077__i = 0, G__8077__a = new Array(arguments.length - 3);
                  while (G__8077__i < G__8077__a.length) {
                    G__8077__a[G__8077__i] = arguments[G__8077__i + 3];
                    ++G__8077__i;
                  }
                  G__8076 = new cljs.core.IndexedSeq(G__8077__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8076);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__8072 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8078__i = 0, G__8078__a = new Array(arguments.length - 3);
        while (G__8078__i < G__8078__a.length) {
          G__8078__a[G__8078__i] = arguments[G__8078__i + 3];
          ++G__8078__i;
        }
        ps = new cljs.core.IndexedSeq(G__8078__a, 0);
      }
      return G__8072__delegate.call(this, p1, p2, p3, ps);
    };
    G__8072.cljs$lang$maxFixedArity = 3;
    G__8072.cljs$lang$applyTo = function(arglist__8079) {
      var p1 = cljs.core.first(arglist__8079);
      arglist__8079 = cljs.core.next(arglist__8079);
      var p2 = cljs.core.first(arglist__8079);
      arglist__8079 = cljs.core.next(arglist__8079);
      var p3 = cljs.core.first(arglist__8079);
      var ps = cljs.core.rest(arglist__8079);
      return G__8072__delegate(p1, p2, p3, ps);
    };
    G__8072.cljs$core$IFn$_invoke$arity$variadic = G__8072__delegate;
    return G__8072;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__8080 = null;
        if (arguments.length > 3) {
          var G__8081__i = 0, G__8081__a = new Array(arguments.length - 3);
          while (G__8081__i < G__8081__a.length) {
            G__8081__a[G__8081__i] = arguments[G__8081__i + 3];
            ++G__8081__i;
          }
          G__8080 = new cljs.core.IndexedSeq(G__8081__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8080);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__8287 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8287) : p.call(null, G__8287);
      };
      var sp1__2 = function(x, y) {
        var or__3227__auto__ = function() {
          var G__8289 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8289) : p.call(null, G__8289);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var G__8290 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8290) : p.call(null, G__8290);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3227__auto__ = function() {
          var G__8292 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8292) : p.call(null, G__8292);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8294 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8294) : p.call(null, G__8294);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var G__8295 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8295) : p.call(null, G__8295);
          }
        }
      };
      var sp1__4 = function() {
        var G__8456__delegate = function(x, y, z, args) {
          var or__3227__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__8456 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8457__i = 0, G__8457__a = new Array(arguments.length - 3);
            while (G__8457__i < G__8457__a.length) {
              G__8457__a[G__8457__i] = arguments[G__8457__i + 3];
              ++G__8457__i;
            }
            args = new cljs.core.IndexedSeq(G__8457__a, 0);
          }
          return G__8456__delegate.call(this, x, y, z, args);
        };
        G__8456.cljs$lang$maxFixedArity = 3;
        G__8456.cljs$lang$applyTo = function(arglist__8458) {
          var x = cljs.core.first(arglist__8458);
          arglist__8458 = cljs.core.next(arglist__8458);
          var y = cljs.core.first(arglist__8458);
          arglist__8458 = cljs.core.next(arglist__8458);
          var z = cljs.core.first(arglist__8458);
          var args = cljs.core.rest(arglist__8458);
          return G__8456__delegate(x, y, z, args);
        };
        G__8456.cljs$core$IFn$_invoke$arity$variadic = G__8456__delegate;
        return G__8456;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__8459 = null;
            if (arguments.length > 3) {
              var G__8460__i = 0, G__8460__a = new Array(arguments.length - 3);
              while (G__8460__i < G__8460__a.length) {
                G__8460__a[G__8460__i] = arguments[G__8460__i + 3];
                ++G__8460__i;
              }
              G__8459 = new cljs.core.IndexedSeq(G__8460__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8459);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3227__auto__ = function() {
          var G__8327 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8327) : p1.call(null, G__8327);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var G__8328 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8328) : p2.call(null, G__8328);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3227__auto__ = function() {
          var G__8330 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8330) : p1.call(null, G__8330);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8332 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8332) : p1.call(null, G__8332);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var or__3227__auto____$2 = function() {
              var G__8334 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8334) : p2.call(null, G__8334);
            }();
            if (cljs.core.truth_(or__3227__auto____$2)) {
              return or__3227__auto____$2;
            } else {
              var G__8335 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8335) : p2.call(null, G__8335);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3227__auto__ = function() {
          var G__8337 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8337) : p1.call(null, G__8337);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8339 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8339) : p1.call(null, G__8339);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var or__3227__auto____$2 = function() {
              var G__8341 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8341) : p1.call(null, G__8341);
            }();
            if (cljs.core.truth_(or__3227__auto____$2)) {
              return or__3227__auto____$2;
            } else {
              var or__3227__auto____$3 = function() {
                var G__8343 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8343) : p2.call(null, G__8343);
              }();
              if (cljs.core.truth_(or__3227__auto____$3)) {
                return or__3227__auto____$3;
              } else {
                var or__3227__auto____$4 = function() {
                  var G__8345 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8345) : p2.call(null, G__8345);
                }();
                if (cljs.core.truth_(or__3227__auto____$4)) {
                  return or__3227__auto____$4;
                } else {
                  var G__8346 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8346) : p2.call(null, G__8346);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8461__delegate = function(x, y, z, args) {
          var or__3227__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return cljs.core.some(function(or__3227__auto__) {
              return function(p1__8082_SHARP_) {
                var or__3227__auto____$1 = function() {
                  var G__8348 = p1__8082_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8348) : p1.call(null, G__8348);
                }();
                if (cljs.core.truth_(or__3227__auto____$1)) {
                  return or__3227__auto____$1;
                } else {
                  var G__8349 = p1__8082_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8349) : p2.call(null, G__8349);
                }
              };
            }(or__3227__auto__), args);
          }
        };
        var G__8461 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8462__i = 0, G__8462__a = new Array(arguments.length - 3);
            while (G__8462__i < G__8462__a.length) {
              G__8462__a[G__8462__i] = arguments[G__8462__i + 3];
              ++G__8462__i;
            }
            args = new cljs.core.IndexedSeq(G__8462__a, 0);
          }
          return G__8461__delegate.call(this, x, y, z, args);
        };
        G__8461.cljs$lang$maxFixedArity = 3;
        G__8461.cljs$lang$applyTo = function(arglist__8463) {
          var x = cljs.core.first(arglist__8463);
          arglist__8463 = cljs.core.next(arglist__8463);
          var y = cljs.core.first(arglist__8463);
          arglist__8463 = cljs.core.next(arglist__8463);
          var z = cljs.core.first(arglist__8463);
          var args = cljs.core.rest(arglist__8463);
          return G__8461__delegate(x, y, z, args);
        };
        G__8461.cljs$core$IFn$_invoke$arity$variadic = G__8461__delegate;
        return G__8461;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__8464 = null;
            if (arguments.length > 3) {
              var G__8465__i = 0, G__8465__a = new Array(arguments.length - 3);
              while (G__8465__i < G__8465__a.length) {
                G__8465__a[G__8465__i] = arguments[G__8465__i + 3];
                ++G__8465__i;
              }
              G__8464 = new cljs.core.IndexedSeq(G__8465__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8464);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3227__auto__ = function() {
          var G__8395 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8395) : p1.call(null, G__8395);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8397 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8397) : p2.call(null, G__8397);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var G__8398 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8398) : p3.call(null, G__8398);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3227__auto__ = function() {
          var G__8400 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8400) : p1.call(null, G__8400);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8402 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8402) : p2.call(null, G__8402);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var or__3227__auto____$2 = function() {
              var G__8404 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8404) : p3.call(null, G__8404);
            }();
            if (cljs.core.truth_(or__3227__auto____$2)) {
              return or__3227__auto____$2;
            } else {
              var or__3227__auto____$3 = function() {
                var G__8406 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8406) : p1.call(null, G__8406);
              }();
              if (cljs.core.truth_(or__3227__auto____$3)) {
                return or__3227__auto____$3;
              } else {
                var or__3227__auto____$4 = function() {
                  var G__8408 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8408) : p2.call(null, G__8408);
                }();
                if (cljs.core.truth_(or__3227__auto____$4)) {
                  return or__3227__auto____$4;
                } else {
                  var G__8409 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8409) : p3.call(null, G__8409);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3227__auto__ = function() {
          var G__8411 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8411) : p1.call(null, G__8411);
        }();
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          var or__3227__auto____$1 = function() {
            var G__8413 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8413) : p2.call(null, G__8413);
          }();
          if (cljs.core.truth_(or__3227__auto____$1)) {
            return or__3227__auto____$1;
          } else {
            var or__3227__auto____$2 = function() {
              var G__8415 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8415) : p3.call(null, G__8415);
            }();
            if (cljs.core.truth_(or__3227__auto____$2)) {
              return or__3227__auto____$2;
            } else {
              var or__3227__auto____$3 = function() {
                var G__8417 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8417) : p1.call(null, G__8417);
              }();
              if (cljs.core.truth_(or__3227__auto____$3)) {
                return or__3227__auto____$3;
              } else {
                var or__3227__auto____$4 = function() {
                  var G__8419 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8419) : p2.call(null, G__8419);
                }();
                if (cljs.core.truth_(or__3227__auto____$4)) {
                  return or__3227__auto____$4;
                } else {
                  var or__3227__auto____$5 = function() {
                    var G__8421 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8421) : p3.call(null, G__8421);
                  }();
                  if (cljs.core.truth_(or__3227__auto____$5)) {
                    return or__3227__auto____$5;
                  } else {
                    var or__3227__auto____$6 = function() {
                      var G__8423 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8423) : p1.call(null, G__8423);
                    }();
                    if (cljs.core.truth_(or__3227__auto____$6)) {
                      return or__3227__auto____$6;
                    } else {
                      var or__3227__auto____$7 = function() {
                        var G__8425 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8425) : p2.call(null, G__8425);
                      }();
                      if (cljs.core.truth_(or__3227__auto____$7)) {
                        return or__3227__auto____$7;
                      } else {
                        var G__8426 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8426) : p3.call(null, G__8426);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8466__delegate = function(x, y, z, args) {
          var or__3227__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return cljs.core.some(function(or__3227__auto__) {
              return function(p1__8083_SHARP_) {
                var or__3227__auto____$1 = function() {
                  var G__8428 = p1__8083_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8428) : p1.call(null, G__8428);
                }();
                if (cljs.core.truth_(or__3227__auto____$1)) {
                  return or__3227__auto____$1;
                } else {
                  var or__3227__auto____$2 = function() {
                    var G__8430 = p1__8083_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8430) : p2.call(null, G__8430);
                  }();
                  if (cljs.core.truth_(or__3227__auto____$2)) {
                    return or__3227__auto____$2;
                  } else {
                    var G__8431 = p1__8083_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8431) : p3.call(null, G__8431);
                  }
                }
              };
            }(or__3227__auto__), args);
          }
        };
        var G__8466 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8467__i = 0, G__8467__a = new Array(arguments.length - 3);
            while (G__8467__i < G__8467__a.length) {
              G__8467__a[G__8467__i] = arguments[G__8467__i + 3];
              ++G__8467__i;
            }
            args = new cljs.core.IndexedSeq(G__8467__a, 0);
          }
          return G__8466__delegate.call(this, x, y, z, args);
        };
        G__8466.cljs$lang$maxFixedArity = 3;
        G__8466.cljs$lang$applyTo = function(arglist__8468) {
          var x = cljs.core.first(arglist__8468);
          arglist__8468 = cljs.core.next(arglist__8468);
          var y = cljs.core.first(arglist__8468);
          arglist__8468 = cljs.core.next(arglist__8468);
          var z = cljs.core.first(arglist__8468);
          var args = cljs.core.rest(arglist__8468);
          return G__8466__delegate(x, y, z, args);
        };
        G__8466.cljs$core$IFn$_invoke$arity$variadic = G__8466__delegate;
        return G__8466;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__8469 = null;
            if (arguments.length > 3) {
              var G__8470__i = 0, G__8470__a = new Array(arguments.length - 3);
              while (G__8470__i < G__8470__a.length) {
                G__8470__a[G__8470__i] = arguments[G__8470__i + 3];
                ++G__8470__i;
              }
              G__8469 = new cljs.core.IndexedSeq(G__8470__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8469);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__8471__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8084_SHARP_) {
                var G__8447 = x;
                return p1__8084_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8084_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8447) : p1__8084_SHARP_.call(null, G__8447);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8085_SHARP_) {
                var or__3227__auto__ = function() {
                  var G__8449 = x;
                  return p1__8085_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8085_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8449) : p1__8085_SHARP_.call(null, G__8449);
                }();
                if (cljs.core.truth_(or__3227__auto__)) {
                  return or__3227__auto__;
                } else {
                  var G__8450 = y;
                  return p1__8085_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8085_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8450) : p1__8085_SHARP_.call(null, G__8450);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8086_SHARP_) {
                var or__3227__auto__ = function() {
                  var G__8452 = x;
                  return p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8452) : p1__8086_SHARP_.call(null, G__8452);
                }();
                if (cljs.core.truth_(or__3227__auto__)) {
                  return or__3227__auto__;
                } else {
                  var or__3227__auto____$1 = function() {
                    var G__8454 = y;
                    return p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8454) : p1__8086_SHARP_.call(null, G__8454);
                  }();
                  if (cljs.core.truth_(or__3227__auto____$1)) {
                    return or__3227__auto____$1;
                  } else {
                    var G__8455 = z;
                    return p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8086_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8455) : p1__8086_SHARP_.call(null, G__8455);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__8472__delegate = function(x, y, z, args) {
              var or__3227__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3227__auto__)) {
                return or__3227__auto__;
              } else {
                return cljs.core.some(function(or__3227__auto__, ps__$1) {
                  return function(p1__8087_SHARP_) {
                    return cljs.core.some(p1__8087_SHARP_, args);
                  };
                }(or__3227__auto__, ps__$1), ps__$1);
              }
            };
            var G__8472 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8473__i = 0, G__8473__a = new Array(arguments.length - 3);
                while (G__8473__i < G__8473__a.length) {
                  G__8473__a[G__8473__i] = arguments[G__8473__i + 3];
                  ++G__8473__i;
                }
                args = new cljs.core.IndexedSeq(G__8473__a, 0);
              }
              return G__8472__delegate.call(this, x, y, z, args);
            };
            G__8472.cljs$lang$maxFixedArity = 3;
            G__8472.cljs$lang$applyTo = function(arglist__8474) {
              var x = cljs.core.first(arglist__8474);
              arglist__8474 = cljs.core.next(arglist__8474);
              var y = cljs.core.first(arglist__8474);
              arglist__8474 = cljs.core.next(arglist__8474);
              var z = cljs.core.first(arglist__8474);
              var args = cljs.core.rest(arglist__8474);
              return G__8472__delegate(x, y, z, args);
            };
            G__8472.cljs$core$IFn$_invoke$arity$variadic = G__8472__delegate;
            return G__8472;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__8475 = null;
                if (arguments.length > 3) {
                  var G__8476__i = 0, G__8476__a = new Array(arguments.length - 3);
                  while (G__8476__i < G__8476__a.length) {
                    G__8476__a[G__8476__i] = arguments[G__8476__i + 3];
                    ++G__8476__i;
                  }
                  G__8475 = new cljs.core.IndexedSeq(G__8476__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8475);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__8471 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8477__i = 0, G__8477__a = new Array(arguments.length - 3);
        while (G__8477__i < G__8477__a.length) {
          G__8477__a[G__8477__i] = arguments[G__8477__i + 3];
          ++G__8477__i;
        }
        ps = new cljs.core.IndexedSeq(G__8477__a, 0);
      }
      return G__8471__delegate.call(this, p1, p2, p3, ps);
    };
    G__8471.cljs$lang$maxFixedArity = 3;
    G__8471.cljs$lang$applyTo = function(arglist__8478) {
      var p1 = cljs.core.first(arglist__8478);
      arglist__8478 = cljs.core.next(arglist__8478);
      var p2 = cljs.core.first(arglist__8478);
      arglist__8478 = cljs.core.next(arglist__8478);
      var p3 = cljs.core.first(arglist__8478);
      var ps = cljs.core.rest(arglist__8478);
      return G__8471__delegate(p1, p2, p3, ps);
    };
    G__8471.cljs$core$IFn$_invoke$arity$variadic = G__8471__delegate;
    return G__8471;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__8479 = null;
        if (arguments.length > 3) {
          var G__8480__i = 0, G__8480__a = new Array(arguments.length - 3);
          while (G__8480__i < G__8480__a.length) {
            G__8480__a[G__8480__i] = arguments[G__8480__i + 3];
            ++G__8480__i;
          }
          G__8479 = new cljs.core.IndexedSeq(G__8480__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8479);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__8535 = null;
        var G__8535__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8535__1 = function(result) {
          var G__8521 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8521) : rf.call(null, G__8521);
        };
        var G__8535__2 = function(result, input) {
          var G__8522 = result;
          var G__8523 = function() {
            var G__8524 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8524) : f.call(null, G__8524);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8522, G__8523) : rf.call(null, G__8522, G__8523);
        };
        var G__8535__3 = function() {
          var G__8536__delegate = function(result, input, inputs) {
            var G__8525 = result;
            var G__8526 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8525, G__8526) : rf.call(null, G__8525, G__8526);
          };
          var G__8536 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__8537__i = 0, G__8537__a = new Array(arguments.length - 2);
              while (G__8537__i < G__8537__a.length) {
                G__8537__a[G__8537__i] = arguments[G__8537__i + 2];
                ++G__8537__i;
              }
              inputs = new cljs.core.IndexedSeq(G__8537__a, 0);
            }
            return G__8536__delegate.call(this, result, input, inputs);
          };
          G__8536.cljs$lang$maxFixedArity = 2;
          G__8536.cljs$lang$applyTo = function(arglist__8538) {
            var result = cljs.core.first(arglist__8538);
            arglist__8538 = cljs.core.next(arglist__8538);
            var input = cljs.core.first(arglist__8538);
            var inputs = cljs.core.rest(arglist__8538);
            return G__8536__delegate(result, input, inputs);
          };
          G__8536.cljs$core$IFn$_invoke$arity$variadic = G__8536__delegate;
          return G__8536;
        }();
        G__8535 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__8535__0.call(this);
            case 1:
              return G__8535__1.call(this, result);
            case 2:
              return G__8535__2.call(this, result, input);
            default:
              var G__8539 = null;
              if (arguments.length > 2) {
                var G__8540__i = 0, G__8540__a = new Array(arguments.length - 2);
                while (G__8540__i < G__8540__a.length) {
                  G__8540__a[G__8540__i] = arguments[G__8540__i + 2];
                  ++G__8540__i;
                }
                G__8539 = new cljs.core.IndexedSeq(G__8540__a, 0);
              }
              return G__8535__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__8539);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8535.cljs$lang$maxFixedArity = 2;
        G__8535.cljs$lang$applyTo = G__8535__3.cljs$lang$applyTo;
        G__8535.cljs$core$IFn$_invoke$arity$0 = G__8535__0;
        G__8535.cljs$core$IFn$_invoke$arity$1 = G__8535__1;
        G__8535.cljs$core$IFn$_invoke$arity$2 = G__8535__2;
        G__8535.cljs$core$IFn$_invoke$arity$variadic = G__8535__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__8535;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4114__auto___8541 = size;
          var i_8542 = 0;
          while (true) {
            if (i_8542 < n__4114__auto___8541) {
              cljs.core.chunk_append(b, function() {
                var G__8527 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8542);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8527) : f.call(null, G__8527);
              }());
              var G__8543 = i_8542 + 1;
              i_8542 = G__8543;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8528 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8528) : f.call(null, G__8528);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__8529 = cljs.core.first(s1);
          var G__8530 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8529, G__8530) : f.call(null, G__8529, G__8530);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__8531 = cljs.core.first(s1);
          var G__8532 = cljs.core.first(s2);
          var G__8533 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8531, G__8532, G__8533) : f.call(null, G__8531, G__8532, G__8533);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__8544__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__8481_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__8481_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__8544 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8545__i = 0, G__8545__a = new Array(arguments.length - 4);
        while (G__8545__i < G__8545__a.length) {
          G__8545__a[G__8545__i] = arguments[G__8545__i + 4];
          ++G__8545__i;
        }
        colls = new cljs.core.IndexedSeq(G__8545__a, 0);
      }
      return G__8544__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8544.cljs$lang$maxFixedArity = 4;
    G__8544.cljs$lang$applyTo = function(arglist__8546) {
      var f = cljs.core.first(arglist__8546);
      arglist__8546 = cljs.core.next(arglist__8546);
      var c1 = cljs.core.first(arglist__8546);
      arglist__8546 = cljs.core.next(arglist__8546);
      var c2 = cljs.core.first(arglist__8546);
      arglist__8546 = cljs.core.next(arglist__8546);
      var c3 = cljs.core.first(arglist__8546);
      var colls = cljs.core.rest(arglist__8546);
      return G__8544__delegate(f, c1, c2, c3, colls);
    };
    G__8544.cljs$core$IFn$_invoke$arity$variadic = G__8544__delegate;
    return G__8544;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__8547 = null;
        if (arguments.length > 4) {
          var G__8548__i = 0, G__8548__a = new Array(arguments.length - 4);
          while (G__8548__i < G__8548__a.length) {
            G__8548__a[G__8548__i] = arguments[G__8548__i + 4];
            ++G__8548__i;
          }
          G__8547 = new cljs.core.IndexedSeq(G__8548__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8547);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8557 = null;
          var G__8557__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8557__1 = function(result) {
            var G__8554 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8554) : rf.call(null, G__8554);
          };
          var G__8557__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__8555 = result;
              var G__8556 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8555, G__8556) : rf.call(null, G__8555, G__8556);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__8557 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8557__0.call(this);
              case 1:
                return G__8557__1.call(this, result);
              case 2:
                return G__8557__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8557.cljs$core$IFn$_invoke$arity$0 = G__8557__0;
          G__8557.cljs$core$IFn$_invoke$arity$1 = G__8557__1;
          G__8557.cljs$core$IFn$_invoke$arity$2 = G__8557__2;
          return G__8557;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8564 = null;
          var G__8564__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8564__1 = function(result) {
            var G__8561 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8561) : rf.call(null, G__8561);
          };
          var G__8564__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__8562 = result;
              var G__8563 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8562, G__8563) : rf.call(null, G__8562, G__8563);
            }
          };
          G__8564 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8564__0.call(this);
              case 1:
                return G__8564__1.call(this, result);
              case 2:
                return G__8564__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8564.cljs$core$IFn$_invoke$arity$0 = G__8564__0;
          G__8564.cljs$core$IFn$_invoke$arity$1 = G__8564__1;
          G__8564.cljs$core$IFn$_invoke$arity$2 = G__8564__2;
          return G__8564;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__8565 = n__$1 - 1;
          var G__8566 = cljs.core.rest(s);
          n__$1 = G__8565;
          coll__$1 = G__8566;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__8569 = cljs.core.next(s);
      var G__8570 = cljs.core.next(lead);
      s = G__8569;
      lead = G__8570;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__8583 = null;
          var G__8583__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8583__1 = function(result) {
            var G__8577 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8577) : rf.call(null, G__8577);
          };
          var G__8583__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3215__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3215__auto__)) {
                var G__8578 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8578) : pred.call(null, G__8578);
              } else {
                return and__3215__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__8579 = result;
              var G__8580 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8579, G__8580) : rf.call(null, G__8579, G__8580);
            }
          };
          G__8583 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8583__0.call(this);
              case 1:
                return G__8583__1.call(this, result);
              case 2:
                return G__8583__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8583.cljs$core$IFn$_invoke$arity$0 = G__8583__0;
          G__8583.cljs$core$IFn$_invoke$arity$1 = G__8583__1;
          G__8583.cljs$core$IFn$_invoke$arity$2 = G__8583__2;
          return G__8583;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3215__auto__ = s;
          if (and__3215__auto__) {
            var G__8582 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8582) : pred__$1.call(null, G__8582);
          } else {
            return and__3215__auto__;
          }
        }())) {
          var G__8584 = pred__$1;
          var G__8585 = cljs.core.rest(s);
          pred__$1 = G__8584;
          coll__$1 = G__8585;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__8594 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8594) : f.call(null, G__8594);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__8597__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__8597 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__8598__i = 0, G__8598__a = new Array(arguments.length - 2);
        while (G__8598__i < G__8598__a.length) {
          G__8598__a[G__8598__i] = arguments[G__8598__i + 2];
          ++G__8598__i;
        }
        colls = new cljs.core.IndexedSeq(G__8598__a, 0);
      }
      return G__8597__delegate.call(this, c1, c2, colls);
    };
    G__8597.cljs$lang$maxFixedArity = 2;
    G__8597.cljs$lang$applyTo = function(arglist__8599) {
      var c1 = cljs.core.first(arglist__8599);
      arglist__8599 = cljs.core.next(arglist__8599);
      var c2 = cljs.core.first(arglist__8599);
      var colls = cljs.core.rest(arglist__8599);
      return G__8597__delegate(c1, c2, colls);
    };
    G__8597.cljs$core$IFn$_invoke$arity$variadic = G__8597__delegate;
    return G__8597;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__8600 = null;
        if (arguments.length > 2) {
          var G__8601__i = 0, G__8601__a = new Array(arguments.length - 2);
          while (G__8601__i < G__8601__a.length) {
            G__8601__a[G__8601__i] = arguments[G__8601__i + 2];
            ++G__8601__i;
          }
          G__8600 = new cljs.core.IndexedSeq(G__8601__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__8600);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__8616 = null;
          var G__8616__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8616__1 = function(result) {
            var G__8609 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8609) : rf.call(null, G__8609);
          };
          var G__8616__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__8610 = result;
                var G__8611 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8610, G__8611) : rf.call(null, G__8610, G__8611);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__8612 = sepr;
                var G__8613 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8612, G__8613) : rf.call(null, G__8612, G__8613);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__8614 = result;
              var G__8615 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8614, G__8615) : rf.call(null, G__8614, G__8615);
            }
          };
          G__8616 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8616__0.call(this);
              case 1:
                return G__8616__1.call(this, result);
              case 2:
                return G__8616__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8616.cljs$core$IFn$_invoke$arity$0 = G__8616__0;
          G__8616.cljs$core$IFn$_invoke$arity$1 = G__8616__1;
          G__8616.cljs$core$IFn$_invoke$arity$2 = G__8616__2;
          return G__8616;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__8625__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__8625 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__8626__i = 0, G__8626__a = new Array(arguments.length - 1);
        while (G__8626__i < G__8626__a.length) {
          G__8626__a[G__8626__i] = arguments[G__8626__i + 1];
          ++G__8626__i;
        }
        colls = new cljs.core.IndexedSeq(G__8626__a, 0);
      }
      return G__8625__delegate.call(this, f, colls);
    };
    G__8625.cljs$lang$maxFixedArity = 1;
    G__8625.cljs$lang$applyTo = function(arglist__8627) {
      var f = cljs.core.first(arglist__8627);
      var colls = cljs.core.rest(arglist__8627);
      return G__8625__delegate(f, colls);
    };
    G__8625.cljs$core$IFn$_invoke$arity$variadic = G__8625__delegate;
    return G__8625;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__8628 = null;
        if (arguments.length > 1) {
          var G__8629__i = 0, G__8629__a = new Array(arguments.length - 1);
          while (G__8629__i < G__8629__a.length) {
            G__8629__a[G__8629__i] = arguments[G__8629__i + 1];
            ++G__8629__i;
          }
          G__8628 = new cljs.core.IndexedSeq(G__8629__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8628);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__8648 = null;
        var G__8648__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8648__1 = function(result) {
          var G__8642 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8642) : rf.call(null, G__8642);
        };
        var G__8648__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__8643 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8643) : pred.call(null, G__8643);
          }())) {
            var G__8644 = result;
            var G__8645 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8644, G__8645) : rf.call(null, G__8644, G__8645);
          } else {
            return result;
          }
        };
        G__8648 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8648__0.call(this);
            case 1:
              return G__8648__1.call(this, result);
            case 2:
              return G__8648__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8648.cljs$core$IFn$_invoke$arity$0 = G__8648__0;
        G__8648.cljs$core$IFn$_invoke$arity$1 = G__8648__1;
        G__8648.cljs$core$IFn$_invoke$arity$2 = G__8648__2;
        return G__8648;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4114__auto___8649 = size;
          var i_8650 = 0;
          while (true) {
            if (i_8650 < n__4114__auto___8649) {
              if (cljs.core.truth_(function() {
                var G__8646 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8650);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8646) : pred.call(null, G__8646);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8650));
              } else {
              }
              var G__8651 = i_8650 + 1;
              i_8650 = G__8651;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__8647 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8647) : pred.call(null, G__8647);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__8658 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8658) : branch_QMARK_.call(null, G__8658);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__8659 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8659) : children.call(null, G__8659);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__8660_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__8660_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__8663 = to;
        if (G__8663) {
          var bit__3901__auto__ = G__8663.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__3901__auto__ || G__8663.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__8664 = to;
      if (G__8664) {
        var bit__3901__auto__ = G__8664.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__3901__auto__ || G__8664.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__8666 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8666) : f.call(null, G__8666);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__8667__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__8667 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8668__i = 0, G__8668__a = new Array(arguments.length - 4);
        while (G__8668__i < G__8668__a.length) {
          G__8668__a[G__8668__i] = arguments[G__8668__i + 4];
          ++G__8668__i;
        }
        colls = new cljs.core.IndexedSeq(G__8668__a, 0);
      }
      return G__8667__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8667.cljs$lang$maxFixedArity = 4;
    G__8667.cljs$lang$applyTo = function(arglist__8669) {
      var f = cljs.core.first(arglist__8669);
      arglist__8669 = cljs.core.next(arglist__8669);
      var c1 = cljs.core.first(arglist__8669);
      arglist__8669 = cljs.core.next(arglist__8669);
      var c2 = cljs.core.first(arglist__8669);
      arglist__8669 = cljs.core.next(arglist__8669);
      var c3 = cljs.core.first(arglist__8669);
      var colls = cljs.core.rest(arglist__8669);
      return G__8667__delegate(f, c1, c2, c3, colls);
    };
    G__8667.cljs$core$IFn$_invoke$arity$variadic = G__8667__delegate;
    return G__8667;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__8670 = null;
        if (arguments.length > 4) {
          var G__8671__i = 0, G__8671__a = new Array(arguments.length - 4);
          while (G__8671__i < G__8671__a.length) {
            G__8671__a[G__8671__i] = arguments[G__8671__i + 4];
            ++G__8671__i;
          }
          G__8670 = new cljs.core.IndexedSeq(G__8671__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8670);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__8673 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8673) : pred.call(null, G__8673);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__8688 = m__$1;
          if (G__8688) {
            var bit__3908__auto__ = G__8688.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__3908__auto__ || G__8688.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__8688.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__8688);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__8688);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__8689 = sentinel;
            var G__8690 = m__$2;
            var G__8691 = cljs.core.next(ks__$1);
            sentinel = G__8689;
            m__$1 = G__8690;
            ks__$1 = G__8691;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__8692, v) {
  var vec__8697 = p__8692;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8697, 0, null);
  var ks = cljs.core.nthnext(vec__8697, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__8698, f) {
    var vec__8736 = p__8698;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8736, 0, null);
    var ks = cljs.core.nthnext(vec__8736, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8737 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8737) : f.call(null, G__8737);
      }());
    }
  };
  var update_in__4 = function(m, p__8699, f, a) {
    var vec__8738 = p__8699;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8738, 0, null);
    var ks = cljs.core.nthnext(vec__8738, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8739 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8740 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8739, G__8740) : f.call(null, G__8739, G__8740);
      }());
    }
  };
  var update_in__5 = function(m, p__8700, f, a, b) {
    var vec__8741 = p__8700;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8741, 0, null);
    var ks = cljs.core.nthnext(vec__8741, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8742 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8743 = a;
        var G__8744 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8742, G__8743, G__8744) : f.call(null, G__8742, G__8743, G__8744);
      }());
    }
  };
  var update_in__6 = function(m, p__8701, f, a, b, c) {
    var vec__8745 = p__8701;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8745, 0, null);
    var ks = cljs.core.nthnext(vec__8745, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__8746 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__8747 = a;
        var G__8748 = b;
        var G__8749 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8746, G__8747, G__8748, G__8749) : f.call(null, G__8746, G__8747, G__8748, G__8749);
      }());
    }
  };
  var update_in__7 = function() {
    var G__8751__delegate = function(m, p__8702, f, a, b, c, args) {
      var vec__8750 = p__8702;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8750, 0, null);
      var ks = cljs.core.nthnext(vec__8750, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__8751 = function(m, p__8702, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__8752__i = 0, G__8752__a = new Array(arguments.length - 6);
        while (G__8752__i < G__8752__a.length) {
          G__8752__a[G__8752__i] = arguments[G__8752__i + 6];
          ++G__8752__i;
        }
        args = new cljs.core.IndexedSeq(G__8752__a, 0);
      }
      return G__8751__delegate.call(this, m, p__8702, f, a, b, c, args);
    };
    G__8751.cljs$lang$maxFixedArity = 6;
    G__8751.cljs$lang$applyTo = function(arglist__8753) {
      var m = cljs.core.first(arglist__8753);
      arglist__8753 = cljs.core.next(arglist__8753);
      var p__8702 = cljs.core.first(arglist__8753);
      arglist__8753 = cljs.core.next(arglist__8753);
      var f = cljs.core.first(arglist__8753);
      arglist__8753 = cljs.core.next(arglist__8753);
      var a = cljs.core.first(arglist__8753);
      arglist__8753 = cljs.core.next(arglist__8753);
      var b = cljs.core.first(arglist__8753);
      arglist__8753 = cljs.core.next(arglist__8753);
      var c = cljs.core.first(arglist__8753);
      var args = cljs.core.rest(arglist__8753);
      return G__8751__delegate(m, p__8702, f, a, b, c, args);
    };
    G__8751.cljs$core$IFn$_invoke$arity$variadic = G__8751__delegate;
    return G__8751;
  }();
  update_in = function(m, p__8702, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__8702, f);
      case 4:
        return update_in__4.call(this, m, p__8702, f, a);
      case 5:
        return update_in__5.call(this, m, p__8702, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__8702, f, a, b, c);
      default:
        var G__8754 = null;
        if (arguments.length > 6) {
          var G__8755__i = 0, G__8755__a = new Array(arguments.length - 6);
          while (G__8755__i < G__8755__a.length) {
            G__8755__a[G__8755__i] = arguments[G__8755__i + 6];
            ++G__8755__i;
          }
          G__8754 = new cljs.core.IndexedSeq(G__8755__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__8702, f, a, b, c, G__8754);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8766 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8766) : f.call(null, G__8766);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8767 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8768 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8767, G__8768) : f.call(null, G__8767, G__8768);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8769 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8770 = x;
      var G__8771 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8769, G__8770, G__8771) : f.call(null, G__8769, G__8770, G__8771);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8772 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8773 = x;
      var G__8774 = y;
      var G__8775 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8772, G__8773, G__8774, G__8775) : f.call(null, G__8772, G__8773, G__8774, G__8775);
    }());
  };
  var update__7 = function() {
    var G__8776__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__8776 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__8777__i = 0, G__8777__a = new Array(arguments.length - 6);
        while (G__8777__i < G__8777__a.length) {
          G__8777__a[G__8777__i] = arguments[G__8777__i + 6];
          ++G__8777__i;
        }
        more = new cljs.core.IndexedSeq(G__8777__a, 0);
      }
      return G__8776__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__8776.cljs$lang$maxFixedArity = 6;
    G__8776.cljs$lang$applyTo = function(arglist__8778) {
      var m = cljs.core.first(arglist__8778);
      arglist__8778 = cljs.core.next(arglist__8778);
      var k = cljs.core.first(arglist__8778);
      arglist__8778 = cljs.core.next(arglist__8778);
      var f = cljs.core.first(arglist__8778);
      arglist__8778 = cljs.core.next(arglist__8778);
      var x = cljs.core.first(arglist__8778);
      arglist__8778 = cljs.core.next(arglist__8778);
      var y = cljs.core.first(arglist__8778);
      arglist__8778 = cljs.core.next(arglist__8778);
      var z = cljs.core.first(arglist__8778);
      var more = cljs.core.rest(arglist__8778);
      return G__8776__delegate(m, k, f, x, y, z, more);
    };
    G__8776.cljs$core$IFn$_invoke$arity$variadic = G__8776__delegate;
    return G__8776;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__8779 = null;
        if (arguments.length > 6) {
          var G__8780__i = 0, G__8780__a = new Array(arguments.length - 6);
          while (G__8780__i < G__8780__a.length) {
            G__8780__a[G__8780__i] = arguments[G__8780__i + 6];
            ++G__8780__i;
          }
          G__8779 = new cljs.core.IndexedSeq(G__8780__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__8779);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__8781 = ll - 5;
      var G__8782 = r;
      ll = G__8781;
      ret = G__8782;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__8787 = cljs.core.pv_aget(node, 0);
      var G__8788 = level - 5;
      node = G__8787;
      level = G__8788;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__8789 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__8790 = level - 5;
        node = G__8789;
        level = G__8790;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8800 = init__$2;
              var G__8801 = j + i;
              var G__8802 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8800, G__8801, G__8802) : f.call(null, G__8800, G__8801, G__8802);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8813 = j + 1;
              var G__8814 = init__$3;
              j = G__8813;
              init__$2 = G__8814;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8803 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8803) : cljs.core.deref.call(null, G__8803);
      } else {
        var G__8815 = i + len;
        var G__8816 = init__$2;
        i = G__8815;
        init__$1 = G__8816;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__8804 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__8804) : cljs.core.tv_editable_root.call(null, G__8804);
  }(), function() {
    var G__8805 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__8805) : cljs.core.tv_editable_tail.call(null, G__8805);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8806 = init__$2;
              var G__8807 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8806, G__8807) : f.call(null, G__8806, G__8807);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8817 = j + 1;
              var G__8818 = init__$3;
              j = G__8817;
              init__$2 = G__8818;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8808 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8808) : cljs.core.deref.call(null, G__8808);
      } else {
        var G__8819 = i + len;
        var G__8820 = init__$2;
        i = G__8819;
        init__$1 = G__8820;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__8809 = coll__$1;
      var G__8810 = cljs.core.first_array_for_longvec(coll__$1);
      var G__8811 = 0;
      var G__8812 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8809, G__8810, G__8811, G__8812) : cljs.core.chunked_seq.call(null, G__8809, G__8810, G__8811, G__8812);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4114__auto___8821 = len;
    var i_8822 = 0;
    while (true) {
      if (i_8822 < n__4114__auto___8821) {
        new_tail[i_8822] = self__.tail[i_8822];
        var G__8823 = i_8822 + 1;
        i_8822 = G__8823;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8824 = null;
  var G__8824__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8824__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8824 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8824__2.call(this, self__, k);
      case 3:
        return G__8824__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8824.cljs$core$IFn$_invoke$arity$2 = G__8824__2;
  G__8824.cljs$core$IFn$_invoke$arity$3 = G__8824__3;
  return G__8824;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args8799) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8799)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__8825 = i + 1;
        var G__8826 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__8825;
        out = G__8826;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__8827__i = 0, G__8827__a = new Array(arguments.length - 0);
      while (G__8827__i < G__8827__a.length) {
        G__8827__a[G__8827__i] = arguments[G__8827__i + 0];
        ++G__8827__i;
      }
      args = new cljs.core.IndexedSeq(G__8827__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__8828) {
    var args = cljs.core.seq(arglist__8828);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8829 = self__.vec;
      var G__8830 = self__.node;
      var G__8831 = self__.i;
      var G__8832 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8829, G__8830, G__8831, G__8832) : cljs.core.chunked_seq.call(null, G__8829, G__8830, G__8831, G__8832);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__8833 = self__.vec;
    var G__8834 = self__.i + self__.off;
    var G__8835 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8833, G__8834, G__8835) : cljs.core.subvec.call(null, G__8833, G__8834, G__8835);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__8836 = self__.vec;
    var G__8837 = self__.i + self__.off;
    var G__8838 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8836, G__8837, G__8838) : cljs.core.subvec.call(null, G__8836, G__8837, G__8838);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8839 = self__.vec;
      var G__8840 = self__.node;
      var G__8841 = self__.i;
      var G__8842 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8839, G__8840, G__8841, G__8842) : cljs.core.chunked_seq.call(null, G__8839, G__8840, G__8841, G__8842);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8843 = self__.vec;
    var G__8844 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8845 = end;
    var G__8846 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8843, G__8844, G__8845, G__8846) : cljs.core.chunked_seq.call(null, G__8843, G__8844, G__8845, G__8846);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__8847 = self__.vec;
  var G__8848 = self__.node;
  var G__8849 = self__.i;
  var G__8850 = self__.off;
  var G__8851 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__8847, G__8848, G__8849, G__8850, G__8851) : cljs.core.chunked_seq.call(null, G__8847, G__8848, G__8849, G__8850, G__8851);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8852 = self__.vec;
    var G__8853 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8854 = end;
    var G__8855 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8852, G__8853, G__8854, G__8855) : cljs.core.chunked_seq.call(null, G__8852, G__8853, G__8854, G__8855);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__8857 = self__.meta;
  var G__8858 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__8859 = self__.start;
  var G__8860 = function() {
    var x__3544__auto__ = self__.end;
    var y__3545__auto__ = v_pos + 1;
    return x__3544__auto__ > y__3545__auto__ ? x__3544__auto__ : y__3545__auto__;
  }();
  var G__8861 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8857, G__8858, G__8859, G__8860, G__8861) : cljs.core.build_subvec.call(null, G__8857, G__8858, G__8859, G__8860, G__8861);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__8862 = self__.meta;
    var G__8863 = self__.v;
    var G__8864 = self__.start;
    var G__8865 = self__.end - 1;
    var G__8866 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8862, G__8863, G__8864, G__8865, G__8866) : cljs.core.build_subvec.call(null, G__8862, G__8863, G__8864, G__8865, G__8866);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__8868 = meta__$1;
  var G__8869 = self__.v;
  var G__8870 = self__.start;
  var G__8871 = self__.end;
  var G__8872 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8868, G__8869, G__8870, G__8871, G__8872) : cljs.core.build_subvec.call(null, G__8868, G__8869, G__8870, G__8871, G__8872);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8873 = self__.meta;
  var G__8874 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__8875 = self__.start;
  var G__8876 = self__.end + 1;
  var G__8877 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8873, G__8874, G__8875, G__8876, G__8877) : cljs.core.build_subvec.call(null, G__8873, G__8874, G__8875, G__8876, G__8877);
};
cljs.core.Subvec.prototype.call = function() {
  var G__8878 = null;
  var G__8878__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8878__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8878 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8878__2.call(this, self__, k);
      case 3:
        return G__8878__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8878.cljs$core$IFn$_invoke$arity$2 = G__8878__2;
  G__8878.cljs$core$IFn$_invoke$arity$3 = G__8878__3;
  return G__8878;
}();
cljs.core.Subvec.prototype.apply = function(self__, args8856) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8856)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__8879 = meta;
      var G__8880 = v.v;
      var G__8881 = v.start + start;
      var G__8882 = v.start + end;
      var G__8883 = __hash;
      meta = G__8879;
      v = G__8880;
      start = G__8881;
      end = G__8882;
      __hash = G__8883;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj8890 = {};
    return obj8890;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__8898 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__8899 = level - 5;
        node = G__8898;
        level = G__8899;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__8903 = null;
  var G__8903__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8903__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8903 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8903__2.call(this, self__, k);
      case 3:
        return G__8903__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8903.cljs$core$IFn$_invoke$arity$2 = G__8903__2;
  G__8903.cljs$core$IFn$_invoke$arity$3 = G__8903__3;
  return G__8903;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args8900) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8900)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3227__auto__ = self__.front;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3227__auto__ = self__.rear;
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__8904 = i + incr;
        i = G__8904;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__8905 = i + 1;
      var G__8906 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__8905;
      out = G__8906;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj8910 = {};
    return obj8910;
  }();
  var l = ks.length;
  var i_8911 = 0;
  while (true) {
    if (i_8911 < l) {
      var k_8912 = ks[i_8911];
      new_obj[k_8912] = obj[k_8912];
      var G__8913 = i_8911 + 1;
      i_8911 = G__8913;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3215__auto__ = function() {
      var G__8917 = k;
      return goog.isString(G__8917);
    }();
    if (cljs.core.truth_(and__3215__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3215__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__8918 = init__$1;
        var G__8919 = k;
        var G__8920 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8918, G__8919, G__8920) : f.call(null, G__8918, G__8919, G__8920);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8921 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8921) : cljs.core.deref.call(null, G__8921);
      } else {
        var G__8927 = cljs.core.rest(keys__$1);
        var G__8928 = init__$2;
        keys__$1 = G__8927;
        init__$1 = G__8928;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3215__auto__ = function() {
      var G__8923 = k;
      return goog.isString(G__8923);
    }();
    if (cljs.core.truth_(and__3215__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3215__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__8924 = k;
    return goog.isString(G__8924);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3215__auto__ = function() {
      var G__8926 = k;
      return goog.isString(G__8926);
    }();
    if (cljs.core.truth_(and__3215__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3215__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__8914_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8914_SHARP_, self__.strobj[p1__8914_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__8929 = null;
  var G__8929__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8929__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8929 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8929__2.call(this, self__, k);
      case 3:
        return G__8929__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8929.cljs$core$IFn$_invoke$arity$2 = G__8929__2;
  G__8929.cljs$core$IFn$_invoke$arity$3 = G__8929__3;
  return G__8929;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args8915) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8915)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj8931 = {};
  return obj8931;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__8932 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8932, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8932, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__8933 = i + 2;
        i = G__8933;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__8934 = i + 2;
        i = G__8934;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__8935 = i + 2;
        i = G__8935;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__8936 = i + 2;
        i = G__8936;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__8937 = i + 2;
        i = G__8937;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3227__auto__ = function() {
        var G__8941 = k;
        return goog.isString(G__8941);
      }();
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_8942 = 0;
  while (true) {
    if (i_8942 < l) {
      narr[i_8942] = arr[i_8942];
      var G__8943 = i_8942 + 1;
      i_8942 = G__8943;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__8945 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8945) : cljs.core.keys.call(null, G__8945);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__8946 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8946) : cljs.core.vals.call(null, G__8946);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8947 = cljs.core.seq(coll);
  var chunk__8948 = null;
  var count__8949 = 0;
  var i__8950 = 0;
  while (true) {
    if (i__8950 < count__8949) {
      var vec__8951 = chunk__8948.cljs$core$IIndexed$_nth$arity$2(null, i__8950);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8951, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8951, 1, null);
      var G__8952_8965 = v;
      var G__8953_8966 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8952_8965, G__8953_8966) : f.call(null, G__8952_8965, G__8953_8966);
      var G__8967 = seq__8947;
      var G__8968 = chunk__8948;
      var G__8969 = count__8949;
      var G__8970 = i__8950 + 1;
      seq__8947 = G__8967;
      chunk__8948 = G__8968;
      count__8949 = G__8969;
      i__8950 = G__8970;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__8947);
      if (temp__4126__auto__) {
        var seq__8947__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8947__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__8947__$1);
          var G__8971 = cljs.core.chunk_rest(seq__8947__$1);
          var G__8972 = c__4014__auto__;
          var G__8973 = cljs.core.count(c__4014__auto__);
          var G__8974 = 0;
          seq__8947 = G__8971;
          chunk__8948 = G__8972;
          count__8949 = G__8973;
          i__8950 = G__8974;
          continue;
        } else {
          var vec__8954 = cljs.core.first(seq__8947__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8954, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8954, 1, null);
          var G__8955_8975 = v;
          var G__8956_8976 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8955_8975, G__8956_8976) : f.call(null, G__8955_8975, G__8956_8976);
          var G__8977 = cljs.core.next(seq__8947__$1);
          var G__8978 = null;
          var G__8979 = 0;
          var G__8980 = 0;
          seq__8947 = G__8977;
          chunk__8948 = G__8978;
          count__8949 = G__8979;
          i__8950 = G__8980;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__8957 = init__$1;
        var G__8958 = self__.arr[i];
        var G__8959 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8957, G__8958, G__8959) : f.call(null, G__8957, G__8958, G__8959);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__8960 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8960) : cljs.core.deref.call(null, G__8960);
      } else {
        var G__8981 = i + 2;
        var G__8982 = init__$2;
        i = G__8981;
        init__$1 = G__8982;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__8961 = other;
    if (G__8961) {
      var bit__3901__auto__ = G__8961.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__3901__auto__ || G__8961.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__8983 = i + 2;
              i = G__8983;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj8963 = {};
    return obj8963;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__8984 = s + 2;
            var G__8985 = d;
            s = G__8984;
            d = G__8985;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__8986 = s + 2;
            var G__8987 = d + 2;
            s = G__8986;
            d = G__8987;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__8964 = cljs.core.aclone(self__.arr);
        G__8964[idx + 1] = v;
        return G__8964;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8988 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8989 = cljs.core.next(es);
          ret = G__8988;
          es = G__8989;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__8990 = null;
  var G__8990__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8990__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8990 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8990__2.call(this, self__, k);
      case 3:
        return G__8990__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8990.cljs$core$IFn$_invoke$arity$2 = G__8990__2;
  G__8990.cljs$core$IFn$_invoke$arity$3 = G__8990__3;
  return G__8990;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args8944) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8944)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__8991 = i + 2;
        var G__8992 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__8991;
        ret = G__8992;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__8993_9001 = self__.arr;
      G__8993_9001.pop();
      G__8993_9001.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__8994 = self__.len;
          var G__8995 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__8994, G__8995) : cljs.core.array__GT_transient_hash_map.call(null, G__8994, G__8995);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__8996 = o;
      if (G__8996) {
        var bit__3908__auto__ = G__8996.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__3908__auto__ || G__8996.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__8996.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__8996);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__8996);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__8997 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8997) : cljs.core.key.call(null, G__8997);
      }(), function() {
        var G__8998 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8998) : cljs.core.val.call(null, G__8998);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9002 = cljs.core.next(es);
          var G__9003 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__8999 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8999) : cljs.core.key.call(null, G__8999);
          }(), function() {
            var G__9000 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9000) : cljs.core.val.call(null, G__9000);
          }());
          es = G__9002;
          tcoll__$2 = G__9003;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9004 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9005 = i + 2;
      out = G__9004;
      i = G__9005;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9008 = cljs.core.aclone(arr);
    G__9008[i] = a;
    return G__9008;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9009 = cljs.core.aclone(arr);
    G__9009[i] = a;
    G__9009[j] = b;
    return G__9009;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9014 = init__$1;
          var G__9015 = k;
          var G__9016 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9014, G__9015, G__9016) : f.call(null, G__9014, G__9015, G__9016);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9017 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9017) : cljs.core.deref.call(null, G__9017);
      } else {
        var G__9018 = i + 2;
        var G__9019 = init__$2;
        i = G__9018;
        init__$1 = G__9019;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9020 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9020) : cljs.core.create_inode_seq.call(null, G__9020);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9034 = 0;
        var j_9035 = 0;
        while (true) {
          if (i_9034 < 32) {
            if ((self__.bitmap >>> i_9034 & 1) === 0) {
              var G__9036 = i_9034 + 1;
              var G__9037 = j_9035;
              i_9034 = G__9036;
              j_9035 = G__9037;
              continue;
            } else {
              nodes[i_9034] = !(self__.arr[j_9035] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9035]), self__.arr[j_9035], self__.arr[j_9035 + 1], added_leaf_QMARK_) : self__.arr[j_9035 + 1];
              var G__9038 = i_9034 + 1;
              var G__9039 = j_9035 + 2;
              i_9034 = G__9038;
              j_9035 = G__9039;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9021 = edit__$1;
          var G__9022 = shift + 5;
          var G__9023 = key_or_nil;
          var G__9024 = val_or_node;
          var G__9025 = hash;
          var G__9026 = key;
          var G__9027 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9021, G__9022, G__9023, G__9024, G__9025, G__9026, G__9027) : cljs.core.create_node.call(null, G__9021, G__9022, G__9023, G__9024, G__9025, G__9026, G__9027);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9040 = 0;
      var j_9041 = 0;
      while (true) {
        if (i_9040 < 32) {
          if ((self__.bitmap >>> i_9040 & 1) === 0) {
            var G__9042 = i_9040 + 1;
            var G__9043 = j_9041;
            i_9040 = G__9042;
            j_9041 = G__9043;
            continue;
          } else {
            nodes[i_9040] = !(self__.arr[j_9041] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9041]), self__.arr[j_9041], self__.arr[j_9041 + 1], added_leaf_QMARK_) : self__.arr[j_9041 + 1];
            var G__9044 = i_9040 + 1;
            var G__9045 = j_9041 + 2;
            i_9040 = G__9044;
            j_9041 = G__9045;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9028 = shift + 5;
          var G__9029 = key_or_nil;
          var G__9030 = val_or_node;
          var G__9031 = hash;
          var G__9032 = key;
          var G__9033 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9028, G__9029, G__9030, G__9031, G__9032, G__9033) : cljs.core.create_node.call(null, G__9028, G__9029, G__9030, G__9031, G__9032, G__9033);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9046 = i + 1;
        var G__9047 = j + 2;
        var G__9048 = bitmap | 1 << i;
        i = G__9046;
        j = G__9047;
        bitmap = G__9048;
        continue;
      } else {
        var G__9049 = i + 1;
        var G__9050 = j;
        var G__9051 = bitmap;
        i = G__9049;
        j = G__9050;
        bitmap = G__9051;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9052 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9052) : cljs.core.create_array_node_seq.call(null, G__9052);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9053 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9053) : cljs.core.deref.call(null, G__9053);
        } else {
          var G__9054 = i + 1;
          var G__9055 = init__$2;
          i = G__9054;
          init__$1 = G__9055;
          continue;
        }
      } else {
        var G__9056 = i + 1;
        var G__9057 = init__$1;
        i = G__9056;
        init__$1 = G__9057;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9058 = i + 2;
        i = G__9058;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9059 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9059) : cljs.core.create_inode_seq.call(null, G__9059);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9060 = self__.nodes;
    var G__9061 = self__.i + 2;
    var G__9062 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9060, G__9061, G__9062) : cljs.core.create_inode_seq.call(null, G__9060, G__9061, G__9062);
  } else {
    var G__9063 = self__.nodes;
    var G__9064 = self__.i;
    var G__9065 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9063, G__9064, G__9065) : cljs.core.create_inode_seq.call(null, G__9063, G__9064, G__9065);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9069 = j + 2;
                j = G__9069;
                continue;
              }
            } else {
              var G__9070 = j + 2;
              j = G__9070;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9071 = null;
  var G__9072 = self__.nodes;
  var G__9073 = self__.i;
  var G__9074 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9071, G__9072, G__9073, G__9074) : cljs.core.create_array_node_seq.call(null, G__9071, G__9072, G__9073, G__9074);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9079 = j + 1;
              j = G__9079;
              continue;
            }
          } else {
            var G__9080 = j + 1;
            j = G__9080;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9082 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9082) : cljs.core.keys.call(null, G__9082);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9083 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9083) : cljs.core.vals.call(null, G__9083);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9084 = cljs.core.seq(coll);
  var chunk__9085 = null;
  var count__9086 = 0;
  var i__9087 = 0;
  while (true) {
    if (i__9087 < count__9086) {
      var vec__9088 = chunk__9085.cljs$core$IIndexed$_nth$arity$2(null, i__9087);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9088, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9088, 1, null);
      var G__9089_9100 = v;
      var G__9090_9101 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9089_9100, G__9090_9101) : f.call(null, G__9089_9100, G__9090_9101);
      var G__9102 = seq__9084;
      var G__9103 = chunk__9085;
      var G__9104 = count__9086;
      var G__9105 = i__9087 + 1;
      seq__9084 = G__9102;
      chunk__9085 = G__9103;
      count__9086 = G__9104;
      i__9087 = G__9105;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9084);
      if (temp__4126__auto__) {
        var seq__9084__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9084__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__9084__$1);
          var G__9106 = cljs.core.chunk_rest(seq__9084__$1);
          var G__9107 = c__4014__auto__;
          var G__9108 = cljs.core.count(c__4014__auto__);
          var G__9109 = 0;
          seq__9084 = G__9106;
          chunk__9085 = G__9107;
          count__9086 = G__9108;
          i__9087 = G__9109;
          continue;
        } else {
          var vec__9091 = cljs.core.first(seq__9084__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9091, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9091, 1, null);
          var G__9092_9110 = v;
          var G__9093_9111 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9092_9110, G__9093_9111) : f.call(null, G__9092_9110, G__9093_9111);
          var G__9112 = cljs.core.next(seq__9084__$1);
          var G__9113 = null;
          var G__9114 = 0;
          var G__9115 = 0;
          seq__9084 = G__9112;
          chunk__9085 = G__9113;
          count__9086 = G__9114;
          i__9087 = G__9115;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9094 = init;
    var G__9095 = null;
    var G__9096 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9094, G__9095, G__9096) : f.call(null, G__9094, G__9095, G__9096);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9097 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9097) : cljs.core.deref.call(null, G__9097);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9099 = {};
    return obj9099;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9116 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9117 = cljs.core.next(es);
          ret = G__9116;
          es = G__9117;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9118 = null;
  var G__9118__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9118__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9118 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9118__2.call(this, self__, k);
      case 3:
        return G__9118__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9118.cljs$core$IFn$_invoke$arity$2 = G__9118__2;
  G__9118.cljs$core$IFn$_invoke$arity$3 = G__9118__3;
  return G__9118;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9081) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9081)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9119 = i + 2;
      var G__9120 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9119;
      ret = G__9120;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9121 = i + 1;
      var G__9122 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9121;
      out = G__9122;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9123 = o;
      if (G__9123) {
        var bit__3908__auto__ = G__9123.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__3908__auto__ || G__9123.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9123.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9123);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9123);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9124 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9124) : cljs.core.key.call(null, G__9124);
      }(), function() {
        var G__9125 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9125) : cljs.core.val.call(null, G__9125);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9128 = cljs.core.next(es);
          var G__9129 = tcoll__$1.assoc_BANG_(function() {
            var G__9126 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9126) : cljs.core.key.call(null, G__9126);
          }(), function() {
            var G__9127 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9127) : cljs.core.val.call(null, G__9127);
          }());
          es = G__9128;
          tcoll__$1 = G__9129;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9130 = ascending_QMARK_ ? t.left : t.right;
      var G__9131 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9130;
      stack__$1 = G__9131;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9144 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9144) : cljs.core.deref.call(null, G__9144);
  } else {
    var init__$2 = function() {
      var G__9145 = init__$1;
      var G__9146 = node.key;
      var G__9147 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9145, G__9146, G__9147) : f.call(null, G__9145, G__9146, G__9147);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9148 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9148) : cljs.core.deref.call(null, G__9148);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9149 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9149) : cljs.core.deref.call(null, G__9149);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9151 = null;
  var G__9151__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9151__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9151 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9151__2.call(this, self__, k);
      case 3:
        return G__9151__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9151.cljs$core$IFn$_invoke$arity$2 = G__9151__2;
  G__9151.cljs$core$IFn$_invoke$arity$3 = G__9151__3;
  return G__9151;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9150) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9150)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9153 = null;
  var G__9153__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9153__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9153 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9153__2.call(this, self__, k);
      case 3:
        return G__9153__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9153.cljs$core$IFn$_invoke$arity$2 = G__9153__2;
  G__9153.cljs$core$IFn$_invoke$arity$3 = G__9153__3;
  return G__9153;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9152) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9152)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9166 = k;
      var G__9167 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9166, G__9167) : comp.call(null, G__9166, G__9167);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9186 = k;
      var G__9187 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9186, G__9187) : comp.call(null, G__9186, G__9187);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9198 = k;
    var G__9199 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9198, G__9199) : comp.call(null, G__9198, G__9199);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9201 = cljs.core.seq(coll);
  var chunk__9202 = null;
  var count__9203 = 0;
  var i__9204 = 0;
  while (true) {
    if (i__9204 < count__9203) {
      var vec__9205 = chunk__9202.cljs$core$IIndexed$_nth$arity$2(null, i__9204);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9205, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9205, 1, null);
      var G__9206_9218 = v;
      var G__9207_9219 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9206_9218, G__9207_9219) : f.call(null, G__9206_9218, G__9207_9219);
      var G__9220 = seq__9201;
      var G__9221 = chunk__9202;
      var G__9222 = count__9203;
      var G__9223 = i__9204 + 1;
      seq__9201 = G__9220;
      chunk__9202 = G__9221;
      count__9203 = G__9222;
      i__9204 = G__9223;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9201);
      if (temp__4126__auto__) {
        var seq__9201__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9201__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__9201__$1);
          var G__9224 = cljs.core.chunk_rest(seq__9201__$1);
          var G__9225 = c__4014__auto__;
          var G__9226 = cljs.core.count(c__4014__auto__);
          var G__9227 = 0;
          seq__9201 = G__9224;
          chunk__9202 = G__9225;
          count__9203 = G__9226;
          i__9204 = G__9227;
          continue;
        } else {
          var vec__9208 = cljs.core.first(seq__9201__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9208, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9208, 1, null);
          var G__9209_9228 = v;
          var G__9210_9229 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9209_9228, G__9210_9229) : f.call(null, G__9209_9228, G__9210_9229);
          var G__9230 = cljs.core.next(seq__9201__$1);
          var G__9231 = null;
          var G__9232 = 0;
          var G__9233 = 0;
          seq__9201 = G__9230;
          chunk__9202 = G__9231;
          count__9203 = G__9232;
          i__9204 = G__9233;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9211 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9211) : cljs.core.keys.call(null, G__9211);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9212 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9212) : cljs.core.vals.call(null, G__9212);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9213 = k;
        var G__9214 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9213, G__9214) : self__.comp.call(null, G__9213, G__9214);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9234 = t.left;
          t = G__9234;
          continue;
        } else {
          var G__9235 = t.right;
          t = G__9235;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9236 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9237 = cljs.core.next(es);
          ret = G__9236;
          es = G__9237;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9238 = null;
  var G__9238__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9238__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9238 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9238__2.call(this, self__, k);
      case 3:
        return G__9238__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9238.cljs$core$IFn$_invoke$arity$2 = G__9238__2;
  G__9238.cljs$core$IFn$_invoke$arity$3 = G__9238__3;
  return G__9238;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9200) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9200)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9215 = k;
          var G__9216 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9215, G__9216) : self__.comp.call(null, G__9215, G__9216);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9239 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9240 = t.left;
              stack = G__9239;
              t = G__9240;
              continue;
            } else {
              var G__9241 = stack;
              var G__9242 = t.right;
              stack = G__9241;
              t = G__9242;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9243 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9244 = t.right;
              stack = G__9243;
              t = G__9244;
              continue;
            } else {
              var G__9245 = stack;
              var G__9246 = t.left;
              stack = G__9245;
              t = G__9246;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9217 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9217) : cljs.core.key.call(null, G__9217);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9247 = cljs.core.nnext(in$);
        var G__9248 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9247;
        out = G__9248;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9249__i = 0, G__9249__a = new Array(arguments.length - 0);
      while (G__9249__i < G__9249__a.length) {
        G__9249__a[G__9249__i] = arguments[G__9249__i + 0];
        ++G__9249__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9249__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9250) {
    var keyvals = cljs.core.seq(arglist__9250);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9251__i = 0, G__9251__a = new Array(arguments.length - 0);
      while (G__9251__i < G__9251__a.length) {
        G__9251__a[G__9251__i] = arguments[G__9251__i + 0];
        ++G__9251__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9251__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9252) {
    var keyvals = cljs.core.seq(arglist__9252);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9256 = {};
      return obj9256;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__9257 = cljs.core.nnext(kvs);
        kvs = G__9257;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9258__i = 0, G__9258__a = new Array(arguments.length - 0);
      while (G__9258__i < G__9258__a.length) {
        G__9258__a[G__9258__i] = arguments[G__9258__i + 0];
        ++G__9258__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9258__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__9259) {
    var keyvals = cljs.core.seq(arglist__9259);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9260 = cljs.core.nnext(in$);
        var G__9261 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9260;
        out = G__9261;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9262__i = 0, G__9262__a = new Array(arguments.length - 0);
      while (G__9262__i < G__9262__a.length) {
        G__9262__a[G__9262__i] = arguments[G__9262__i + 0];
        ++G__9262__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9262__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9263) {
    var keyvals = cljs.core.seq(arglist__9263);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9264 = cljs.core.nnext(in$);
        var G__9265 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9264;
        out = G__9265;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__9266__i = 0, G__9266__a = new Array(arguments.length - 1);
      while (G__9266__i < G__9266__a.length) {
        G__9266__a[G__9266__i] = arguments[G__9266__i + 1];
        ++G__9266__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9266__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9267) {
    var comparator = cljs.core.first(arglist__9267);
    var keyvals = cljs.core.rest(arglist__9267);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9268 = self__.mseq;
    if (G__9268) {
      var bit__3908__auto__ = G__9268.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__3908__auto__ || G__9268.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9268.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9268);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9268);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9269 = self__.mseq;
    if (G__9269) {
      var bit__3908__auto__ = G__9269.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__3908__auto__ || G__9269.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9269.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9269);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9269);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9270 = self__.mseq;
    if (G__9270) {
      var bit__3908__auto__ = G__9270.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__3908__auto__ || G__9270.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9270.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9270);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9270);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9271 = self__.mseq;
    if (G__9271) {
      var bit__3908__auto__ = G__9271.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__3908__auto__ || G__9271.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9271.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9271);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9271);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9272_SHARP_, p2__9273_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3227__auto__ = p1__9272_SHARP_;
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9273_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__9274__i = 0, G__9274__a = new Array(arguments.length - 0);
      while (G__9274__i < G__9274__a.length) {
        G__9274__a[G__9274__i] = arguments[G__9274__i + 0];
        ++G__9274__i;
      }
      maps = new cljs.core.IndexedSeq(G__9274__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9275) {
    var maps = cljs.core.seq(arglist__9275);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__9278 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__9279 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9278, G__9279) : f.call(null, G__9278, G__9279);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3227__auto__ = m1;
            if (cljs.core.truth_(or__3227__auto__)) {
              return or__3227__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__9280__i = 0, G__9280__a = new Array(arguments.length - 1);
      while (G__9280__i < G__9280__a.length) {
        G__9280__a[G__9280__i] = arguments[G__9280__i + 1];
        ++G__9280__i;
      }
      maps = new cljs.core.IndexedSeq(G__9280__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9281) {
    var f = cljs.core.first(arglist__9281);
    var maps = cljs.core.rest(arglist__9281);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9282 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9283 = cljs.core.next(keys);
      ret = G__9282;
      keys = G__9283;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9286 = cljs.core.seq(coll);
  var chunk__9287 = null;
  var count__9288 = 0;
  var i__9289 = 0;
  while (true) {
    if (i__9289 < count__9288) {
      var vec__9290 = chunk__9287.cljs$core$IIndexed$_nth$arity$2(null, i__9289);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9290, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9290, 1, null);
      var G__9291_9296 = v;
      var G__9292_9297 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9291_9296, G__9292_9297) : f.call(null, G__9291_9296, G__9292_9297);
      var G__9298 = seq__9286;
      var G__9299 = chunk__9287;
      var G__9300 = count__9288;
      var G__9301 = i__9289 + 1;
      seq__9286 = G__9298;
      chunk__9287 = G__9299;
      count__9288 = G__9300;
      i__9289 = G__9301;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9286);
      if (temp__4126__auto__) {
        var seq__9286__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9286__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__9286__$1);
          var G__9302 = cljs.core.chunk_rest(seq__9286__$1);
          var G__9303 = c__4014__auto__;
          var G__9304 = cljs.core.count(c__4014__auto__);
          var G__9305 = 0;
          seq__9286 = G__9302;
          chunk__9287 = G__9303;
          count__9288 = G__9304;
          i__9289 = G__9305;
          continue;
        } else {
          var vec__9293 = cljs.core.first(seq__9286__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293, 1, null);
          var G__9294_9306 = v;
          var G__9295_9307 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9294_9306, G__9295_9307) : f.call(null, G__9294_9306, G__9295_9307);
          var G__9308 = cljs.core.next(seq__9286__$1);
          var G__9309 = null;
          var G__9310 = 0;
          var G__9311 = 0;
          seq__9286 = G__9308;
          chunk__9287 = G__9309;
          count__9288 = G__9310;
          i__9289 = G__9311;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9284_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9284_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9312 = null;
  var G__9312__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9312__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9312 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9312__2.call(this, self__, k);
      case 3:
        return G__9312__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9312.cljs$core$IFn$_invoke$arity$2 = G__9312__2;
  G__9312.cljs$core$IFn$_invoke$arity$3 = G__9312__3;
  return G__9312;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9285) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9285)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9313 = i + 1;
        var G__9314 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__9313;
        out = G__9314;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9315 = i + 1;
        var G__9316 = cljs.core._conj_BANG_(out, items[i]);
        i = G__9315;
        out = G__9316;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9318 = null;
  var G__9318__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9318__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9318 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9318__2.call(this, self__, k);
      case 3:
        return G__9318__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9318.cljs$core$IFn$_invoke$arity$2 = G__9318__2;
  G__9318.cljs$core$IFn$_invoke$arity$3 = G__9318__3;
  return G__9318;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9317) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9317)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9321 = cljs.core.seq(coll);
  var chunk__9322 = null;
  var count__9323 = 0;
  var i__9324 = 0;
  while (true) {
    if (i__9324 < count__9323) {
      var vec__9325 = chunk__9322.cljs$core$IIndexed$_nth$arity$2(null, i__9324);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9325, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9325, 1, null);
      var G__9326_9331 = v;
      var G__9327_9332 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9326_9331, G__9327_9332) : f.call(null, G__9326_9331, G__9327_9332);
      var G__9333 = seq__9321;
      var G__9334 = chunk__9322;
      var G__9335 = count__9323;
      var G__9336 = i__9324 + 1;
      seq__9321 = G__9333;
      chunk__9322 = G__9334;
      count__9323 = G__9335;
      i__9324 = G__9336;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9321);
      if (temp__4126__auto__) {
        var seq__9321__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9321__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__9321__$1);
          var G__9337 = cljs.core.chunk_rest(seq__9321__$1);
          var G__9338 = c__4014__auto__;
          var G__9339 = cljs.core.count(c__4014__auto__);
          var G__9340 = 0;
          seq__9321 = G__9337;
          chunk__9322 = G__9338;
          count__9323 = G__9339;
          i__9324 = G__9340;
          continue;
        } else {
          var vec__9328 = cljs.core.first(seq__9321__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9328, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9328, 1, null);
          var G__9329_9341 = v;
          var G__9330_9342 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9329_9341, G__9330_9342) : f.call(null, G__9329_9341, G__9330_9342);
          var G__9343 = cljs.core.next(seq__9321__$1);
          var G__9344 = null;
          var G__9345 = 0;
          var G__9346 = 0;
          seq__9321 = G__9343;
          chunk__9322 = G__9344;
          count__9323 = G__9345;
          i__9324 = G__9346;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9319_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9319_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9347 = null;
  var G__9347__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9347__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9347 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9347__2.call(this, self__, k);
      case 3:
        return G__9347__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9347.cljs$core$IFn$_invoke$arity$2 = G__9347__2;
  G__9347.cljs$core$IFn$_invoke$arity$3 = G__9347__3;
  return G__9347;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9320) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9320)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4108__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4108__auto__.length) {
        var G__9348 = i + 1;
        var G__9349 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__9348;
        res = G__9349;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__9350 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__9351 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__9350;
          out = G__9351;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__9352__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__9352 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__9353__i = 0, G__9353__a = new Array(arguments.length - 0);
        while (G__9353__i < G__9353__a.length) {
          G__9353__a[G__9353__i] = arguments[G__9353__i + 0];
          ++G__9353__i;
        }
        keys = new cljs.core.IndexedSeq(G__9353__a, 0);
      }
      return G__9352__delegate.call(this, keys);
    };
    G__9352.cljs$lang$maxFixedArity = 0;
    G__9352.cljs$lang$applyTo = function(arglist__9354) {
      var keys = cljs.core.seq(arglist__9354);
      return G__9352__delegate(keys);
    };
    G__9352.cljs$core$IFn$_invoke$arity$variadic = G__9352__delegate;
    return G__9352;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__9355 = null;
        if (arguments.length > 0) {
          var G__9356__i = 0, G__9356__a = new Array(arguments.length - 0);
          while (G__9356__i < G__9356__a.length) {
            G__9356__a[G__9356__i] = arguments[G__9356__i + 0];
            ++G__9356__i;
          }
          G__9355 = new cljs.core.IndexedSeq(G__9356__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9355);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__9357__i = 0, G__9357__a = new Array(arguments.length - 0);
      while (G__9357__i < G__9357__a.length) {
        G__9357__a[G__9357__i] = arguments[G__9357__i + 0];
        ++G__9357__i;
      }
      keys = new cljs.core.IndexedSeq(G__9357__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9358) {
    var keys = cljs.core.seq(arglist__9358);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__9359__i = 0, G__9359__a = new Array(arguments.length - 1);
      while (G__9359__i < G__9359__a.length) {
        G__9359__a[G__9359__i] = arguments[G__9359__i + 1];
        ++G__9359__i;
      }
      keys = new cljs.core.IndexedSeq(G__9359__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9360) {
    var comparator = cljs.core.first(arglist__9360);
    var keys = cljs.core.rest(arglist__9360);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__9361_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__9361_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__9361_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9362_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__9362_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__9362_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__9383 = null;
          var G__9383__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9383__1 = function(result) {
            var G__9373 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9373) : rf.call(null, G__9373);
          };
          var G__9383__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__9374 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9374) : cljs.core.deref.call(null, G__9374);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__9375 = result;
              var G__9376 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9375, G__9376) : rf.call(null, G__9375, G__9376);
            }
          };
          G__9383 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9383__0.call(this);
              case 1:
                return G__9383__1.call(this, result);
              case 2:
                return G__9383__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9383.cljs$core$IFn$_invoke$arity$0 = G__9383__0;
          G__9383.cljs$core$IFn$_invoke$arity$1 = G__9383__1;
          G__9383.cljs$core$IFn$_invoke$arity$2 = G__9383__2;
          return G__9383;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__9381, seen__$1) {
          while (true) {
            var vec__9382 = p__9381;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9382, 0, null);
            var xs__$1 = vec__9382;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__9384 = cljs.core.rest(s);
                var G__9385 = seen__$1;
                p__9381 = G__9384;
                seen__$1 = G__9385;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__9386 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__9387 = cljs.core.next(s__$1);
      ret = G__9386;
      s__$1 = G__9387;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__9389 = x;
    if (G__9389) {
      var bit__3901__auto__ = G__9389.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__3901__auto__ || G__9389.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__9390 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__9391 = cljs.core.next(ks);
      var G__9392 = cljs.core.next(vs);
      map = G__9390;
      ks = G__9391;
      vs = G__9392;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__9403 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9403) : k.call(null, G__9403);
    }() > function() {
      var G__9404 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9404) : k.call(null, G__9404);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__9405__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9393_SHARP_, p2__9394_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__9393_SHARP_, p2__9394_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9405 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9406__i = 0, G__9406__a = new Array(arguments.length - 3);
        while (G__9406__i < G__9406__a.length) {
          G__9406__a[G__9406__i] = arguments[G__9406__i + 3];
          ++G__9406__i;
        }
        more = new cljs.core.IndexedSeq(G__9406__a, 0);
      }
      return G__9405__delegate.call(this, k, x, y, more);
    };
    G__9405.cljs$lang$maxFixedArity = 3;
    G__9405.cljs$lang$applyTo = function(arglist__9407) {
      var k = cljs.core.first(arglist__9407);
      arglist__9407 = cljs.core.next(arglist__9407);
      var x = cljs.core.first(arglist__9407);
      arglist__9407 = cljs.core.next(arglist__9407);
      var y = cljs.core.first(arglist__9407);
      var more = cljs.core.rest(arglist__9407);
      return G__9405__delegate(k, x, y, more);
    };
    G__9405.cljs$core$IFn$_invoke$arity$variadic = G__9405__delegate;
    return G__9405;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__9408 = null;
        if (arguments.length > 3) {
          var G__9409__i = 0, G__9409__a = new Array(arguments.length - 3);
          while (G__9409__i < G__9409__a.length) {
            G__9409__a[G__9409__i] = arguments[G__9409__i + 3];
            ++G__9409__i;
          }
          G__9408 = new cljs.core.IndexedSeq(G__9409__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9408);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__9420 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9420) : k.call(null, G__9420);
    }() < function() {
      var G__9421 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9421) : k.call(null, G__9421);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__9422__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9410_SHARP_, p2__9411_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__9410_SHARP_, p2__9411_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9422 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9423__i = 0, G__9423__a = new Array(arguments.length - 3);
        while (G__9423__i < G__9423__a.length) {
          G__9423__a[G__9423__i] = arguments[G__9423__i + 3];
          ++G__9423__i;
        }
        more = new cljs.core.IndexedSeq(G__9423__a, 0);
      }
      return G__9422__delegate.call(this, k, x, y, more);
    };
    G__9422.cljs$lang$maxFixedArity = 3;
    G__9422.cljs$lang$applyTo = function(arglist__9424) {
      var k = cljs.core.first(arglist__9424);
      arglist__9424 = cljs.core.next(arglist__9424);
      var x = cljs.core.first(arglist__9424);
      arglist__9424 = cljs.core.next(arglist__9424);
      var y = cljs.core.first(arglist__9424);
      var more = cljs.core.rest(arglist__9424);
      return G__9422__delegate(k, x, y, more);
    };
    G__9422.cljs$core$IFn$_invoke$arity$variadic = G__9422__delegate;
    return G__9422;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__9425 = null;
        if (arguments.length > 3) {
          var G__9426__i = 0, G__9426__a = new Array(arguments.length - 3);
          while (G__9426__i < G__9426__a.length) {
            G__9426__a[G__9426__i] = arguments[G__9426__i + 3];
            ++G__9426__i;
          }
          G__9425 = new cljs.core.IndexedSeq(G__9426__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9425);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__9443 = null;
          var G__9443__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9443__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9438 = result;
                var G__9439 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9438, G__9439) : rf.call(null, G__9438, G__9439);
              }());
            }();
            var G__9440 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9440) : rf.call(null, G__9440);
          };
          var G__9443__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__9441 = result;
              var G__9442 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9441, G__9442) : rf.call(null, G__9441, G__9442);
            } else {
              return result;
            }
          };
          G__9443 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9443__0.call(this);
              case 1:
                return G__9443__1.call(this, result);
              case 2:
                return G__9443__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9443.cljs$core$IFn$_invoke$arity$0 = G__9443__0;
          G__9443.cljs$core$IFn$_invoke$arity$1 = G__9443__1;
          G__9443.cljs$core$IFn$_invoke$arity$2 = G__9443__2;
          return G__9443;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9456 = null;
        var G__9456__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9456__1 = function(result) {
          var G__9451 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9451) : rf.call(null, G__9451);
        };
        var G__9456__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9452 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9452) : pred.call(null, G__9452);
          }())) {
            var G__9453 = result;
            var G__9454 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9453, G__9454) : rf.call(null, G__9453, G__9454);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__9456 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9456__0.call(this);
            case 1:
              return G__9456__1.call(this, result);
            case 2:
              return G__9456__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9456.cljs$core$IFn$_invoke$arity$0 = G__9456__0;
        G__9456.cljs$core$IFn$_invoke$arity$1 = G__9456__1;
        G__9456.cljs$core$IFn$_invoke$arity$2 = G__9456__2;
        return G__9456;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__9455 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9455) : pred.call(null, G__9455);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__9461 = function() {
      var G__9463 = cljs.core._entry_key(sc, e);
      var G__9464 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9463, G__9464) : comp.call(null, G__9463, G__9464);
    }();
    var G__9462 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9461, G__9462) : test.call(null, G__9461, G__9462);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9468 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9468, 0, null);
        var s = vec__9468;
        if (cljs.core.truth_(function() {
          var G__9469 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9469) : include.call(null, G__9469);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9470 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470, 0, null);
      var s = vec__9470;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9474 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9474, 0, null);
        var s = vec__9474;
        if (cljs.core.truth_(function() {
          var G__9475 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9475) : include.call(null, G__9475);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9476 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9476, 0, null);
      var s = vec__9476;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__9477 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9477) : Math.ceil.call(null, G__9477);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3648__auto__ = self__.__hash;
  if (!(h__3648__auto__ == null)) {
    return h__3648__auto__;
  } else {
    var h__3648__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__3648__auto____$1;
    return h__3648__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__9478 = ret;
        var G__9479 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9478, G__9479) : f.call(null, G__9478, G__9479);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__9480 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9480) : cljs.core.deref.call(null, G__9480);
      } else {
        var G__9481 = i + self__.step;
        var G__9482 = ret__$1;
        i = G__9481;
        ret = G__9482;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__9500 = null;
          var G__9500__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9500__1 = function(result) {
            var G__9497 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9497) : rf.call(null, G__9497);
          };
          var G__9500__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__9498 = result;
              var G__9499 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9498, G__9499) : rf.call(null, G__9498, G__9499);
            } else {
              return result;
            }
          };
          G__9500 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9500__0.call(this);
              case 1:
                return G__9500__1.call(this, result);
              case 2:
                return G__9500__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9500.cljs$core$IFn$_invoke$arity$0 = G__9500__0;
          G__9500.cljs$core$IFn$_invoke$arity$1 = G__9500__1;
          G__9500.cljs$core$IFn$_invoke$arity$2 = G__9500__2;
          return G__9500;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__9522 = null;
          var G__9522__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9522__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9513 = result;
                var G__9514 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9513, G__9514) : rf.call(null, G__9513, G__9514);
              }());
            }();
            var G__9515 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9515) : rf.call(null, G__9515);
          };
          var G__9522__2 = function(result, input) {
            var pval = function() {
              var G__9516 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9516) : cljs.core.deref.call(null, G__9516);
            }();
            var val = function() {
              var G__9517 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9517) : f.call(null, G__9517);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__9518 = result;
                var G__9519 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9518, G__9519) : rf.call(null, G__9518, G__9519);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__9522 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9522__0.call(this);
              case 1:
                return G__9522__1.call(this, result);
              case 2:
                return G__9522__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9522.cljs$core$IFn$_invoke$arity$0 = G__9522__0;
          G__9522.cljs$core$IFn$_invoke$arity$1 = G__9522__1;
          G__9522.cljs$core$IFn$_invoke$arity$2 = G__9522__2;
          return G__9522;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__9520 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9520) : f.call(null, G__9520);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__9501_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__9521 = p1__9501_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9521) : f.call(null, G__9521);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__9531 = init;
          var G__9532 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9531, G__9532) : f.call(null, G__9531, G__9532);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__9627 = null;
      var G__9627__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__9627__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9585 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9585) : f.call(null, G__9585);
        }()], null);
      };
      var G__9627__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9586 = x;
          var G__9587 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9586, G__9587) : f.call(null, G__9586, G__9587);
        }()], null);
      };
      var G__9627__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9588 = x;
          var G__9589 = y;
          var G__9590 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9588, G__9589, G__9590) : f.call(null, G__9588, G__9589, G__9590);
        }()], null);
      };
      var G__9627__4 = function() {
        var G__9628__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__9628 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9629__i = 0, G__9629__a = new Array(arguments.length - 3);
            while (G__9629__i < G__9629__a.length) {
              G__9629__a[G__9629__i] = arguments[G__9629__i + 3];
              ++G__9629__i;
            }
            args = new cljs.core.IndexedSeq(G__9629__a, 0);
          }
          return G__9628__delegate.call(this, x, y, z, args);
        };
        G__9628.cljs$lang$maxFixedArity = 3;
        G__9628.cljs$lang$applyTo = function(arglist__9630) {
          var x = cljs.core.first(arglist__9630);
          arglist__9630 = cljs.core.next(arglist__9630);
          var y = cljs.core.first(arglist__9630);
          arglist__9630 = cljs.core.next(arglist__9630);
          var z = cljs.core.first(arglist__9630);
          var args = cljs.core.rest(arglist__9630);
          return G__9628__delegate(x, y, z, args);
        };
        G__9628.cljs$core$IFn$_invoke$arity$variadic = G__9628__delegate;
        return G__9628;
      }();
      G__9627 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9627__0.call(this);
          case 1:
            return G__9627__1.call(this, x);
          case 2:
            return G__9627__2.call(this, x, y);
          case 3:
            return G__9627__3.call(this, x, y, z);
          default:
            var G__9631 = null;
            if (arguments.length > 3) {
              var G__9632__i = 0, G__9632__a = new Array(arguments.length - 3);
              while (G__9632__i < G__9632__a.length) {
                G__9632__a[G__9632__i] = arguments[G__9632__i + 3];
                ++G__9632__i;
              }
              G__9631 = new cljs.core.IndexedSeq(G__9632__a, 0);
            }
            return G__9627__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9631);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9627.cljs$lang$maxFixedArity = 3;
      G__9627.cljs$lang$applyTo = G__9627__4.cljs$lang$applyTo;
      G__9627.cljs$core$IFn$_invoke$arity$0 = G__9627__0;
      G__9627.cljs$core$IFn$_invoke$arity$1 = G__9627__1;
      G__9627.cljs$core$IFn$_invoke$arity$2 = G__9627__2;
      G__9627.cljs$core$IFn$_invoke$arity$3 = G__9627__3;
      G__9627.cljs$core$IFn$_invoke$arity$variadic = G__9627__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9627;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__9633 = null;
      var G__9633__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__9633__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9591 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9591) : f.call(null, G__9591);
        }(), function() {
          var G__9592 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9592) : g.call(null, G__9592);
        }()], null);
      };
      var G__9633__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9593 = x;
          var G__9594 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9593, G__9594) : f.call(null, G__9593, G__9594);
        }(), function() {
          var G__9595 = x;
          var G__9596 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9595, G__9596) : g.call(null, G__9595, G__9596);
        }()], null);
      };
      var G__9633__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9597 = x;
          var G__9598 = y;
          var G__9599 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9597, G__9598, G__9599) : f.call(null, G__9597, G__9598, G__9599);
        }(), function() {
          var G__9600 = x;
          var G__9601 = y;
          var G__9602 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9600, G__9601, G__9602) : g.call(null, G__9600, G__9601, G__9602);
        }()], null);
      };
      var G__9633__4 = function() {
        var G__9634__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__9634 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9635__i = 0, G__9635__a = new Array(arguments.length - 3);
            while (G__9635__i < G__9635__a.length) {
              G__9635__a[G__9635__i] = arguments[G__9635__i + 3];
              ++G__9635__i;
            }
            args = new cljs.core.IndexedSeq(G__9635__a, 0);
          }
          return G__9634__delegate.call(this, x, y, z, args);
        };
        G__9634.cljs$lang$maxFixedArity = 3;
        G__9634.cljs$lang$applyTo = function(arglist__9636) {
          var x = cljs.core.first(arglist__9636);
          arglist__9636 = cljs.core.next(arglist__9636);
          var y = cljs.core.first(arglist__9636);
          arglist__9636 = cljs.core.next(arglist__9636);
          var z = cljs.core.first(arglist__9636);
          var args = cljs.core.rest(arglist__9636);
          return G__9634__delegate(x, y, z, args);
        };
        G__9634.cljs$core$IFn$_invoke$arity$variadic = G__9634__delegate;
        return G__9634;
      }();
      G__9633 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9633__0.call(this);
          case 1:
            return G__9633__1.call(this, x);
          case 2:
            return G__9633__2.call(this, x, y);
          case 3:
            return G__9633__3.call(this, x, y, z);
          default:
            var G__9637 = null;
            if (arguments.length > 3) {
              var G__9638__i = 0, G__9638__a = new Array(arguments.length - 3);
              while (G__9638__i < G__9638__a.length) {
                G__9638__a[G__9638__i] = arguments[G__9638__i + 3];
                ++G__9638__i;
              }
              G__9637 = new cljs.core.IndexedSeq(G__9638__a, 0);
            }
            return G__9633__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9637);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9633.cljs$lang$maxFixedArity = 3;
      G__9633.cljs$lang$applyTo = G__9633__4.cljs$lang$applyTo;
      G__9633.cljs$core$IFn$_invoke$arity$0 = G__9633__0;
      G__9633.cljs$core$IFn$_invoke$arity$1 = G__9633__1;
      G__9633.cljs$core$IFn$_invoke$arity$2 = G__9633__2;
      G__9633.cljs$core$IFn$_invoke$arity$3 = G__9633__3;
      G__9633.cljs$core$IFn$_invoke$arity$variadic = G__9633__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9633;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__9639 = null;
      var G__9639__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__9639__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9603 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9603) : f.call(null, G__9603);
        }(), function() {
          var G__9604 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9604) : g.call(null, G__9604);
        }(), function() {
          var G__9605 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9605) : h.call(null, G__9605);
        }()], null);
      };
      var G__9639__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9606 = x;
          var G__9607 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9606, G__9607) : f.call(null, G__9606, G__9607);
        }(), function() {
          var G__9608 = x;
          var G__9609 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9608, G__9609) : g.call(null, G__9608, G__9609);
        }(), function() {
          var G__9610 = x;
          var G__9611 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9610, G__9611) : h.call(null, G__9610, G__9611);
        }()], null);
      };
      var G__9639__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9612 = x;
          var G__9613 = y;
          var G__9614 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9612, G__9613, G__9614) : f.call(null, G__9612, G__9613, G__9614);
        }(), function() {
          var G__9615 = x;
          var G__9616 = y;
          var G__9617 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9615, G__9616, G__9617) : g.call(null, G__9615, G__9616, G__9617);
        }(), function() {
          var G__9618 = x;
          var G__9619 = y;
          var G__9620 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9618, G__9619, G__9620) : h.call(null, G__9618, G__9619, G__9620);
        }()], null);
      };
      var G__9639__4 = function() {
        var G__9640__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__9640 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9641__i = 0, G__9641__a = new Array(arguments.length - 3);
            while (G__9641__i < G__9641__a.length) {
              G__9641__a[G__9641__i] = arguments[G__9641__i + 3];
              ++G__9641__i;
            }
            args = new cljs.core.IndexedSeq(G__9641__a, 0);
          }
          return G__9640__delegate.call(this, x, y, z, args);
        };
        G__9640.cljs$lang$maxFixedArity = 3;
        G__9640.cljs$lang$applyTo = function(arglist__9642) {
          var x = cljs.core.first(arglist__9642);
          arglist__9642 = cljs.core.next(arglist__9642);
          var y = cljs.core.first(arglist__9642);
          arglist__9642 = cljs.core.next(arglist__9642);
          var z = cljs.core.first(arglist__9642);
          var args = cljs.core.rest(arglist__9642);
          return G__9640__delegate(x, y, z, args);
        };
        G__9640.cljs$core$IFn$_invoke$arity$variadic = G__9640__delegate;
        return G__9640;
      }();
      G__9639 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9639__0.call(this);
          case 1:
            return G__9639__1.call(this, x);
          case 2:
            return G__9639__2.call(this, x, y);
          case 3:
            return G__9639__3.call(this, x, y, z);
          default:
            var G__9643 = null;
            if (arguments.length > 3) {
              var G__9644__i = 0, G__9644__a = new Array(arguments.length - 3);
              while (G__9644__i < G__9644__a.length) {
                G__9644__a[G__9644__i] = arguments[G__9644__i + 3];
                ++G__9644__i;
              }
              G__9643 = new cljs.core.IndexedSeq(G__9644__a, 0);
            }
            return G__9639__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9643);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9639.cljs$lang$maxFixedArity = 3;
      G__9639.cljs$lang$applyTo = G__9639__4.cljs$lang$applyTo;
      G__9639.cljs$core$IFn$_invoke$arity$0 = G__9639__0;
      G__9639.cljs$core$IFn$_invoke$arity$1 = G__9639__1;
      G__9639.cljs$core$IFn$_invoke$arity$2 = G__9639__2;
      G__9639.cljs$core$IFn$_invoke$arity$3 = G__9639__3;
      G__9639.cljs$core$IFn$_invoke$arity$variadic = G__9639__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9639;
    }();
  };
  var juxt__4 = function() {
    var G__9645__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__9646 = null;
          var G__9646__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9533_SHARP_, p2__9534_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9533_SHARP_, function() {
                  return p2__9534_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9534_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9534_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9646__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9535_SHARP_, p2__9536_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9535_SHARP_, function() {
                  var G__9621 = x;
                  return p2__9536_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9536_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9621) : p2__9536_SHARP_.call(null, G__9621);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9646__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9537_SHARP_, p2__9538_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9537_SHARP_, function() {
                  var G__9622 = x;
                  var G__9623 = y;
                  return p2__9538_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9538_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9622, G__9623) : p2__9538_SHARP_.call(null, G__9622, G__9623);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9646__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9539_SHARP_, p2__9540_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9539_SHARP_, function() {
                  var G__9624 = x;
                  var G__9625 = y;
                  var G__9626 = z;
                  return p2__9540_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9540_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9624, G__9625, G__9626) : p2__9540_SHARP_.call(null, G__9624, G__9625, G__9626);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9646__4 = function() {
            var G__9647__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__9541_SHARP_, p2__9542_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9541_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9542_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__9647 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__9648__i = 0, G__9648__a = new Array(arguments.length - 3);
                while (G__9648__i < G__9648__a.length) {
                  G__9648__a[G__9648__i] = arguments[G__9648__i + 3];
                  ++G__9648__i;
                }
                args = new cljs.core.IndexedSeq(G__9648__a, 0);
              }
              return G__9647__delegate.call(this, x, y, z, args);
            };
            G__9647.cljs$lang$maxFixedArity = 3;
            G__9647.cljs$lang$applyTo = function(arglist__9649) {
              var x = cljs.core.first(arglist__9649);
              arglist__9649 = cljs.core.next(arglist__9649);
              var y = cljs.core.first(arglist__9649);
              arglist__9649 = cljs.core.next(arglist__9649);
              var z = cljs.core.first(arglist__9649);
              var args = cljs.core.rest(arglist__9649);
              return G__9647__delegate(x, y, z, args);
            };
            G__9647.cljs$core$IFn$_invoke$arity$variadic = G__9647__delegate;
            return G__9647;
          }();
          G__9646 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__9646__0.call(this);
              case 1:
                return G__9646__1.call(this, x);
              case 2:
                return G__9646__2.call(this, x, y);
              case 3:
                return G__9646__3.call(this, x, y, z);
              default:
                var G__9650 = null;
                if (arguments.length > 3) {
                  var G__9651__i = 0, G__9651__a = new Array(arguments.length - 3);
                  while (G__9651__i < G__9651__a.length) {
                    G__9651__a[G__9651__i] = arguments[G__9651__i + 3];
                    ++G__9651__i;
                  }
                  G__9650 = new cljs.core.IndexedSeq(G__9651__a, 0);
                }
                return G__9646__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9650);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9646.cljs$lang$maxFixedArity = 3;
          G__9646.cljs$lang$applyTo = G__9646__4.cljs$lang$applyTo;
          G__9646.cljs$core$IFn$_invoke$arity$0 = G__9646__0;
          G__9646.cljs$core$IFn$_invoke$arity$1 = G__9646__1;
          G__9646.cljs$core$IFn$_invoke$arity$2 = G__9646__2;
          G__9646.cljs$core$IFn$_invoke$arity$3 = G__9646__3;
          G__9646.cljs$core$IFn$_invoke$arity$variadic = G__9646__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__9646;
        }();
      }(fs__$1);
    };
    var G__9645 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__9652__i = 0, G__9652__a = new Array(arguments.length - 3);
        while (G__9652__i < G__9652__a.length) {
          G__9652__a[G__9652__i] = arguments[G__9652__i + 3];
          ++G__9652__i;
        }
        fs = new cljs.core.IndexedSeq(G__9652__a, 0);
      }
      return G__9645__delegate.call(this, f, g, h, fs);
    };
    G__9645.cljs$lang$maxFixedArity = 3;
    G__9645.cljs$lang$applyTo = function(arglist__9653) {
      var f = cljs.core.first(arglist__9653);
      arglist__9653 = cljs.core.next(arglist__9653);
      var g = cljs.core.first(arglist__9653);
      arglist__9653 = cljs.core.next(arglist__9653);
      var h = cljs.core.first(arglist__9653);
      var fs = cljs.core.rest(arglist__9653);
      return G__9645__delegate(f, g, h, fs);
    };
    G__9645.cljs$core$IFn$_invoke$arity$variadic = G__9645__delegate;
    return G__9645;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__9654 = null;
        if (arguments.length > 3) {
          var G__9655__i = 0, G__9655__a = new Array(arguments.length - 3);
          while (G__9655__i < G__9655__a.length) {
            G__9655__a[G__9655__i] = arguments[G__9655__i + 3];
            ++G__9655__i;
          }
          G__9654 = new cljs.core.IndexedSeq(G__9655__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__9654);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__9656 = cljs.core.next(coll);
        coll = G__9656;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__9657 = n - 1;
        var G__9658 = cljs.core.next(coll);
        n = G__9657;
        coll = G__9658;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__9662 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_9670 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__9671_9677 = cljs.core.first(coll);
        var G__9672_9678 = writer;
        var G__9673_9679 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9671_9677, G__9672_9678, G__9673_9679) : print_one.call(null, G__9671_9677, G__9672_9678, G__9673_9679);
      } else {
      }
      var coll_9680__$1 = cljs.core.next(coll);
      var n_9681 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_9680__$1 && (n_9681 == null || !(n_9681 === 0))) {
          cljs.core._write(writer, sep);
          var G__9674_9682 = cljs.core.first(coll_9680__$1);
          var G__9675_9683 = writer;
          var G__9676_9684 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9674_9682, G__9675_9683, G__9676_9684) : print_one.call(null, G__9674_9682, G__9675_9683, G__9676_9684);
          var G__9685 = cljs.core.next(coll_9680__$1);
          var G__9686 = n_9681 - 1;
          coll_9680__$1 = G__9685;
          n_9681 = G__9686;
          continue;
        } else {
          if (cljs.core.seq(coll_9680__$1) && n_9681 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9670;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__9691 = cljs.core.seq(ss);
    var chunk__9692 = null;
    var count__9693 = 0;
    var i__9694 = 0;
    while (true) {
      if (i__9694 < count__9693) {
        var s = chunk__9692.cljs$core$IIndexed$_nth$arity$2(null, i__9694);
        cljs.core._write(writer, s);
        var G__9695 = seq__9691;
        var G__9696 = chunk__9692;
        var G__9697 = count__9693;
        var G__9698 = i__9694 + 1;
        seq__9691 = G__9695;
        chunk__9692 = G__9696;
        count__9693 = G__9697;
        i__9694 = G__9698;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__9691);
        if (temp__4126__auto__) {
          var seq__9691__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__9691__$1)) {
            var c__4014__auto__ = cljs.core.chunk_first(seq__9691__$1);
            var G__9699 = cljs.core.chunk_rest(seq__9691__$1);
            var G__9700 = c__4014__auto__;
            var G__9701 = cljs.core.count(c__4014__auto__);
            var G__9702 = 0;
            seq__9691 = G__9699;
            chunk__9692 = G__9700;
            count__9693 = G__9701;
            i__9694 = G__9702;
            continue;
          } else {
            var s = cljs.core.first(seq__9691__$1);
            cljs.core._write(writer, s);
            var G__9703 = cljs.core.next(seq__9691__$1);
            var G__9704 = null;
            var G__9705 = 0;
            var G__9706 = 0;
            seq__9691 = G__9703;
            chunk__9692 = G__9704;
            count__9693 = G__9705;
            i__9694 = G__9706;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__9707__i = 0, G__9707__a = new Array(arguments.length - 1);
      while (G__9707__i < G__9707__a.length) {
        G__9707__a[G__9707__i] = arguments[G__9707__i + 1];
        ++G__9707__i;
      }
      ss = new cljs.core.IndexedSeq(G__9707__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__9708) {
    var writer = cljs.core.first(arglist__9708);
    var ss = cljs.core.rest(arglist__9708);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj9710 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj9710;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__9713 = '[\\\\"\b\f\n\r\t]';
    var G__9714 = "g";
    return RegExp(G__9713, G__9714);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3215__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3215__auto__)) {
          var and__3215__auto____$1 = function() {
            var G__9728 = obj;
            if (G__9728) {
              var bit__3908__auto__ = G__9728.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__3908__auto__ || G__9728.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__9728.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__9728);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__9728);
            }
          }();
          if (and__3215__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3215__auto____$1;
          }
        } else {
          return and__3215__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__9729 = obj;
            if (G__9729) {
              var bit__3901__auto__ = G__9729.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__3901__auto__ || G__9729.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__9730 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__9731 = pr_writer;
                var G__9732 = writer;
                var G__9733 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9730, G__9731, G__9732, G__9733) : cljs.core.print_map.call(null, G__9730, G__9731, G__9732, G__9733);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__9734 = obj;
                    return goog.isString(G__9734);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__9736 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__9736;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__9735 = obj;
                            if (G__9735) {
                              var bit__3908__auto__ = G__9735.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__3908__auto__ || G__9735.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__9735.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__9735);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__9735);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__9741 = cljs.core.seq(cljs.core.next(objs));
  var chunk__9742 = null;
  var count__9743 = 0;
  var i__9744 = 0;
  while (true) {
    if (i__9744 < count__9743) {
      var obj = chunk__9742.cljs$core$IIndexed$_nth$arity$2(null, i__9744);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__9745 = seq__9741;
      var G__9746 = chunk__9742;
      var G__9747 = count__9743;
      var G__9748 = i__9744 + 1;
      seq__9741 = G__9745;
      chunk__9742 = G__9746;
      count__9743 = G__9747;
      i__9744 = G__9748;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9741);
      if (temp__4126__auto__) {
        var seq__9741__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9741__$1)) {
          var c__4014__auto__ = cljs.core.chunk_first(seq__9741__$1);
          var G__9749 = cljs.core.chunk_rest(seq__9741__$1);
          var G__9750 = c__4014__auto__;
          var G__9751 = cljs.core.count(c__4014__auto__);
          var G__9752 = 0;
          seq__9741 = G__9749;
          chunk__9742 = G__9750;
          count__9743 = G__9751;
          i__9744 = G__9752;
          continue;
        } else {
          var obj = cljs.core.first(seq__9741__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__9753 = cljs.core.next(seq__9741__$1);
          var G__9754 = null;
          var G__9755 = 0;
          var G__9756 = 0;
          seq__9741 = G__9753;
          chunk__9742 = G__9754;
          count__9743 = G__9755;
          i__9744 = G__9756;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9757__i = 0, G__9757__a = new Array(arguments.length - 0);
      while (G__9757__i < G__9757__a.length) {
        G__9757__a[G__9757__i] = arguments[G__9757__i + 0];
        ++G__9757__i;
      }
      objs = new cljs.core.IndexedSeq(G__9757__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__9758) {
    var objs = cljs.core.seq(arglist__9758);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9759__i = 0, G__9759__a = new Array(arguments.length - 0);
      while (G__9759__i < G__9759__a.length) {
        G__9759__a[G__9759__i] = arguments[G__9759__i + 0];
        ++G__9759__i;
      }
      objs = new cljs.core.IndexedSeq(G__9759__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__9760) {
    var objs = cljs.core.seq(arglist__9760);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9761__i = 0, G__9761__a = new Array(arguments.length - 0);
      while (G__9761__i < G__9761__a.length) {
        G__9761__a[G__9761__i] = arguments[G__9761__i + 0];
        ++G__9761__i;
      }
      objs = new cljs.core.IndexedSeq(G__9761__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__9762) {
    var objs = cljs.core.seq(arglist__9762);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9763__i = 0, G__9763__a = new Array(arguments.length - 0);
      while (G__9763__i < G__9763__a.length) {
        G__9763__a[G__9763__i] = arguments[G__9763__i + 0];
        ++G__9763__i;
      }
      objs = new cljs.core.IndexedSeq(G__9763__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__9764) {
    var objs = cljs.core.seq(arglist__9764);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9765__i = 0, G__9765__a = new Array(arguments.length - 0);
      while (G__9765__i < G__9765__a.length) {
        G__9765__a[G__9765__i] = arguments[G__9765__i + 0];
        ++G__9765__i;
      }
      objs = new cljs.core.IndexedSeq(G__9765__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__9766) {
    var objs = cljs.core.seq(arglist__9766);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9767__i = 0, G__9767__a = new Array(arguments.length - 0);
      while (G__9767__i < G__9767__a.length) {
        G__9767__a[G__9767__i] = arguments[G__9767__i + 0];
        ++G__9767__i;
      }
      objs = new cljs.core.IndexedSeq(G__9767__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__9768) {
    var objs = cljs.core.seq(arglist__9768);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9769__i = 0, G__9769__a = new Array(arguments.length - 0);
      while (G__9769__i < G__9769__a.length) {
        G__9769__a[G__9769__i] = arguments[G__9769__i + 0];
        ++G__9769__i;
      }
      objs = new cljs.core.IndexedSeq(G__9769__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__9770) {
    var objs = cljs.core.seq(arglist__9770);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9771__i = 0, G__9771__a = new Array(arguments.length - 0);
      while (G__9771__i < G__9771__a.length) {
        G__9771__a[G__9771__i] = arguments[G__9771__i + 0];
        ++G__9771__i;
      }
      objs = new cljs.core.IndexedSeq(G__9771__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__9772) {
    var objs = cljs.core.seq(arglist__9772);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__9779_9785 = cljs.core.key(e);
    var G__9780_9786 = w;
    var G__9781_9787 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9779_9785, G__9780_9786, G__9781_9787) : print_one.call(null, G__9779_9785, G__9780_9786, G__9781_9787);
    cljs.core._write(w, " ");
    var G__9782 = cljs.core.val(e);
    var G__9783 = w;
    var G__9784 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9782, G__9783, G__9784) : print_one.call(null, G__9782, G__9783, G__9784);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__9788__i = 0, G__9788__a = new Array(arguments.length - 2);
      while (G__9788__i < G__9788__a.length) {
        G__9788__a[G__9788__i] = arguments[G__9788__i + 2];
        ++G__9788__i;
      }
      args = new cljs.core.IndexedSeq(G__9788__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__9789) {
    var iref = cljs.core.first(arglist__9789);
    arglist__9789 = cljs.core.next(arglist__9789);
    var f = cljs.core.first(arglist__9789);
    var args = cljs.core.rest(arglist__9789);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__9792 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9792) : cljs.core.atom.call(null, G__9792);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__9794 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9794) : cljs.core.deref.call(null, G__9794);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__9795_SHARP_, p2__9796_SHARP_) {
    var ret = function() {
      var G__9799 = p1__9795_SHARP_;
      var G__9800 = p2__9796_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9799, G__9800) : rf.call(null, G__9799, G__9800);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__9803 = null;
      var G__9803__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9803__1 = function(result) {
        var G__9802 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9802) : rf.call(null, G__9802);
      };
      var G__9803__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__9803 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9803__0.call(this);
          case 1:
            return G__9803__1.call(this, result);
          case 2:
            return G__9803__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9803.cljs$core$IFn$_invoke$arity$0 = G__9803__0;
      G__9803.cljs$core$IFn$_invoke$arity$1 = G__9803__1;
      G__9803.cljs$core$IFn$_invoke$arity$2 = G__9803__2;
      return G__9803;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__9812 = null;
          var G__9812__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9812__1 = function(result) {
            var G__9808 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9808) : rf.call(null, G__9808);
          };
          var G__9812__2 = function(result, input) {
            var prior = function() {
              var G__9809 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9809) : cljs.core.deref.call(null, G__9809);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__9810 = result;
              var G__9811 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9810, G__9811) : rf.call(null, G__9810, G__9811);
            }
          };
          G__9812 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9812__0.call(this);
              case 1:
                return G__9812__1.call(this, result);
              case 2:
                return G__9812__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9812.cljs$core$IFn$_invoke$arity$0 = G__9812__0;
          G__9812.cljs$core$IFn$_invoke$arity$1 = G__9812__1;
          G__9812.cljs$core$IFn$_invoke$arity$2 = G__9812__2;
          return G__9812;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4205__auto__ = this;
  return cljs.core.es6_iterator(this__4205__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9814_SHARP_, p2__9813_SHARP_) {
    var G__9816 = p2__9813_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__9816) : proc.call(null, G__9816);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj9818 = {};
  return obj9818;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._clj__GT_js[function() {
        var G__9822 = x__3871__auto__;
        return goog.typeOf(G__9822);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._key__GT_js[function() {
        var G__9826 = x__3871__auto__;
        return goog.typeOf(G__9826);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__9829 = k;
    if (G__9829) {
      var bit__3908__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3227__auto__ = bit__3908__auto__;
        if (cljs.core.truth_(or__3227__auto__)) {
          return or__3227__auto__;
        } else {
          return G__9829.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__9829.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9829);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9829);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__9830 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__9830) : cljs.core.clj__GT_js.call(null, G__9830);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__9846 = x;
      if (G__9846) {
        var bit__3908__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3227__auto__ = bit__3908__auto__;
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return G__9846.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__9846.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9846);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__9846);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj9848 = {};
              return obj9848;
            }();
            var seq__9849_9859 = cljs.core.seq(x);
            var chunk__9850_9860 = null;
            var count__9851_9861 = 0;
            var i__9852_9862 = 0;
            while (true) {
              if (i__9852_9862 < count__9851_9861) {
                var vec__9853_9863 = chunk__9850_9860.cljs$core$IIndexed$_nth$arity$2(null, i__9852_9862);
                var k_9864 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853_9863, 0, null);
                var v_9865 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853_9863, 1, null);
                m[cljs.core.key__GT_js(k_9864)] = clj__GT_js(v_9865);
                var G__9866 = seq__9849_9859;
                var G__9867 = chunk__9850_9860;
                var G__9868 = count__9851_9861;
                var G__9869 = i__9852_9862 + 1;
                seq__9849_9859 = G__9866;
                chunk__9850_9860 = G__9867;
                count__9851_9861 = G__9868;
                i__9852_9862 = G__9869;
                continue;
              } else {
                var temp__4126__auto___9870 = cljs.core.seq(seq__9849_9859);
                if (temp__4126__auto___9870) {
                  var seq__9849_9871__$1 = temp__4126__auto___9870;
                  if (cljs.core.chunked_seq_QMARK_(seq__9849_9871__$1)) {
                    var c__4014__auto___9872 = cljs.core.chunk_first(seq__9849_9871__$1);
                    var G__9873 = cljs.core.chunk_rest(seq__9849_9871__$1);
                    var G__9874 = c__4014__auto___9872;
                    var G__9875 = cljs.core.count(c__4014__auto___9872);
                    var G__9876 = 0;
                    seq__9849_9859 = G__9873;
                    chunk__9850_9860 = G__9874;
                    count__9851_9861 = G__9875;
                    i__9852_9862 = G__9876;
                    continue;
                  } else {
                    var vec__9854_9877 = cljs.core.first(seq__9849_9871__$1);
                    var k_9878 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9854_9877, 0, null);
                    var v_9879 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9854_9877, 1, null);
                    m[cljs.core.key__GT_js(k_9878)] = clj__GT_js(v_9879);
                    var G__9880 = cljs.core.next(seq__9849_9871__$1);
                    var G__9881 = null;
                    var G__9882 = 0;
                    var G__9883 = 0;
                    seq__9849_9859 = G__9880;
                    chunk__9850_9860 = G__9881;
                    count__9851_9861 = G__9882;
                    i__9852_9862 = G__9883;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__9855_9884 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__9856_9885 = null;
              var count__9857_9886 = 0;
              var i__9858_9887 = 0;
              while (true) {
                if (i__9858_9887 < count__9857_9886) {
                  var x_9888__$1 = chunk__9856_9885.cljs$core$IIndexed$_nth$arity$2(null, i__9858_9887);
                  arr.push(x_9888__$1);
                  var G__9889 = seq__9855_9884;
                  var G__9890 = chunk__9856_9885;
                  var G__9891 = count__9857_9886;
                  var G__9892 = i__9858_9887 + 1;
                  seq__9855_9884 = G__9889;
                  chunk__9856_9885 = G__9890;
                  count__9857_9886 = G__9891;
                  i__9858_9887 = G__9892;
                  continue;
                } else {
                  var temp__4126__auto___9893 = cljs.core.seq(seq__9855_9884);
                  if (temp__4126__auto___9893) {
                    var seq__9855_9894__$1 = temp__4126__auto___9893;
                    if (cljs.core.chunked_seq_QMARK_(seq__9855_9894__$1)) {
                      var c__4014__auto___9895 = cljs.core.chunk_first(seq__9855_9894__$1);
                      var G__9896 = cljs.core.chunk_rest(seq__9855_9894__$1);
                      var G__9897 = c__4014__auto___9895;
                      var G__9898 = cljs.core.count(c__4014__auto___9895);
                      var G__9899 = 0;
                      seq__9855_9884 = G__9896;
                      chunk__9856_9885 = G__9897;
                      count__9857_9886 = G__9898;
                      i__9858_9887 = G__9899;
                      continue;
                    } else {
                      var x_9900__$1 = cljs.core.first(seq__9855_9894__$1);
                      arr.push(x_9900__$1);
                      var G__9901 = cljs.core.next(seq__9855_9894__$1);
                      var G__9902 = null;
                      var G__9903 = 0;
                      var G__9904 = 0;
                      seq__9855_9884 = G__9901;
                      chunk__9856_9885 = G__9902;
                      count__9857_9886 = G__9903;
                      i__9858_9887 = G__9904;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj9906 = {};
  return obj9906;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3215__auto__ = x;
    if (and__3215__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__3871__auto__ = x == null ? null : x;
    return function() {
      var or__3227__auto__ = cljs.core._js__GT_clj[function() {
        var G__9910 = x__3871__auto__;
        return goog.typeOf(G__9910);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__9967__delegate = function(x, opts) {
      var map__9940 = opts;
      var map__9940__$1 = cljs.core.seq_QMARK_(map__9940) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9940) : map__9940;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9940__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__9940, map__9940__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__9956 = x__$1;
            if (G__9956) {
              var bit__3908__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3227__auto__ = bit__3908__auto__;
                if (cljs.core.truth_(or__3227__auto__)) {
                  return or__3227__auto__;
                } else {
                  return G__9956.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__9956.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__9956);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__9956);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__3983__auto__ = function(map__9940, map__9940__$1, keywordize_keys, keyfn) {
                        return function iter__9957(s__9958) {
                          return new cljs.core.LazySeq(null, function(map__9940, map__9940__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__9958__$1 = s__9958;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__9958__$1);
                                if (temp__4126__auto__) {
                                  var s__9958__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__9958__$2)) {
                                    var c__3981__auto__ = cljs.core.chunk_first(s__9958__$2);
                                    var size__3982__auto__ = cljs.core.count(c__3981__auto__);
                                    var b__9960 = cljs.core.chunk_buffer(size__3982__auto__);
                                    if (function() {
                                      var i__9959 = 0;
                                      while (true) {
                                        if (i__9959 < size__3982__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__3981__auto__, i__9959);
                                          cljs.core.chunk_append(b__9960, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__9965 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9965) : keyfn.call(null, G__9965);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__9968 = i__9959 + 1;
                                          i__9959 = G__9968;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__9960), iter__9957(cljs.core.chunk_rest(s__9958__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__9960), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__9958__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__9966 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9966) : keyfn.call(null, G__9966);
                                    }(), thisfn(x__$1[k])], null), iter__9957(cljs.core.rest(s__9958__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__9940, map__9940__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__9940, map__9940__$1, keywordize_keys, keyfn);
                      return iter__3983__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__9940, map__9940__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__9967 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__9969__i = 0, G__9969__a = new Array(arguments.length - 1);
        while (G__9969__i < G__9969__a.length) {
          G__9969__a[G__9969__i] = arguments[G__9969__i + 1];
          ++G__9969__i;
        }
        opts = new cljs.core.IndexedSeq(G__9969__a, 0);
      }
      return G__9967__delegate.call(this, x, opts);
    };
    G__9967.cljs$lang$maxFixedArity = 1;
    G__9967.cljs$lang$applyTo = function(arglist__9970) {
      var x = cljs.core.first(arglist__9970);
      var opts = cljs.core.rest(arglist__9970);
      return G__9967__delegate(x, opts);
    };
    G__9967.cljs$core$IFn$_invoke$arity$variadic = G__9967__delegate;
    return G__9967;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__9971 = null;
        if (arguments.length > 1) {
          var G__9972__i = 0, G__9972__a = new Array(arguments.length - 1);
          while (G__9972__i < G__9972__a.length) {
            G__9972__a[G__9972__i] = arguments[G__9972__i + 1];
            ++G__9972__i;
          }
          G__9971 = new cljs.core.IndexedSeq(G__9972__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9971);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__9975 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9975) : cljs.core.atom.call(null, G__9975);
  }();
  return function(mem) {
    return function() {
      var G__9977__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9976 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9976) : cljs.core.deref.call(null, G__9976);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__9977 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__9978__i = 0, G__9978__a = new Array(arguments.length - 0);
          while (G__9978__i < G__9978__a.length) {
            G__9978__a[G__9978__i] = arguments[G__9978__i + 0];
            ++G__9978__i;
          }
          args = new cljs.core.IndexedSeq(G__9978__a, 0);
        }
        return G__9977__delegate.call(this, args);
      };
      G__9977.cljs$lang$maxFixedArity = 0;
      G__9977.cljs$lang$applyTo = function(arglist__9979) {
        var args = cljs.core.seq(arglist__9979);
        return G__9977__delegate(args);
      };
      G__9977.cljs$core$IFn$_invoke$arity$variadic = G__9977__delegate;
      return G__9977;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__9981 = ret;
        f = G__9981;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__9982__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__9982 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__9983__i = 0, G__9983__a = new Array(arguments.length - 1);
        while (G__9983__i < G__9983__a.length) {
          G__9983__a[G__9983__i] = arguments[G__9983__i + 1];
          ++G__9983__i;
        }
        args = new cljs.core.IndexedSeq(G__9983__a, 0);
      }
      return G__9982__delegate.call(this, f, args);
    };
    G__9982.cljs$lang$maxFixedArity = 1;
    G__9982.cljs$lang$applyTo = function(arglist__9984) {
      var f = cljs.core.first(arglist__9984);
      var args = cljs.core.rest(arglist__9984);
      return G__9982__delegate(f, args);
    };
    G__9982.cljs$core$IFn$_invoke$arity$variadic = G__9982__delegate;
    return G__9982;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__9985 = null;
        if (arguments.length > 1) {
          var G__9986__i = 0, G__9986__a = new Array(arguments.length - 1);
          while (G__9986__i < G__9986__a.length) {
            G__9986__a[G__9986__i] = arguments[G__9986__i + 1];
            ++G__9986__i;
          }
          G__9985 = new cljs.core.IndexedSeq(G__9986__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9985);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__9989 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9989) : Math.floor.call(null, G__9989);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__9991 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9991) : f.call(null, G__9991);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__9993 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9993) : cljs.core.atom.call(null, G__9993);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__9994__i = 0, G__9994__a = new Array(arguments.length - 1);
      while (G__9994__i < G__9994__a.length) {
        G__9994__a[G__9994__i] = arguments[G__9994__i + 1];
        ++G__9994__i;
      }
      args = new cljs.core.IndexedSeq(G__9994__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__9995) {
    var f = cljs.core.first(arglist__9995);
    var args = cljs.core.rest(arglist__9995);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10060 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10060) : cljs.core.deref.call(null, G__10060);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3227__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3227__auto__) {
      return or__3227__auto__;
    } else {
      var or__3227__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3227__auto____$1) {
        return or__3227__auto____$1;
      } else {
        var and__3215__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3215__auto__) {
          var and__3215__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3215__auto____$1) {
            var and__3215__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3215__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__10085 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__10083 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10083) : child.call(null, G__10083);
                  }(), function() {
                    var G__10084 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10084) : parent.call(null, G__10084);
                  }());
                  var G__10086 = i + 1;
                  ret = G__10085;
                  i = G__10086;
                  continue;
                }
                break;
              }
            } else {
              return and__3215__auto____$2;
            }
          } else {
            return and__3215__auto____$1;
          }
        } else {
          return and__3215__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10090 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10090) : cljs.core.deref.call(null, G__10090);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10094 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10094) : cljs.core.deref.call(null, G__10094);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10098 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10098) : cljs.core.deref.call(null, G__10098);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__10107 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10107) : targets.call(null, G__10107);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__10108 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10108) : sources.call(null, G__10108);
        }()));
      };
    }(tp, td, ta);
    var or__3227__auto__ = cljs.core.contains_QMARK_(function() {
      var G__10112 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10112) : tp.call(null, G__10112);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__10113 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10113) : ta.call(null, G__10113);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__10114 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10114) : ta.call(null, G__10114);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__10121 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10121) : parentMap.call(null, G__10121);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10122 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10122) : parentMap.call(null, G__10122);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__10115_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__10115_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10115_SHARP_), cljs.core.second(p1__10115_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__10123 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10123) : parentMap.call(null, G__10123);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10116_SHARP_, p2__10117_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10116_SHARP_, p2__10117_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10126 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10126) : cljs.core.deref.call(null, G__10126);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10127 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10127) : cljs.core.deref.call(null, G__10127);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10143 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10143) : cljs.core.deref.call(null, G__10143);
  }().call(null, x);
  var or__3227__auto__ = cljs.core.truth_(function() {
    var and__3215__auto__ = xprefs;
    if (cljs.core.truth_(and__3215__auto__)) {
      var G__10145 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10145) : xprefs.call(null, G__10145);
    } else {
      return and__3215__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    var or__3227__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10146 = cljs.core.rest(ps);
          ps = G__10146;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3227__auto____$1)) {
      return or__3227__auto____$1;
    } else {
      var or__3227__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10147 = cljs.core.rest(ps);
            ps = G__10147;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3227__auto____$2)) {
        return or__3227__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3227__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10161) {
    var vec__10162 = p__10161;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10162, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10162, 1, null);
    var e = vec__10162;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10163 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10163) : cljs.core.deref.call(null, G__10163);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3227__auto__ = be == null;
        if (or__3227__auto__) {
          return or__3227__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10164 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10164) : cljs.core.deref.call(null, G__10164);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10165 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10165) : cljs.core.deref.call(null, G__10165);
    }(), function() {
      var G__10166 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10166) : cljs.core.deref.call(null, G__10166);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10168 = {};
  return obj10168;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._reset[function() {
        var G__10172 = x__3871__auto__;
        return goog.typeOf(G__10172);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._reset["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._add_method[function() {
        var G__10176 = x__3871__auto__;
        return goog.typeOf(G__10176);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._add_method["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._remove_method[function() {
        var G__10180 = x__3871__auto__;
        return goog.typeOf(G__10180);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._remove_method["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._prefer_method[function() {
        var G__10184 = x__3871__auto__;
        return goog.typeOf(G__10184);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._get_method[function() {
        var G__10188 = x__3871__auto__;
        return goog.typeOf(G__10188);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._get_method["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._methods[function() {
        var G__10192 = x__3871__auto__;
        return goog.typeOf(G__10192);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._methods["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3215__auto__ = mf;
    if (and__3215__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__3871__auto__ = mf == null ? null : mf;
    return function() {
      var or__3227__auto__ = cljs.core._prefers[function() {
        var G__10196 = x__3871__auto__;
        return goog.typeOf(G__10196);
      }()];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.core._prefers["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10198 = this$__$1;
  return goog.getUid(G__10198);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10199 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10199) : cljs.core.deref.call(null, G__10199);
  }(), function() {
    var G__10200 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10200) : cljs.core.deref.call(null, G__10200);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10201 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10201) : cljs.core.deref.call(null, G__10201);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10202 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10202) : cljs.core.deref.call(null, G__10202);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10203 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10203) : cljs.core.deref.call(null, G__10203);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10204 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10204) : cljs.core.deref.call(null, G__10204);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11045 = null;
  var G__11045__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11045__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10205 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10205) : self__.dispatch_fn.call(null, G__10205);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10206 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10206) : target_fn.call(null, G__10206);
  };
  var G__11045__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10207 = a;
      var G__10208 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10207, G__10208) : self__.dispatch_fn.call(null, G__10207, G__10208);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10209 = a;
    var G__10210 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10209, G__10210) : target_fn.call(null, G__10209, G__10210);
  };
  var G__11045__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10211 = a;
      var G__10212 = b;
      var G__10213 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10211, G__10212, G__10213) : self__.dispatch_fn.call(null, G__10211, G__10212, G__10213);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10214 = a;
    var G__10215 = b;
    var G__10216 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10214, G__10215, G__10216) : target_fn.call(null, G__10214, G__10215, G__10216);
  };
  var G__11045__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10217 = a;
      var G__10218 = b;
      var G__10219 = c;
      var G__10220 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10217, G__10218, G__10219, G__10220) : self__.dispatch_fn.call(null, G__10217, G__10218, G__10219, G__10220);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10221 = a;
    var G__10222 = b;
    var G__10223 = c;
    var G__10224 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10221, G__10222, G__10223, G__10224) : target_fn.call(null, G__10221, G__10222, G__10223, G__10224);
  };
  var G__11045__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10225 = a;
      var G__10226 = b;
      var G__10227 = c;
      var G__10228 = d;
      var G__10229 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10225, G__10226, G__10227, G__10228, G__10229) : self__.dispatch_fn.call(null, G__10225, G__10226, G__10227, G__10228, G__10229);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10230 = a;
    var G__10231 = b;
    var G__10232 = c;
    var G__10233 = d;
    var G__10234 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10230, G__10231, G__10232, G__10233, G__10234) : target_fn.call(null, G__10230, G__10231, G__10232, G__10233, G__10234);
  };
  var G__11045__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10235 = a;
      var G__10236 = b;
      var G__10237 = c;
      var G__10238 = d;
      var G__10239 = e;
      var G__10240 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10235, G__10236, G__10237, G__10238, G__10239, G__10240) : self__.dispatch_fn.call(null, G__10235, G__10236, G__10237, G__10238, G__10239, G__10240);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10241 = a;
    var G__10242 = b;
    var G__10243 = c;
    var G__10244 = d;
    var G__10245 = e;
    var G__10246 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10241, G__10242, G__10243, G__10244, G__10245, G__10246) : target_fn.call(null, G__10241, G__10242, G__10243, G__10244, G__10245, G__10246);
  };
  var G__11045__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10247 = a;
      var G__10248 = b;
      var G__10249 = c;
      var G__10250 = d;
      var G__10251 = e;
      var G__10252 = f;
      var G__10253 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10247, G__10248, G__10249, G__10250, G__10251, G__10252, G__10253) : self__.dispatch_fn.call(null, G__10247, G__10248, G__10249, G__10250, G__10251, G__10252, G__10253);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10254 = a;
    var G__10255 = b;
    var G__10256 = c;
    var G__10257 = d;
    var G__10258 = e;
    var G__10259 = f;
    var G__10260 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10254, G__10255, G__10256, G__10257, G__10258, G__10259, G__10260) : target_fn.call(null, G__10254, G__10255, G__10256, G__10257, G__10258, G__10259, G__10260);
  };
  var G__11045__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10261 = a;
      var G__10262 = b;
      var G__10263 = c;
      var G__10264 = d;
      var G__10265 = e;
      var G__10266 = f;
      var G__10267 = g;
      var G__10268 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10261, G__10262, G__10263, G__10264, G__10265, G__10266, G__10267, G__10268) : self__.dispatch_fn.call(null, G__10261, G__10262, G__10263, G__10264, G__10265, G__10266, G__10267, G__10268);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10269 = a;
    var G__10270 = b;
    var G__10271 = c;
    var G__10272 = d;
    var G__10273 = e;
    var G__10274 = f;
    var G__10275 = g;
    var G__10276 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10269, G__10270, G__10271, G__10272, G__10273, G__10274, G__10275, G__10276) : target_fn.call(null, G__10269, G__10270, G__10271, G__10272, G__10273, G__10274, G__10275, G__10276);
  };
  var G__11045__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10277 = a;
      var G__10278 = b;
      var G__10279 = c;
      var G__10280 = d;
      var G__10281 = e;
      var G__10282 = f;
      var G__10283 = g;
      var G__10284 = h;
      var G__10285 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10277, G__10278, G__10279, G__10280, G__10281, G__10282, G__10283, G__10284, G__10285) : self__.dispatch_fn.call(null, G__10277, G__10278, G__10279, G__10280, G__10281, G__10282, G__10283, G__10284, G__10285);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10286 = a;
    var G__10287 = b;
    var G__10288 = c;
    var G__10289 = d;
    var G__10290 = e;
    var G__10291 = f;
    var G__10292 = g;
    var G__10293 = h;
    var G__10294 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10286, G__10287, G__10288, G__10289, G__10290, G__10291, G__10292, G__10293, G__10294) : target_fn.call(null, G__10286, G__10287, G__10288, G__10289, G__10290, G__10291, G__10292, G__10293, G__10294);
  };
  var G__11045__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10295 = a;
      var G__10296 = b;
      var G__10297 = c;
      var G__10298 = d;
      var G__10299 = e;
      var G__10300 = f;
      var G__10301 = g;
      var G__10302 = h;
      var G__10303 = i;
      var G__10304 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10295, G__10296, G__10297, G__10298, G__10299, G__10300, G__10301, G__10302, G__10303, G__10304) : self__.dispatch_fn.call(null, G__10295, G__10296, G__10297, G__10298, G__10299, G__10300, G__10301, G__10302, G__10303, G__10304);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10305 = a;
    var G__10306 = b;
    var G__10307 = c;
    var G__10308 = d;
    var G__10309 = e;
    var G__10310 = f;
    var G__10311 = g;
    var G__10312 = h;
    var G__10313 = i;
    var G__10314 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10305, G__10306, G__10307, G__10308, G__10309, G__10310, G__10311, G__10312, G__10313, G__10314) : target_fn.call(null, G__10305, G__10306, G__10307, G__10308, G__10309, G__10310, G__10311, G__10312, G__10313, G__10314);
  };
  var G__11045__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10315 = a;
      var G__10316 = b;
      var G__10317 = c;
      var G__10318 = d;
      var G__10319 = e;
      var G__10320 = f;
      var G__10321 = g;
      var G__10322 = h;
      var G__10323 = i;
      var G__10324 = j;
      var G__10325 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10315, G__10316, G__10317, G__10318, G__10319, G__10320, G__10321, G__10322, G__10323, G__10324, G__10325) : self__.dispatch_fn.call(null, G__10315, G__10316, G__10317, G__10318, G__10319, G__10320, G__10321, G__10322, G__10323, G__10324, G__10325);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10326 = a;
    var G__10327 = b;
    var G__10328 = c;
    var G__10329 = d;
    var G__10330 = e;
    var G__10331 = f;
    var G__10332 = g;
    var G__10333 = h;
    var G__10334 = i;
    var G__10335 = j;
    var G__10336 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10326, G__10327, G__10328, G__10329, G__10330, G__10331, G__10332, G__10333, G__10334, G__10335, G__10336) : target_fn.call(null, G__10326, G__10327, G__10328, G__10329, G__10330, G__10331, G__10332, G__10333, G__10334, G__10335, G__10336);
  };
  var G__11045__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10337 = a;
      var G__10338 = b;
      var G__10339 = c;
      var G__10340 = d;
      var G__10341 = e;
      var G__10342 = f;
      var G__10343 = g;
      var G__10344 = h;
      var G__10345 = i;
      var G__10346 = j;
      var G__10347 = k;
      var G__10348 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10337, G__10338, G__10339, G__10340, G__10341, G__10342, G__10343, G__10344, G__10345, G__10346, G__10347, G__10348) : self__.dispatch_fn.call(null, G__10337, G__10338, G__10339, G__10340, G__10341, G__10342, G__10343, G__10344, G__10345, G__10346, G__10347, G__10348);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10349 = a;
    var G__10350 = b;
    var G__10351 = c;
    var G__10352 = d;
    var G__10353 = e;
    var G__10354 = f;
    var G__10355 = g;
    var G__10356 = h;
    var G__10357 = i;
    var G__10358 = j;
    var G__10359 = k;
    var G__10360 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10349, G__10350, G__10351, G__10352, G__10353, G__10354, G__10355, G__10356, G__10357, G__10358, G__10359, G__10360) : target_fn.call(null, G__10349, G__10350, G__10351, G__10352, G__10353, G__10354, G__10355, G__10356, G__10357, G__10358, G__10359, G__10360);
  };
  var G__11045__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10361 = a;
      var G__10362 = b;
      var G__10363 = c;
      var G__10364 = d;
      var G__10365 = e;
      var G__10366 = f;
      var G__10367 = g;
      var G__10368 = h;
      var G__10369 = i;
      var G__10370 = j;
      var G__10371 = k;
      var G__10372 = l;
      var G__10373 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10361, G__10362, G__10363, G__10364, G__10365, G__10366, G__10367, G__10368, G__10369, G__10370, G__10371, G__10372, G__10373) : self__.dispatch_fn.call(null, G__10361, G__10362, G__10363, G__10364, G__10365, G__10366, G__10367, G__10368, G__10369, G__10370, G__10371, G__10372, G__10373);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10374 = a;
    var G__10375 = b;
    var G__10376 = c;
    var G__10377 = d;
    var G__10378 = e;
    var G__10379 = f;
    var G__10380 = g;
    var G__10381 = h;
    var G__10382 = i;
    var G__10383 = j;
    var G__10384 = k;
    var G__10385 = l;
    var G__10386 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10374, G__10375, G__10376, G__10377, G__10378, G__10379, G__10380, G__10381, G__10382, G__10383, G__10384, G__10385, G__10386) : target_fn.call(null, G__10374, G__10375, G__10376, G__10377, G__10378, G__10379, G__10380, G__10381, G__10382, G__10383, G__10384, G__10385, G__10386);
  };
  var G__11045__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10387 = a;
      var G__10388 = b;
      var G__10389 = c;
      var G__10390 = d;
      var G__10391 = e;
      var G__10392 = f;
      var G__10393 = g;
      var G__10394 = h;
      var G__10395 = i;
      var G__10396 = j;
      var G__10397 = k;
      var G__10398 = l;
      var G__10399 = m;
      var G__10400 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10387, G__10388, G__10389, G__10390, G__10391, G__10392, G__10393, G__10394, G__10395, G__10396, G__10397, G__10398, G__10399, G__10400) : self__.dispatch_fn.call(null, G__10387, G__10388, G__10389, G__10390, G__10391, G__10392, G__10393, G__10394, G__10395, G__10396, G__10397, G__10398, G__10399, G__10400);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10401 = a;
    var G__10402 = b;
    var G__10403 = c;
    var G__10404 = d;
    var G__10405 = e;
    var G__10406 = f;
    var G__10407 = g;
    var G__10408 = h;
    var G__10409 = i;
    var G__10410 = j;
    var G__10411 = k;
    var G__10412 = l;
    var G__10413 = m;
    var G__10414 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10401, G__10402, G__10403, G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410, G__10411, G__10412, G__10413, G__10414) : target_fn.call(null, G__10401, G__10402, G__10403, G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410, G__10411, G__10412, G__10413, G__10414);
  };
  var G__11045__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10415 = a;
      var G__10416 = b;
      var G__10417 = c;
      var G__10418 = d;
      var G__10419 = e;
      var G__10420 = f;
      var G__10421 = g;
      var G__10422 = h;
      var G__10423 = i;
      var G__10424 = j;
      var G__10425 = k;
      var G__10426 = l;
      var G__10427 = m;
      var G__10428 = n;
      var G__10429 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10415, G__10416, G__10417, G__10418, G__10419, G__10420, G__10421, G__10422, G__10423, G__10424, G__10425, G__10426, G__10427, G__10428, G__10429) : self__.dispatch_fn.call(null, G__10415, G__10416, G__10417, G__10418, G__10419, G__10420, G__10421, G__10422, G__10423, G__10424, G__10425, G__10426, G__10427, G__10428, G__10429);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10430 = a;
    var G__10431 = b;
    var G__10432 = c;
    var G__10433 = d;
    var G__10434 = e;
    var G__10435 = f;
    var G__10436 = g;
    var G__10437 = h;
    var G__10438 = i;
    var G__10439 = j;
    var G__10440 = k;
    var G__10441 = l;
    var G__10442 = m;
    var G__10443 = n;
    var G__10444 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10430, G__10431, G__10432, G__10433, G__10434, G__10435, G__10436, G__10437, G__10438, G__10439, G__10440, G__10441, G__10442, G__10443, G__10444) : target_fn.call(null, G__10430, G__10431, G__10432, G__10433, G__10434, G__10435, G__10436, G__10437, G__10438, G__10439, G__10440, G__10441, G__10442, G__10443, G__10444);
  };
  var G__11045__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10445 = a;
      var G__10446 = b;
      var G__10447 = c;
      var G__10448 = d;
      var G__10449 = e;
      var G__10450 = f;
      var G__10451 = g;
      var G__10452 = h;
      var G__10453 = i;
      var G__10454 = j;
      var G__10455 = k;
      var G__10456 = l;
      var G__10457 = m;
      var G__10458 = n;
      var G__10459 = o;
      var G__10460 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10445, G__10446, G__10447, G__10448, G__10449, G__10450, G__10451, G__10452, G__10453, G__10454, G__10455, G__10456, G__10457, G__10458, G__10459, G__10460) : self__.dispatch_fn.call(null, G__10445, G__10446, G__10447, G__10448, G__10449, G__10450, G__10451, G__10452, G__10453, G__10454, G__10455, G__10456, G__10457, G__10458, G__10459, G__10460);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10461 = a;
    var G__10462 = b;
    var G__10463 = c;
    var G__10464 = d;
    var G__10465 = e;
    var G__10466 = f;
    var G__10467 = g;
    var G__10468 = h;
    var G__10469 = i;
    var G__10470 = j;
    var G__10471 = k;
    var G__10472 = l;
    var G__10473 = m;
    var G__10474 = n;
    var G__10475 = o;
    var G__10476 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10461, G__10462, G__10463, G__10464, G__10465, G__10466, G__10467, G__10468, G__10469, G__10470, G__10471, G__10472, G__10473, G__10474, G__10475, G__10476) : target_fn.call(null, G__10461, G__10462, G__10463, G__10464, G__10465, G__10466, G__10467, G__10468, G__10469, G__10470, G__10471, G__10472, G__10473, G__10474, G__10475, G__10476);
  };
  var G__11045__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10477 = a;
      var G__10478 = b;
      var G__10479 = c;
      var G__10480 = d;
      var G__10481 = e;
      var G__10482 = f;
      var G__10483 = g;
      var G__10484 = h;
      var G__10485 = i;
      var G__10486 = j;
      var G__10487 = k;
      var G__10488 = l;
      var G__10489 = m;
      var G__10490 = n;
      var G__10491 = o;
      var G__10492 = p;
      var G__10493 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10477, G__10478, G__10479, G__10480, G__10481, G__10482, G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492, G__10493) : self__.dispatch_fn.call(null, G__10477, G__10478, G__10479, G__10480, G__10481, G__10482, G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492, G__10493);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10494 = a;
    var G__10495 = b;
    var G__10496 = c;
    var G__10497 = d;
    var G__10498 = e;
    var G__10499 = f;
    var G__10500 = g;
    var G__10501 = h;
    var G__10502 = i;
    var G__10503 = j;
    var G__10504 = k;
    var G__10505 = l;
    var G__10506 = m;
    var G__10507 = n;
    var G__10508 = o;
    var G__10509 = p;
    var G__10510 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505, G__10506, G__10507, G__10508, G__10509, G__10510) : target_fn.call(null, G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505, G__10506, G__10507, G__10508, G__10509, G__10510);
  };
  var G__11045__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10511 = a;
      var G__10512 = b;
      var G__10513 = c;
      var G__10514 = d;
      var G__10515 = e;
      var G__10516 = f;
      var G__10517 = g;
      var G__10518 = h;
      var G__10519 = i;
      var G__10520 = j;
      var G__10521 = k;
      var G__10522 = l;
      var G__10523 = m;
      var G__10524 = n;
      var G__10525 = o;
      var G__10526 = p;
      var G__10527 = q;
      var G__10528 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517, G__10518, G__10519, G__10520, G__10521, G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528) : self__.dispatch_fn.call(null, G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517, G__10518, G__10519, G__10520, G__10521, G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10529 = a;
    var G__10530 = b;
    var G__10531 = c;
    var G__10532 = d;
    var G__10533 = e;
    var G__10534 = f;
    var G__10535 = g;
    var G__10536 = h;
    var G__10537 = i;
    var G__10538 = j;
    var G__10539 = k;
    var G__10540 = l;
    var G__10541 = m;
    var G__10542 = n;
    var G__10543 = o;
    var G__10544 = p;
    var G__10545 = q;
    var G__10546 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10529, G__10530, G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537, G__10538, G__10539, G__10540, G__10541, G__10542, G__10543, G__10544, G__10545, G__10546) : target_fn.call(null, G__10529, G__10530, G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537, G__10538, G__10539, G__10540, G__10541, G__10542, G__10543, G__10544, G__10545, G__10546);
  };
  var G__11045__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10547 = a;
      var G__10548 = b;
      var G__10549 = c;
      var G__10550 = d;
      var G__10551 = e;
      var G__10552 = f;
      var G__10553 = g;
      var G__10554 = h;
      var G__10555 = i;
      var G__10556 = j;
      var G__10557 = k;
      var G__10558 = l;
      var G__10559 = m;
      var G__10560 = n;
      var G__10561 = o;
      var G__10562 = p;
      var G__10563 = q;
      var G__10564 = r;
      var G__10565 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554, G__10555, G__10556, G__10557, G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, G__10564, G__10565) : self__.dispatch_fn.call(null, G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554, G__10555, G__10556, G__10557, G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, 
      G__10564, G__10565);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10566 = a;
    var G__10567 = b;
    var G__10568 = c;
    var G__10569 = d;
    var G__10570 = e;
    var G__10571 = f;
    var G__10572 = g;
    var G__10573 = h;
    var G__10574 = i;
    var G__10575 = j;
    var G__10576 = k;
    var G__10577 = l;
    var G__10578 = m;
    var G__10579 = n;
    var G__10580 = o;
    var G__10581 = p;
    var G__10582 = q;
    var G__10583 = r;
    var G__10584 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10566, G__10567, G__10568, G__10569, G__10570, G__10571, G__10572, G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584) : target_fn.call(null, G__10566, G__10567, G__10568, G__10569, G__10570, G__10571, G__10572, G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584);
  };
  var G__11045__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10585 = a;
      var G__10586 = b;
      var G__10587 = c;
      var G__10588 = d;
      var G__10589 = e;
      var G__10590 = f;
      var G__10591 = g;
      var G__10592 = h;
      var G__10593 = i;
      var G__10594 = j;
      var G__10595 = k;
      var G__10596 = l;
      var G__10597 = m;
      var G__10598 = n;
      var G__10599 = o;
      var G__10600 = p;
      var G__10601 = q;
      var G__10602 = r;
      var G__10603 = s;
      var G__10604 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10585, G__10586, G__10587, G__10588, G__10589, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604) : self__.dispatch_fn.call(null, G__10585, G__10586, G__10587, G__10588, G__10589, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, 
      G__10601, G__10602, G__10603, G__10604);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10605 = a;
    var G__10606 = b;
    var G__10607 = c;
    var G__10608 = d;
    var G__10609 = e;
    var G__10610 = f;
    var G__10611 = g;
    var G__10612 = h;
    var G__10613 = i;
    var G__10614 = j;
    var G__10615 = k;
    var G__10616 = l;
    var G__10617 = m;
    var G__10618 = n;
    var G__10619 = o;
    var G__10620 = p;
    var G__10621 = q;
    var G__10622 = r;
    var G__10623 = s;
    var G__10624 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624) : target_fn.call(null, G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, 
    G__10624);
  };
  var G__11045__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11045 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11045__1.call(this, self__);
      case 2:
        return G__11045__2.call(this, self__, a);
      case 3:
        return G__11045__3.call(this, self__, a, b);
      case 4:
        return G__11045__4.call(this, self__, a, b, c);
      case 5:
        return G__11045__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11045__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11045__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11045__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11045__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11045__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11045__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11045__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11045__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11045__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11045__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11045__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11045__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11045__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11045__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11045__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11045__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11045__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11045.cljs$core$IFn$_invoke$arity$1 = G__11045__1;
  G__11045.cljs$core$IFn$_invoke$arity$2 = G__11045__2;
  G__11045.cljs$core$IFn$_invoke$arity$3 = G__11045__3;
  G__11045.cljs$core$IFn$_invoke$arity$4 = G__11045__4;
  G__11045.cljs$core$IFn$_invoke$arity$5 = G__11045__5;
  G__11045.cljs$core$IFn$_invoke$arity$6 = G__11045__6;
  G__11045.cljs$core$IFn$_invoke$arity$7 = G__11045__7;
  G__11045.cljs$core$IFn$_invoke$arity$8 = G__11045__8;
  G__11045.cljs$core$IFn$_invoke$arity$9 = G__11045__9;
  G__11045.cljs$core$IFn$_invoke$arity$10 = G__11045__10;
  G__11045.cljs$core$IFn$_invoke$arity$11 = G__11045__11;
  G__11045.cljs$core$IFn$_invoke$arity$12 = G__11045__12;
  G__11045.cljs$core$IFn$_invoke$arity$13 = G__11045__13;
  G__11045.cljs$core$IFn$_invoke$arity$14 = G__11045__14;
  G__11045.cljs$core$IFn$_invoke$arity$15 = G__11045__15;
  G__11045.cljs$core$IFn$_invoke$arity$16 = G__11045__16;
  G__11045.cljs$core$IFn$_invoke$arity$17 = G__11045__17;
  G__11045.cljs$core$IFn$_invoke$arity$18 = G__11045__18;
  G__11045.cljs$core$IFn$_invoke$arity$19 = G__11045__19;
  G__11045.cljs$core$IFn$_invoke$arity$20 = G__11045__20;
  G__11045.cljs$core$IFn$_invoke$arity$21 = G__11045__21;
  G__11045.cljs$core$IFn$_invoke$arity$22 = G__11045__22;
  return G__11045;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10197) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10197)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10625 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10625) : self__.dispatch_fn.call(null, G__10625);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10626 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10626) : target_fn.call(null, G__10626);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10627 = a;
    var G__10628 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10627, G__10628) : self__.dispatch_fn.call(null, G__10627, G__10628);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10629 = a;
  var G__10630 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10629, G__10630) : target_fn.call(null, G__10629, G__10630);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10631 = a;
    var G__10632 = b;
    var G__10633 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10631, G__10632, G__10633) : self__.dispatch_fn.call(null, G__10631, G__10632, G__10633);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10634 = a;
  var G__10635 = b;
  var G__10636 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10634, G__10635, G__10636) : target_fn.call(null, G__10634, G__10635, G__10636);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10637 = a;
    var G__10638 = b;
    var G__10639 = c;
    var G__10640 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10637, G__10638, G__10639, G__10640) : self__.dispatch_fn.call(null, G__10637, G__10638, G__10639, G__10640);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10641 = a;
  var G__10642 = b;
  var G__10643 = c;
  var G__10644 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10641, G__10642, G__10643, G__10644) : target_fn.call(null, G__10641, G__10642, G__10643, G__10644);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10645 = a;
    var G__10646 = b;
    var G__10647 = c;
    var G__10648 = d;
    var G__10649 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10645, G__10646, G__10647, G__10648, G__10649) : self__.dispatch_fn.call(null, G__10645, G__10646, G__10647, G__10648, G__10649);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10650 = a;
  var G__10651 = b;
  var G__10652 = c;
  var G__10653 = d;
  var G__10654 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10650, G__10651, G__10652, G__10653, G__10654) : target_fn.call(null, G__10650, G__10651, G__10652, G__10653, G__10654);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10655 = a;
    var G__10656 = b;
    var G__10657 = c;
    var G__10658 = d;
    var G__10659 = e;
    var G__10660 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10655, G__10656, G__10657, G__10658, G__10659, G__10660) : self__.dispatch_fn.call(null, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10661 = a;
  var G__10662 = b;
  var G__10663 = c;
  var G__10664 = d;
  var G__10665 = e;
  var G__10666 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10661, G__10662, G__10663, G__10664, G__10665, G__10666) : target_fn.call(null, G__10661, G__10662, G__10663, G__10664, G__10665, G__10666);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10667 = a;
    var G__10668 = b;
    var G__10669 = c;
    var G__10670 = d;
    var G__10671 = e;
    var G__10672 = f;
    var G__10673 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10667, G__10668, G__10669, G__10670, G__10671, G__10672, G__10673) : self__.dispatch_fn.call(null, G__10667, G__10668, G__10669, G__10670, G__10671, G__10672, G__10673);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10674 = a;
  var G__10675 = b;
  var G__10676 = c;
  var G__10677 = d;
  var G__10678 = e;
  var G__10679 = f;
  var G__10680 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680) : target_fn.call(null, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10681 = a;
    var G__10682 = b;
    var G__10683 = c;
    var G__10684 = d;
    var G__10685 = e;
    var G__10686 = f;
    var G__10687 = g;
    var G__10688 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688) : self__.dispatch_fn.call(null, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10689 = a;
  var G__10690 = b;
  var G__10691 = c;
  var G__10692 = d;
  var G__10693 = e;
  var G__10694 = f;
  var G__10695 = g;
  var G__10696 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696) : target_fn.call(null, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10697 = a;
    var G__10698 = b;
    var G__10699 = c;
    var G__10700 = d;
    var G__10701 = e;
    var G__10702 = f;
    var G__10703 = g;
    var G__10704 = h;
    var G__10705 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705) : self__.dispatch_fn.call(null, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10706 = a;
  var G__10707 = b;
  var G__10708 = c;
  var G__10709 = d;
  var G__10710 = e;
  var G__10711 = f;
  var G__10712 = g;
  var G__10713 = h;
  var G__10714 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714) : target_fn.call(null, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10715 = a;
    var G__10716 = b;
    var G__10717 = c;
    var G__10718 = d;
    var G__10719 = e;
    var G__10720 = f;
    var G__10721 = g;
    var G__10722 = h;
    var G__10723 = i;
    var G__10724 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724) : self__.dispatch_fn.call(null, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10725 = a;
  var G__10726 = b;
  var G__10727 = c;
  var G__10728 = d;
  var G__10729 = e;
  var G__10730 = f;
  var G__10731 = g;
  var G__10732 = h;
  var G__10733 = i;
  var G__10734 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734) : target_fn.call(null, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10735 = a;
    var G__10736 = b;
    var G__10737 = c;
    var G__10738 = d;
    var G__10739 = e;
    var G__10740 = f;
    var G__10741 = g;
    var G__10742 = h;
    var G__10743 = i;
    var G__10744 = j;
    var G__10745 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745) : self__.dispatch_fn.call(null, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10746 = a;
  var G__10747 = b;
  var G__10748 = c;
  var G__10749 = d;
  var G__10750 = e;
  var G__10751 = f;
  var G__10752 = g;
  var G__10753 = h;
  var G__10754 = i;
  var G__10755 = j;
  var G__10756 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756) : target_fn.call(null, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10757 = a;
    var G__10758 = b;
    var G__10759 = c;
    var G__10760 = d;
    var G__10761 = e;
    var G__10762 = f;
    var G__10763 = g;
    var G__10764 = h;
    var G__10765 = i;
    var G__10766 = j;
    var G__10767 = k;
    var G__10768 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768) : self__.dispatch_fn.call(null, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10769 = a;
  var G__10770 = b;
  var G__10771 = c;
  var G__10772 = d;
  var G__10773 = e;
  var G__10774 = f;
  var G__10775 = g;
  var G__10776 = h;
  var G__10777 = i;
  var G__10778 = j;
  var G__10779 = k;
  var G__10780 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780) : target_fn.call(null, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10781 = a;
    var G__10782 = b;
    var G__10783 = c;
    var G__10784 = d;
    var G__10785 = e;
    var G__10786 = f;
    var G__10787 = g;
    var G__10788 = h;
    var G__10789 = i;
    var G__10790 = j;
    var G__10791 = k;
    var G__10792 = l;
    var G__10793 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793) : self__.dispatch_fn.call(null, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10794 = a;
  var G__10795 = b;
  var G__10796 = c;
  var G__10797 = d;
  var G__10798 = e;
  var G__10799 = f;
  var G__10800 = g;
  var G__10801 = h;
  var G__10802 = i;
  var G__10803 = j;
  var G__10804 = k;
  var G__10805 = l;
  var G__10806 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806) : target_fn.call(null, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10807 = a;
    var G__10808 = b;
    var G__10809 = c;
    var G__10810 = d;
    var G__10811 = e;
    var G__10812 = f;
    var G__10813 = g;
    var G__10814 = h;
    var G__10815 = i;
    var G__10816 = j;
    var G__10817 = k;
    var G__10818 = l;
    var G__10819 = m;
    var G__10820 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820) : self__.dispatch_fn.call(null, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10821 = a;
  var G__10822 = b;
  var G__10823 = c;
  var G__10824 = d;
  var G__10825 = e;
  var G__10826 = f;
  var G__10827 = g;
  var G__10828 = h;
  var G__10829 = i;
  var G__10830 = j;
  var G__10831 = k;
  var G__10832 = l;
  var G__10833 = m;
  var G__10834 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834) : target_fn.call(null, G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10835 = a;
    var G__10836 = b;
    var G__10837 = c;
    var G__10838 = d;
    var G__10839 = e;
    var G__10840 = f;
    var G__10841 = g;
    var G__10842 = h;
    var G__10843 = i;
    var G__10844 = j;
    var G__10845 = k;
    var G__10846 = l;
    var G__10847 = m;
    var G__10848 = n;
    var G__10849 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849) : self__.dispatch_fn.call(null, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10850 = a;
  var G__10851 = b;
  var G__10852 = c;
  var G__10853 = d;
  var G__10854 = e;
  var G__10855 = f;
  var G__10856 = g;
  var G__10857 = h;
  var G__10858 = i;
  var G__10859 = j;
  var G__10860 = k;
  var G__10861 = l;
  var G__10862 = m;
  var G__10863 = n;
  var G__10864 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864) : target_fn.call(null, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10865 = a;
    var G__10866 = b;
    var G__10867 = c;
    var G__10868 = d;
    var G__10869 = e;
    var G__10870 = f;
    var G__10871 = g;
    var G__10872 = h;
    var G__10873 = i;
    var G__10874 = j;
    var G__10875 = k;
    var G__10876 = l;
    var G__10877 = m;
    var G__10878 = n;
    var G__10879 = o;
    var G__10880 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880) : self__.dispatch_fn.call(null, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10881 = a;
  var G__10882 = b;
  var G__10883 = c;
  var G__10884 = d;
  var G__10885 = e;
  var G__10886 = f;
  var G__10887 = g;
  var G__10888 = h;
  var G__10889 = i;
  var G__10890 = j;
  var G__10891 = k;
  var G__10892 = l;
  var G__10893 = m;
  var G__10894 = n;
  var G__10895 = o;
  var G__10896 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896) : target_fn.call(null, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10897 = a;
    var G__10898 = b;
    var G__10899 = c;
    var G__10900 = d;
    var G__10901 = e;
    var G__10902 = f;
    var G__10903 = g;
    var G__10904 = h;
    var G__10905 = i;
    var G__10906 = j;
    var G__10907 = k;
    var G__10908 = l;
    var G__10909 = m;
    var G__10910 = n;
    var G__10911 = o;
    var G__10912 = p;
    var G__10913 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913) : self__.dispatch_fn.call(null, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10914 = a;
  var G__10915 = b;
  var G__10916 = c;
  var G__10917 = d;
  var G__10918 = e;
  var G__10919 = f;
  var G__10920 = g;
  var G__10921 = h;
  var G__10922 = i;
  var G__10923 = j;
  var G__10924 = k;
  var G__10925 = l;
  var G__10926 = m;
  var G__10927 = n;
  var G__10928 = o;
  var G__10929 = p;
  var G__10930 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930) : target_fn.call(null, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10931 = a;
    var G__10932 = b;
    var G__10933 = c;
    var G__10934 = d;
    var G__10935 = e;
    var G__10936 = f;
    var G__10937 = g;
    var G__10938 = h;
    var G__10939 = i;
    var G__10940 = j;
    var G__10941 = k;
    var G__10942 = l;
    var G__10943 = m;
    var G__10944 = n;
    var G__10945 = o;
    var G__10946 = p;
    var G__10947 = q;
    var G__10948 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948) : self__.dispatch_fn.call(null, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10949 = a;
  var G__10950 = b;
  var G__10951 = c;
  var G__10952 = d;
  var G__10953 = e;
  var G__10954 = f;
  var G__10955 = g;
  var G__10956 = h;
  var G__10957 = i;
  var G__10958 = j;
  var G__10959 = k;
  var G__10960 = l;
  var G__10961 = m;
  var G__10962 = n;
  var G__10963 = o;
  var G__10964 = p;
  var G__10965 = q;
  var G__10966 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966) : target_fn.call(null, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10967 = a;
    var G__10968 = b;
    var G__10969 = c;
    var G__10970 = d;
    var G__10971 = e;
    var G__10972 = f;
    var G__10973 = g;
    var G__10974 = h;
    var G__10975 = i;
    var G__10976 = j;
    var G__10977 = k;
    var G__10978 = l;
    var G__10979 = m;
    var G__10980 = n;
    var G__10981 = o;
    var G__10982 = p;
    var G__10983 = q;
    var G__10984 = r;
    var G__10985 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985) : self__.dispatch_fn.call(null, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, 
    G__10984, G__10985);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10986 = a;
  var G__10987 = b;
  var G__10988 = c;
  var G__10989 = d;
  var G__10990 = e;
  var G__10991 = f;
  var G__10992 = g;
  var G__10993 = h;
  var G__10994 = i;
  var G__10995 = j;
  var G__10996 = k;
  var G__10997 = l;
  var G__10998 = m;
  var G__10999 = n;
  var G__11000 = o;
  var G__11001 = p;
  var G__11002 = q;
  var G__11003 = r;
  var G__11004 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004) : target_fn.call(null, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11005 = a;
    var G__11006 = b;
    var G__11007 = c;
    var G__11008 = d;
    var G__11009 = e;
    var G__11010 = f;
    var G__11011 = g;
    var G__11012 = h;
    var G__11013 = i;
    var G__11014 = j;
    var G__11015 = k;
    var G__11016 = l;
    var G__11017 = m;
    var G__11018 = n;
    var G__11019 = o;
    var G__11020 = p;
    var G__11021 = q;
    var G__11022 = r;
    var G__11023 = s;
    var G__11024 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021, G__11022, G__11023, G__11024) : self__.dispatch_fn.call(null, G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, 
    G__11021, G__11022, G__11023, G__11024);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11025 = a;
  var G__11026 = b;
  var G__11027 = c;
  var G__11028 = d;
  var G__11029 = e;
  var G__11030 = f;
  var G__11031 = g;
  var G__11032 = h;
  var G__11033 = i;
  var G__11034 = j;
  var G__11035 = k;
  var G__11036 = l;
  var G__11037 = m;
  var G__11038 = n;
  var G__11039 = o;
  var G__11040 = p;
  var G__11041 = q;
  var G__11042 = r;
  var G__11043 = s;
  var G__11044 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043, G__11044) : target_fn.call(null, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043, 
  G__11044);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11046 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11046);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write(writer__3815__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__11051 = msg;
      return Error(G__11051);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11056 = x;
      var G__11057 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11056, G__11057) : pred.call(null, G__11056, G__11057);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11058 = y;
        var G__11059 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11058, G__11059) : pred.call(null, G__11058, G__11059);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__11127 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__11128 = cljs.core.next.call(null, coll__$1);
        sb = G__11127;
        coll__$1 = G__11128;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__11129 = sb;
        var G__11130 = coll__$2;
        sb = G__11129;
        coll__$1 = G__11130;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__11131 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11131;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__11135 = cljs.core._EQ_;
    var expr__11136 = limit;
    if (cljs.core.truth_(pred__11135.call(null, 1, expr__11136))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__11135.call(null, 2, expr__11136))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__11138 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__11139 = limit__$1 - 1;
            var G__11140 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__11138;
            limit__$1 = G__11139;
            parts = G__11140;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__11141 = index - 1;
        index = G__11141;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___11142 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___11142)) {
        var replacement_11143 = temp__4124__auto___11142;
        buffer.append([cljs.core.str(replacement_11143)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__11144 = index + 1;
      index = G__11144;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj4614 = {};
  return obj4614;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3215__auto__ = reader;
    if (and__3215__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__3871__auto__ = reader == null ? null : reader;
    return function() {
      var or__3227__auto__ = cljs.reader.read_char[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.reader.read_char["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3215__auto__ = reader;
    if (and__3215__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__3871__auto__ = reader == null ? null : reader;
    return function() {
      var or__3227__auto__ = cljs.reader.unread[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.reader.unread["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write.call(null, writer__3815__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3227__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__4615__i = 0, G__4615__a = new Array(arguments.length - 1);
      while (G__4615__i < G__4615__a.length) {
        G__4615__a[G__4615__i] = arguments[G__4615__i + 1];
        ++G__4615__i;
      }
      msg = new cljs.core.IndexedSeq(G__4615__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__4616) {
    var rdr = cljs.core.first(arglist__4616);
    var msg = cljs.core.rest(arglist__4616);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3215__auto__ = !(ch === "#");
  if (and__3215__auto__) {
    var and__3215__auto____$1 = !(ch === "'");
    if (and__3215__auto____$1) {
      var and__3215__auto____$2 = !(ch === ":");
      if (and__3215__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3215__auto____$2;
      }
    } else {
      return and__3215__auto____$1;
    }
  } else {
    return and__3215__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__4617 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__4618 = cljs.reader.read_char.call(null, rdr);
      sb = G__4617;
      ch = G__4618;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__4619 = cljs.reader.read_char.call(null, rdr);
      ch = G__4619;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__4620 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__4620;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__4621 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__4621;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3227__auto__ = ch == null;
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3227__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__4622 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__4623 = cljs.reader.read_char.call(null, reader);
      buffer = G__4622;
      ch = G__4623;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__4624 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__4625 = cljs.reader.read_char.call(null, reader);
        buffer = G__4624;
        ch = G__4625;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__4626 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__4627 = cljs.reader.read_char.call(null, reader);
          buffer = G__4626;
          ch = G__4627;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__4632 = function() {
            var G__4630 = buffer;
            G__4630.append(nch);
            return G__4630;
          }();
          var G__4633 = cljs.reader.read_char.call(null, reader);
          buffer = G__4632;
          ch = G__4633;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__4634 = function() {
            var G__4631 = buffer;
            G__4631.append(ch);
            return G__4631;
          }();
          var G__4635 = cljs.reader.read_char.call(null, reader);
          buffer = G__4634;
          ch = G__4635;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__3215__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__3215__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3215__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__4637 = o;
    if (G__4637) {
      var bit__3908__auto__ = G__4637.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__3908__auto__ || G__4637.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__4637.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__4637);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__4637);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__4638 = reader;
        var G__4639 = eof_is_error;
        var G__4640 = sentinel;
        var G__4641 = is_recursive;
        reader = G__4638;
        eof_is_error = G__4639;
        sentinel = G__4640;
        is_recursive = G__4641;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__4642 = cljs.reader.read_comment.call(null, reader, ch);
          var G__4643 = eof_is_error;
          var G__4644 = sentinel;
          var G__4645 = is_recursive;
          reader = G__4642;
          eof_is_error = G__4643;
          sentinel = G__4644;
          is_recursive = G__4645;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__4646 = reader;
            var G__4647 = eof_is_error;
            var G__4648 = sentinel;
            var G__4649 = is_recursive;
            reader = G__4646;
            eof_is_error = G__4647;
            sentinel = G__4648;
            is_recursive = G__4649;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__4650 = b.append("0");
          b = G__4650;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__4652 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__4652, 0, null);
  var years = cljs.core.nth.call(null, vec__4652, 1, null);
  var months = cljs.core.nth.call(null, vec__4652, 2, null);
  var days = cljs.core.nth.call(null, vec__4652, 3, null);
  var hours = cljs.core.nth.call(null, vec__4652, 4, null);
  var minutes = cljs.core.nth.call(null, vec__4652, 5, null);
  var seconds = cljs.core.nth.call(null, vec__4652, 6, null);
  var fraction = cljs.core.nth.call(null, vec__4652, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__4652, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__4652, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__4652, 10, null);
  var v = vec__4652;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3227__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__4654 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__4654, 0, null);
    var months = cljs.core.nth.call(null, vec__4654, 1, null);
    var days = cljs.core.nth.call(null, vec__4654, 2, null);
    var hours = cljs.core.nth.call(null, vec__4654, 3, null);
    var minutes = cljs.core.nth.call(null, vec__4654, 4, null);
    var seconds = cljs.core.nth.call(null, vec__4654, 5, null);
    var ms = cljs.core.nth.call(null, vec__4654, 6, null);
    var offset = cljs.core.nth.call(null, vec__4654, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__4667_4679 = cljs.core.seq.call(null, form);
    var chunk__4668_4680 = null;
    var count__4669_4681 = 0;
    var i__4670_4682 = 0;
    while (true) {
      if (i__4670_4682 < count__4669_4681) {
        var x_4683 = cljs.core._nth.call(null, chunk__4668_4680, i__4670_4682);
        arr.push(x_4683);
        var G__4684 = seq__4667_4679;
        var G__4685 = chunk__4668_4680;
        var G__4686 = count__4669_4681;
        var G__4687 = i__4670_4682 + 1;
        seq__4667_4679 = G__4684;
        chunk__4668_4680 = G__4685;
        count__4669_4681 = G__4686;
        i__4670_4682 = G__4687;
        continue;
      } else {
        var temp__4126__auto___4688 = cljs.core.seq.call(null, seq__4667_4679);
        if (temp__4126__auto___4688) {
          var seq__4667_4689__$1 = temp__4126__auto___4688;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__4667_4689__$1)) {
            var c__4014__auto___4690 = cljs.core.chunk_first.call(null, seq__4667_4689__$1);
            var G__4691 = cljs.core.chunk_rest.call(null, seq__4667_4689__$1);
            var G__4692 = c__4014__auto___4690;
            var G__4693 = cljs.core.count.call(null, c__4014__auto___4690);
            var G__4694 = 0;
            seq__4667_4679 = G__4691;
            chunk__4668_4680 = G__4692;
            count__4669_4681 = G__4693;
            i__4670_4682 = G__4694;
            continue;
          } else {
            var x_4695 = cljs.core.first.call(null, seq__4667_4689__$1);
            arr.push(x_4695);
            var G__4696 = cljs.core.next.call(null, seq__4667_4689__$1);
            var G__4697 = null;
            var G__4698 = 0;
            var G__4699 = 0;
            seq__4667_4679 = G__4696;
            chunk__4668_4680 = G__4697;
            count__4669_4681 = G__4698;
            i__4670_4682 = G__4699;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj4672 = {};
        return obj4672;
      }();
      var seq__4673_4700 = cljs.core.seq.call(null, form);
      var chunk__4674_4701 = null;
      var count__4675_4702 = 0;
      var i__4676_4703 = 0;
      while (true) {
        if (i__4676_4703 < count__4675_4702) {
          var vec__4677_4704 = cljs.core._nth.call(null, chunk__4674_4701, i__4676_4703);
          var k_4705 = cljs.core.nth.call(null, vec__4677_4704, 0, null);
          var v_4706 = cljs.core.nth.call(null, vec__4677_4704, 1, null);
          obj[cljs.core.name.call(null, k_4705)] = v_4706;
          var G__4707 = seq__4673_4700;
          var G__4708 = chunk__4674_4701;
          var G__4709 = count__4675_4702;
          var G__4710 = i__4676_4703 + 1;
          seq__4673_4700 = G__4707;
          chunk__4674_4701 = G__4708;
          count__4675_4702 = G__4709;
          i__4676_4703 = G__4710;
          continue;
        } else {
          var temp__4126__auto___4711 = cljs.core.seq.call(null, seq__4673_4700);
          if (temp__4126__auto___4711) {
            var seq__4673_4712__$1 = temp__4126__auto___4711;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__4673_4712__$1)) {
              var c__4014__auto___4713 = cljs.core.chunk_first.call(null, seq__4673_4712__$1);
              var G__4714 = cljs.core.chunk_rest.call(null, seq__4673_4712__$1);
              var G__4715 = c__4014__auto___4713;
              var G__4716 = cljs.core.count.call(null, c__4014__auto___4713);
              var G__4717 = 0;
              seq__4673_4700 = G__4714;
              chunk__4674_4701 = G__4715;
              count__4675_4702 = G__4716;
              i__4676_4703 = G__4717;
              continue;
            } else {
              var vec__4678_4718 = cljs.core.first.call(null, seq__4673_4712__$1);
              var k_4719 = cljs.core.nth.call(null, vec__4678_4718, 0, null);
              var v_4720 = cljs.core.nth.call(null, vec__4678_4718, 1, null);
              obj[cljs.core.name.call(null, k_4719)] = v_4720;
              var G__4721 = cljs.core.next.call(null, seq__4673_4712__$1);
              var G__4722 = null;
              var G__4723 = 0;
              var G__4724 = 0;
              seq__4673_4700 = G__4721;
              chunk__4674_4701 = G__4722;
              count__4675_4702 = G__4723;
              i__4676_4703 = G__4724;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("ajax.core");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrManager");
goog.require("goog.Uri.QueryData");
goog.require("goog.net.EventType");
goog.require("goog.events");
goog.require("goog.structs");
goog.require("goog.json.Serializer");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.net.ErrorCode");
ajax.core.AjaxImpl = function() {
  var obj4516 = {};
  return obj4516;
}();
ajax.core._js_ajax_request = function _js_ajax_request(this$, uri, method, body, headers, handler, opts) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7(this$, uri, method, body, headers, handler, opts);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = ajax.core._js_ajax_request[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = ajax.core._js_ajax_request["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxImpl.-js-ajax-request", this$);
        }
      }
    }().call(null, this$, uri, method, body, headers, handler, opts);
  }
};
ajax.core.AjaxRequest = function() {
  var obj4518 = {};
  return obj4518;
}();
ajax.core._abort = function _abort(this$, error_code) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.ajax$core$AjaxRequest$_abort$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxRequest$_abort$arity$2(this$, error_code);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = ajax.core._abort[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = ajax.core._abort["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxRequest.-abort", this$);
        }
      }
    }().call(null, this$, error_code);
  }
};
ajax.core.AjaxImpl["null"] = true;
ajax.core._js_ajax_request["null"] = function(this$, uri, method, body, headers, handler, p__4519) {
  var map__4520 = p__4519;
  var map__4520__$1 = cljs.core.seq_QMARK_.call(null, map__4520) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4520) : map__4520;
  var timeout = cljs.core.get.call(null, map__4520__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
  var G__4521 = new goog.net.XhrIo;
  goog.events.listen(G__4521, goog.net.EventType.COMPLETE, handler);
  G__4521.setTimeoutInterval(function() {
    var or__3227__auto__ = timeout;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return 0;
    }
  }());
  G__4521.send(uri, method, body, headers);
  return G__4521;
};
goog.net.XhrIo.prototype.ajax$core$AjaxRequest$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxRequest$_abort$arity$2 = function(this$, error_code) {
  var this$__$1 = this;
  return this$__$1.abort(error_code);
};
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__4522) {
  var map__4523 = p__4522;
  var map__4523__$1 = cljs.core.seq_QMARK_.call(null, map__4523) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4523) : map__4523;
  var max_retries = cljs.core.get.call(null, map__4523__$1, new cljs.core.Keyword(null, "max-retries", "max-retries", -1933762121));
  var priority = cljs.core.get.call(null, map__4523__$1, new cljs.core.Keyword(null, "priority", "priority", 1431093715));
  var timeout = cljs.core.get.call(null, map__4523__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
  var id = cljs.core.get.call(null, map__4523__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var this$__$1 = this;
  return this$__$1.send(id, uri, method, body, headers, priority, handler, max_retries);
};
ajax.core.abort = function abort(this$) {
  return ajax.core._abort.call(null, this$, goog.net.ErrorCode.ABORT);
};
ajax.core.success_QMARK_ = function success_QMARK_(status) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([status], true), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 201, 202, 204, 205, 206], null));
};
ajax.core.read_edn = function read_edn(xhrio) {
  return cljs.reader.read_string.call(null, xhrio.getResponseText());
};
ajax.core.edn_response_format = function edn_response_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.read_edn, new cljs.core.Keyword(null, "description", "description", -1428560544), "EDN"], null);
};
ajax.core.edn_request_format = function edn_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), cljs.core.pr_str, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/edn"], null);
};
ajax.core.params_to_str = function params_to_str(params) {
  if (cljs.core.truth_(params)) {
    return goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
  } else {
    return null;
  }
};
ajax.core.read_text = function read_text(xhrio) {
  return xhrio.getResponseText();
};
ajax.core.url_request_format = function url_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), ajax.core.params_to_str, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/x-www-form-urlencoded"], null);
};
ajax.core.raw_response_format = function raw_response_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.read_text, new cljs.core.Keyword(null, "description", "description", -1428560544), "raw text"], null);
};
ajax.core.write_json = function write_json(data) {
  return(new goog.json.Serializer).serialize(cljs.core.clj__GT_js.call(null, data));
};
ajax.core.json_request_format = function json_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), ajax.core.write_json, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/json"], null);
};
ajax.core.json_response_format = function json_response_format(p__4524) {
  var map__4526 = p__4524;
  var map__4526__$1 = cljs.core.seq_QMARK_.call(null, map__4526) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4526) : map__4526;
  var keywords_QMARK_ = cljs.core.get.call(null, map__4526__$1, new cljs.core.Keyword(null, "keywords?", "keywords?", 764949733));
  var prefix = cljs.core.get.call(null, map__4526__$1, new cljs.core.Keyword(null, "prefix", "prefix", -265908465));
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), function(map__4526, map__4526__$1, keywords_QMARK_, prefix) {
    return function read_json(xhrio) {
      var json = xhrio.getResponseJson(prefix);
      return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywords_QMARK_);
    };
  }(map__4526, map__4526__$1, keywords_QMARK_, prefix), new cljs.core.Keyword(null, "description", "description", -1428560544), [cljs.core.str("JSON"), cljs.core.str(cljs.core.truth_(prefix) ? [cljs.core.str(" prefix '"), cljs.core.str(prefix), cljs.core.str("'")].join("") : null), cljs.core.str(cljs.core.truth_(keywords_QMARK_) ? " keywordize" : null)].join("")], null);
};
ajax.core.get_default_format = function get_default_format(xhrio) {
  var ct = function() {
    var or__3227__auto__ = xhrio.getResponseHeader("Content-Type");
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return "";
    }
  }();
  var detect = function(ct) {
    return function detect(s) {
      return ct.indexOf(s) >= 0;
    };
  }(ct);
  return cljs.core.update_in.call(null, detect.call(null, "application/json") ? ajax.core.json_response_format.call(null, cljs.core.PersistentArrayMap.EMPTY) : detect.call(null, "application/edn") ? ajax.core.edn_response_format.call(null) : detect.call(null, "text/plain") ? ajax.core.raw_response_format.call(null) : detect.call(null, "text/html") ? ajax.core.raw_response_format.call(null) : ajax.core.edn_response_format.call(null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "description", "description", -1428560544)], null), function(ct) {
    return function(p1__4527_SHARP_) {
      return[cljs.core.str(p1__4527_SHARP_), cljs.core.str(" (default)")].join("");
    };
  }(ct));
};
ajax.core.use_content_type = function use_content_type(format) {
  return cljs.core.dissoc.call(null, format, new cljs.core.Keyword(null, "write", "write", -1857649168));
};
ajax.core.get_format = function get_format(format) {
  if (cljs.core.map_QMARK_.call(null, format)) {
    return format;
  } else {
    if (cljs.core.ifn_QMARK_.call(null, format)) {
      return cljs.core.merge.call(null, ajax.core.url_request_format.call(null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), format, new cljs.core.Keyword(null, "description", "description", -1428560544), "custom"], null));
    } else {
      throw new Error([cljs.core.str("unrecognized format: "), cljs.core.str(format)].join(""));
    }
  }
};
ajax.core.exception_response = function exception_response(e, status, p__4528, xhrio) {
  var map__4530 = p__4528;
  var map__4530__$1 = cljs.core.seq_QMARK_.call(null, map__4530) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4530) : map__4530;
  var description = cljs.core.get.call(null, map__4530__$1, new cljs.core.Keyword(null, "description", "description", -1428560544));
  var response = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "response", "response", -1068424192), null], null);
  var status_text = [cljs.core.str(e.message), cljs.core.str("  Format should have been "), cljs.core.str(description)].join("");
  var parse_error = cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), status_text, new cljs.core.Keyword(null, "is-parse-error", "is-parse-error", 368289415), true, new cljs.core.Keyword(null, "original-text", "original-text", 744448452), xhrio.getResponseText());
  if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
    return parse_error;
  } else {
    return cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), xhrio.getStatusText(), new cljs.core.Keyword(null, "parse-error", "parse-error", 255902478), parse_error);
  }
};
ajax.core.interpret_response = function interpret_response(format, response, get_default_format) {
  try {
    var xhrio = response.target;
    var status = xhrio.getStatus();
    if (cljs.core._EQ_.call(null, -1, status)) {
      if (cljs.core._EQ_.call(null, xhrio.getLastErrorCode(), goog.net.ErrorCode.ABORT)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), -1, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), "Request aborted by client.", new cljs.core.Keyword(null, "aborted?", "aborted?", 448075047), true], null)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), -1, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), "Request timed out.", new cljs.core.Keyword(null, "timeout?", "timeout?", -1570063160), true], null)], null);
      }
    } else {
      var format__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "read", "read", 1140058661)).cljs$core$IFn$_invoke$arity$1(format)) ? format : get_default_format.call(null, xhrio);
      var parse = (new cljs.core.Keyword(null, "read", "read", 1140058661)).cljs$core$IFn$_invoke$arity$1(format__$1);
      try {
        var response__$1 = parse.call(null, xhrio);
        if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, response__$1], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), xhrio.getStatusText(), new cljs.core.Keyword(null, "response", "response", -1068424192), response__$1], null)], null);
        }
      } catch (e4534) {
        if (e4534 instanceof Object) {
          var e = e4534;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, ajax.core.exception_response.call(null, e, status, format__$1, xhrio)], null);
        } else {
          throw e4534;
        }
      }
    }
  } catch (e4533) {
    if (e4533 instanceof Object) {
      var e = e4533;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), 0, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), e.message, new cljs.core.Keyword(null, "response", "response", -1068424192), null], null)], null);
    } else {
      throw e4533;
    }
  }
};
ajax.core.no_format = function no_format(xhrio) {
  throw new Error("No response format was supplied.");
};
ajax.core.uri_with_params = function uri_with_params(uri, params) {
  if (cljs.core.truth_(params)) {
    return[cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(ajax.core.params_to_str.call(null, params))].join("");
  } else {
    return uri;
  }
};
ajax.core.process_inputs = function process_inputs(uri, method, p__4535, p__4536) {
  var map__4540 = p__4535;
  var map__4540__$1 = cljs.core.seq_QMARK_.call(null, map__4540) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4540) : map__4540;
  var format = map__4540__$1;
  var content_type = cljs.core.get.call(null, map__4540__$1, new cljs.core.Keyword(null, "content-type", "content-type", -508222634));
  var write = cljs.core.get.call(null, map__4540__$1, new cljs.core.Keyword(null, "write", "write", -1857649168));
  var map__4541 = p__4536;
  var map__4541__$1 = cljs.core.seq_QMARK_.call(null, map__4541) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4541) : map__4541;
  var headers = cljs.core.get.call(null, map__4541__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var params = cljs.core.get.call(null, map__4541__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  if (cljs.core._EQ_.call(null, method, "GET")) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ajax.core.uri_with_params.call(null, uri, params), null, headers], null);
  } else {
    var map__4542 = format;
    var map__4542__$1 = cljs.core.seq_QMARK_.call(null, map__4542) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4542) : map__4542;
    var content_type__$1 = cljs.core.get.call(null, map__4542__$1, new cljs.core.Keyword(null, "content-type", "content-type", -508222634));
    var write__$1 = cljs.core.get.call(null, map__4542__$1, new cljs.core.Keyword(null, "write", "write", -1857649168));
    var body = write__$1.call(null, params);
    var content_type__$2 = cljs.core.truth_(content_type__$1) ? new cljs.core.PersistentArrayMap(null, 1, ["Content-Type", content_type__$1], null) : null;
    var headers__$1 = cljs.core.merge.call(null, function() {
      var or__3227__auto__ = headers;
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), content_type__$2);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, body, headers__$1], null);
  }
};
ajax.core.normalize_method = function normalize_method(method) {
  if (method instanceof cljs.core.Keyword) {
    return clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
  } else {
    return method;
  }
};
ajax.core.base_handler = function base_handler(format, p__4543) {
  var map__4545 = p__4543;
  var map__4545__$1 = cljs.core.seq_QMARK_.call(null, map__4545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4545) : map__4545;
  var get_default_format = cljs.core.get.call(null, map__4545__$1, new cljs.core.Keyword(null, "get-default-format", "get-default-format", 1890601888));
  var handler = cljs.core.get.call(null, map__4545__$1, new cljs.core.Keyword(null, "handler", "handler", -195596612));
  if (cljs.core.truth_(handler)) {
    return function(map__4545, map__4545__$1, get_default_format, handler) {
      return function(xhrio) {
        return handler.call(null, ajax.core.interpret_response.call(null, format, xhrio, function() {
          var or__3227__auto__ = get_default_format;
          if (cljs.core.truth_(or__3227__auto__)) {
            return or__3227__auto__;
          } else {
            return ajax.core.no_format;
          }
        }()));
      };
    }(map__4545, map__4545__$1, get_default_format, handler);
  } else {
    throw new Error("No ajax handler provided.");
  }
};
ajax.core.ajax_request = function() {
  var ajax_request = null;
  var ajax_request__1 = function(p__4546) {
    var map__4549 = p__4546;
    var map__4549__$1 = cljs.core.seq_QMARK_.call(null, map__4549) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4549) : map__4549;
    var opts = map__4549__$1;
    var manager = cljs.core.get.call(null, map__4549__$1, new cljs.core.Keyword(null, "manager", "manager", -818607470));
    var format = cljs.core.get.call(null, map__4549__$1, new cljs.core.Keyword(null, "format", "format", -1306924766));
    var method = cljs.core.get.call(null, map__4549__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
    var uri = cljs.core.get.call(null, map__4549__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
    var format__$1 = ajax.core.get_format.call(null, format);
    var method__$1 = ajax.core.normalize_method.call(null, method);
    var vec__4550 = ajax.core.process_inputs.call(null, uri, method__$1, format__$1, opts);
    var uri__$1 = cljs.core.nth.call(null, vec__4550, 0, null);
    var body = cljs.core.nth.call(null, vec__4550, 1, null);
    var headers = cljs.core.nth.call(null, vec__4550, 2, null);
    var handler = ajax.core.base_handler.call(null, format__$1, opts);
    return ajax.core._js_ajax_request.call(null, manager, uri__$1, method__$1, body, cljs.core.clj__GT_js.call(null, headers), handler, opts);
  };
  var ajax_request__3 = function() {
    var G__4551__delegate = function(uri, method, args) {
      var f = cljs.core.first.call(null, args);
      var opts = f instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, args) : f;
      return ajax_request.call(null, cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "uri", "uri", -774711847), uri, new cljs.core.Keyword(null, "method", "method", 55703592), method));
    };
    var G__4551 = function(uri, method, var_args) {
      var args = null;
      if (arguments.length > 2) {
        var G__4552__i = 0, G__4552__a = new Array(arguments.length - 2);
        while (G__4552__i < G__4552__a.length) {
          G__4552__a[G__4552__i] = arguments[G__4552__i + 2];
          ++G__4552__i;
        }
        args = new cljs.core.IndexedSeq(G__4552__a, 0);
      }
      return G__4551__delegate.call(this, uri, method, args);
    };
    G__4551.cljs$lang$maxFixedArity = 2;
    G__4551.cljs$lang$applyTo = function(arglist__4553) {
      var uri = cljs.core.first(arglist__4553);
      arglist__4553 = cljs.core.next(arglist__4553);
      var method = cljs.core.first(arglist__4553);
      var args = cljs.core.rest(arglist__4553);
      return G__4551__delegate(uri, method, args);
    };
    G__4551.cljs$core$IFn$_invoke$arity$variadic = G__4551__delegate;
    return G__4551;
  }();
  ajax_request = function(uri, method, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return ajax_request__1.call(this, uri);
      default:
        var G__4554 = null;
        if (arguments.length > 2) {
          var G__4555__i = 0, G__4555__a = new Array(arguments.length - 2);
          while (G__4555__i < G__4555__a.length) {
            G__4555__a[G__4555__i] = arguments[G__4555__i + 2];
            ++G__4555__i;
          }
          G__4554 = new cljs.core.IndexedSeq(G__4555__a, 0);
        }
        return ajax_request__3.cljs$core$IFn$_invoke$arity$variadic(uri, method, G__4554);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax_request.cljs$lang$maxFixedArity = 2;
  ajax_request.cljs$lang$applyTo = ajax_request__3.cljs$lang$applyTo;
  ajax_request.cljs$core$IFn$_invoke$arity$1 = ajax_request__1;
  ajax_request.cljs$core$IFn$_invoke$arity$variadic = ajax_request__3.cljs$core$IFn$_invoke$arity$variadic;
  return ajax_request;
}();
ajax.core.json_format = function json_format(format_params) {
  return cljs.core.merge.call(null, ajax.core.json_request_format.call(null), ajax.core.json_response_format.call(null, format_params));
};
ajax.core.edn_format = function edn_format() {
  return cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), ajax.core.edn_response_format.call(null));
};
ajax.core.raw_format = function raw_format() {
  return cljs.core.merge.call(null, ajax.core.url_request_format.call(null), ajax.core.raw_response_format.call(null));
};
ajax.core.keyword_request_format = function keyword_request_format(format, format_params) {
  var G__4557 = format instanceof cljs.core.Keyword ? format.fqn : null;
  switch(G__4557) {
    case "url":
      return ajax.core.url_request_format.call(null);
      break;
    case "raw":
      return ajax.core.url_request_format.call(null);
      break;
    case "edn":
      return ajax.core.edn_request_format.call(null);
      break;
    case "json":
      return ajax.core.json_request_format.call(null);
      break;
    default:
      throw new Error([cljs.core.str("unrecognized request format: "), cljs.core.str(format)].join(""));;
  }
};
ajax.core.keyword_response_format = function keyword_response_format(format, format_params) {
  if (cljs.core.map_QMARK_.call(null, format)) {
    return format;
  } else {
    if (cljs.core.ifn_QMARK_.call(null, format)) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), format, new cljs.core.Keyword(null, "description", "description", -1428560544), "custom"], null);
    } else {
      var G__4560 = format instanceof cljs.core.Keyword ? format.fqn : null;
      switch(G__4560) {
        case "raw":
          return ajax.core.raw_response_format.call(null);
          break;
        case "edn":
          return ajax.core.edn_response_format.call(null);
          break;
        case "json":
          return ajax.core.json_response_format.call(null, format_params);
          break;
        default:
          return null;
      }
    }
  }
};
ajax.core.transform_handler = function transform_handler(p__4562) {
  var map__4567 = p__4562;
  var map__4567__$1 = cljs.core.seq_QMARK_.call(null, map__4567) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4567) : map__4567;
  var finally$ = cljs.core.get.call(null, map__4567__$1, new cljs.core.Keyword(null, "finally", "finally", 1589088705));
  var error_handler = cljs.core.get.call(null, map__4567__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  var handler = cljs.core.get.call(null, map__4567__$1, new cljs.core.Keyword(null, "handler", "handler", -195596612));
  return function(map__4567, map__4567__$1, finally$, error_handler, handler) {
    return function easy_handler(p__4568) {
      var vec__4570 = p__4568;
      var ok = cljs.core.nth.call(null, vec__4570, 0, null);
      var result = cljs.core.nth.call(null, vec__4570, 1, null);
      var temp__4124__auto___4571 = cljs.core.truth_(ok) ? handler : error_handler;
      if (cljs.core.truth_(temp__4124__auto___4571)) {
        var h_4572 = temp__4124__auto___4571;
        h_4572.call(null, result);
      } else {
      }
      if (cljs.core.fn_QMARK_.call(null, finally$)) {
        return finally$.call(null);
      } else {
        return null;
      }
    };
  }(map__4567, map__4567__$1, finally$, error_handler, handler);
};
ajax.core.transform_format = function transform_format(p__4573) {
  var map__4575 = p__4573;
  var map__4575__$1 = cljs.core.seq_QMARK_.call(null, map__4575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4575) : map__4575;
  var opts = map__4575__$1;
  var response_format = cljs.core.get.call(null, map__4575__$1, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322));
  var format = cljs.core.get.call(null, map__4575__$1, new cljs.core.Keyword(null, "format", "format", -1306924766));
  var rf = ajax.core.keyword_response_format.call(null, response_format, opts);
  if (format == null) {
    return cljs.core.merge.call(null, ajax.core.edn_request_format.call(null), rf);
  } else {
    if (format instanceof cljs.core.Keyword) {
      return cljs.core.merge.call(null, ajax.core.keyword_request_format.call(null, format, opts), rf);
    } else {
      return format;
    }
  }
};
ajax.core.transform_opts = function transform_opts(opts) {
  return cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "handler", "handler", -195596612), ajax.core.transform_handler.call(null, opts), new cljs.core.Keyword(null, "format", "format", -1306924766), ajax.core.transform_format.call(null, opts), new cljs.core.Keyword(null, "get-default-format", "get-default-format", 1890601888), ajax.core.get_default_format);
};
ajax.core.GET = function() {
  var GET__delegate = function(uri, p__4576) {
    var vec__4578 = p__4576;
    var opts = cljs.core.nth.call(null, vec__4578, 0, null);
    return ajax.core.ajax_request.call(null, uri, "GET", ajax.core.transform_opts.call(null, opts));
  };
  var GET = function(uri, var_args) {
    var p__4576 = null;
    if (arguments.length > 1) {
      var G__4579__i = 0, G__4579__a = new Array(arguments.length - 1);
      while (G__4579__i < G__4579__a.length) {
        G__4579__a[G__4579__i] = arguments[G__4579__i + 1];
        ++G__4579__i;
      }
      p__4576 = new cljs.core.IndexedSeq(G__4579__a, 0);
    }
    return GET__delegate.call(this, uri, p__4576);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__4580) {
    var uri = cljs.core.first(arglist__4580);
    var p__4576 = cljs.core.rest(arglist__4580);
    return GET__delegate(uri, p__4576);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
ajax.core.HEAD = function() {
  var HEAD__delegate = function(uri, p__4581) {
    var vec__4583 = p__4581;
    var opts = cljs.core.nth.call(null, vec__4583, 0, null);
    return ajax.core.ajax_request.call(null, uri, "HEAD", ajax.core.transform_opts.call(null, opts));
  };
  var HEAD = function(uri, var_args) {
    var p__4581 = null;
    if (arguments.length > 1) {
      var G__4584__i = 0, G__4584__a = new Array(arguments.length - 1);
      while (G__4584__i < G__4584__a.length) {
        G__4584__a[G__4584__i] = arguments[G__4584__i + 1];
        ++G__4584__i;
      }
      p__4581 = new cljs.core.IndexedSeq(G__4584__a, 0);
    }
    return HEAD__delegate.call(this, uri, p__4581);
  };
  HEAD.cljs$lang$maxFixedArity = 1;
  HEAD.cljs$lang$applyTo = function(arglist__4585) {
    var uri = cljs.core.first(arglist__4585);
    var p__4581 = cljs.core.rest(arglist__4585);
    return HEAD__delegate(uri, p__4581);
  };
  HEAD.cljs$core$IFn$_invoke$arity$variadic = HEAD__delegate;
  return HEAD;
}();
ajax.core.POST = function() {
  var POST__delegate = function(uri, p__4586) {
    var vec__4588 = p__4586;
    var opts = cljs.core.nth.call(null, vec__4588, 0, null);
    return ajax.core.ajax_request.call(null, uri, "POST", ajax.core.transform_opts.call(null, opts));
  };
  var POST = function(uri, var_args) {
    var p__4586 = null;
    if (arguments.length > 1) {
      var G__4589__i = 0, G__4589__a = new Array(arguments.length - 1);
      while (G__4589__i < G__4589__a.length) {
        G__4589__a[G__4589__i] = arguments[G__4589__i + 1];
        ++G__4589__i;
      }
      p__4586 = new cljs.core.IndexedSeq(G__4589__a, 0);
    }
    return POST__delegate.call(this, uri, p__4586);
  };
  POST.cljs$lang$maxFixedArity = 1;
  POST.cljs$lang$applyTo = function(arglist__4590) {
    var uri = cljs.core.first(arglist__4590);
    var p__4586 = cljs.core.rest(arglist__4590);
    return POST__delegate(uri, p__4586);
  };
  POST.cljs$core$IFn$_invoke$arity$variadic = POST__delegate;
  return POST;
}();
ajax.core.PUT = function() {
  var PUT__delegate = function(uri, p__4591) {
    var vec__4593 = p__4591;
    var opts = cljs.core.nth.call(null, vec__4593, 0, null);
    return ajax.core.ajax_request.call(null, uri, "PUT", ajax.core.transform_opts.call(null, opts));
  };
  var PUT = function(uri, var_args) {
    var p__4591 = null;
    if (arguments.length > 1) {
      var G__4594__i = 0, G__4594__a = new Array(arguments.length - 1);
      while (G__4594__i < G__4594__a.length) {
        G__4594__a[G__4594__i] = arguments[G__4594__i + 1];
        ++G__4594__i;
      }
      p__4591 = new cljs.core.IndexedSeq(G__4594__a, 0);
    }
    return PUT__delegate.call(this, uri, p__4591);
  };
  PUT.cljs$lang$maxFixedArity = 1;
  PUT.cljs$lang$applyTo = function(arglist__4595) {
    var uri = cljs.core.first(arglist__4595);
    var p__4591 = cljs.core.rest(arglist__4595);
    return PUT__delegate(uri, p__4591);
  };
  PUT.cljs$core$IFn$_invoke$arity$variadic = PUT__delegate;
  return PUT;
}();
ajax.core.DELETE = function() {
  var DELETE__delegate = function(uri, p__4596) {
    var vec__4598 = p__4596;
    var opts = cljs.core.nth.call(null, vec__4598, 0, null);
    return ajax.core.ajax_request.call(null, uri, "DELETE", ajax.core.transform_opts.call(null, opts));
  };
  var DELETE = function(uri, var_args) {
    var p__4596 = null;
    if (arguments.length > 1) {
      var G__4599__i = 0, G__4599__a = new Array(arguments.length - 1);
      while (G__4599__i < G__4599__a.length) {
        G__4599__a[G__4599__i] = arguments[G__4599__i + 1];
        ++G__4599__i;
      }
      p__4596 = new cljs.core.IndexedSeq(G__4599__a, 0);
    }
    return DELETE__delegate.call(this, uri, p__4596);
  };
  DELETE.cljs$lang$maxFixedArity = 1;
  DELETE.cljs$lang$applyTo = function(arglist__4600) {
    var uri = cljs.core.first(arglist__4600);
    var p__4596 = cljs.core.rest(arglist__4600);
    return DELETE__delegate(uri, p__4596);
  };
  DELETE.cljs$core$IFn$_invoke$arity$variadic = DELETE__delegate;
  return DELETE;
}();
ajax.core.OPTIONS = function() {
  var OPTIONS__delegate = function(uri, p__4601) {
    var vec__4603 = p__4601;
    var opts = cljs.core.nth.call(null, vec__4603, 0, null);
    return ajax.core.ajax_request.call(null, uri, "OPTIONS", ajax.core.transform_opts.call(null, opts));
  };
  var OPTIONS = function(uri, var_args) {
    var p__4601 = null;
    if (arguments.length > 1) {
      var G__4604__i = 0, G__4604__a = new Array(arguments.length - 1);
      while (G__4604__i < G__4604__a.length) {
        G__4604__a[G__4604__i] = arguments[G__4604__i + 1];
        ++G__4604__i;
      }
      p__4601 = new cljs.core.IndexedSeq(G__4604__a, 0);
    }
    return OPTIONS__delegate.call(this, uri, p__4601);
  };
  OPTIONS.cljs$lang$maxFixedArity = 1;
  OPTIONS.cljs$lang$applyTo = function(arglist__4605) {
    var uri = cljs.core.first(arglist__4605);
    var p__4601 = cljs.core.rest(arglist__4605);
    return OPTIONS__delegate(uri, p__4601);
  };
  OPTIONS.cljs$core$IFn$_invoke$arity$variadic = OPTIONS__delegate;
  return OPTIONS;
}();
ajax.core.TRACE = function() {
  var TRACE__delegate = function(uri, p__4606) {
    var vec__4608 = p__4606;
    var opts = cljs.core.nth.call(null, vec__4608, 0, null);
    return ajax.core.ajax_request.call(null, uri, "TRACE", ajax.core.transform_opts.call(null, opts));
  };
  var TRACE = function(uri, var_args) {
    var p__4606 = null;
    if (arguments.length > 1) {
      var G__4609__i = 0, G__4609__a = new Array(arguments.length - 1);
      while (G__4609__i < G__4609__a.length) {
        G__4609__a[G__4609__i] = arguments[G__4609__i + 1];
        ++G__4609__i;
      }
      p__4606 = new cljs.core.IndexedSeq(G__4609__a, 0);
    }
    return TRACE__delegate.call(this, uri, p__4606);
  };
  TRACE.cljs$lang$maxFixedArity = 1;
  TRACE.cljs$lang$applyTo = function(arglist__4610) {
    var uri = cljs.core.first(arglist__4610);
    var p__4606 = cljs.core.rest(arglist__4610);
    return TRACE__delegate(uri, p__4606);
  };
  TRACE.cljs$core$IFn$_invoke$arity$variadic = TRACE__delegate;
  return TRACE;
}();
goog.provide("reagent.impl.reactimport");
goog.require("cljs.core");
reagent.impl.reactimport.React = React;
(function() {
  var X = {};
  X.createClass = false;
  X.isValidClass = false;
  X.setProps = false;
  X.setState = false;
  X.replaceState = false;
  X.forceUpdate = false;
  X.renderComponent = false;
  X.unmountComponentAtNode = false;
  X.renderComponentToString = false;
  X.getDOMNode = false;
  X.initializeTouchEvents = false;
  X.addons = false;
  X.TransitionGroup = false;
});
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.reactimport");
goog.require("reagent.debug");
reagent.impl.util.is_client = !(function() {
  try {
    return window.document;
  } catch (e4919) {
    if (e4919 instanceof Object) {
      var e = e4919;
      return null;
    } else {
      throw e4919;
    }
  }
}() == null);
reagent.impl.util.React = reagent.impl.reactimport.React;
reagent.impl.util.props = "props";
reagent.impl.util.cljs_level = "cljsLevel";
reagent.impl.util.cljs_argv = "cljsArgv";
reagent.impl.util.js_props = function js_props(C) {
  return C[reagent.impl.util.props];
};
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(C) {
  return C[reagent.impl.util.props][reagent.impl.util.cljs_argv];
};
reagent.impl.util.get_props = function get_props(C) {
  return reagent.impl.util.extract_props.call(null, C[reagent.impl.util.props][reagent.impl.util.cljs_argv]);
};
reagent.impl.util.get_children = function get_children(C) {
  return reagent.impl.util.extract_children.call(null, C[reagent.impl.util.props][reagent.impl.util.cljs_argv]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(C) {
  return!(reagent.impl.util.get_argv.call(null, C) == null);
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__4921 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__4921, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__4921, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__4923__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3227__auto___4924 = self__.p;
    if (cljs.core.truth_(or__3227__auto___4924)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__4923 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__4925__i = 0, G__4925__a = new Array(arguments.length - 1);
      while (G__4925__i < G__4925__a.length) {
        G__4925__a[G__4925__i] = arguments[G__4925__i + 1];
        ++G__4925__i;
      }
      a = new cljs.core.IndexedSeq(G__4925__a, 0);
    }
    return G__4923__delegate.call(this, self__, a);
  };
  G__4923.cljs$lang$maxFixedArity = 1;
  G__4923.cljs$lang$applyTo = function(arglist__4926) {
    var self__ = cljs.core.first(arglist__4926);
    var a = cljs.core.rest(arglist__4926);
    return G__4923__delegate(self__, a);
  };
  G__4923.cljs$core$IFn$_invoke$arity$variadic = G__4923__delegate;
  return G__4923;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args4922) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args4922)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__4927__delegate = function(a) {
    var _ = this;
    var or__3227__auto___4928 = self__.p;
    if (cljs.core.truth_(or__3227__auto___4928)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__4927 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__4929__i = 0, G__4929__a = new Array(arguments.length - 0);
      while (G__4929__i < G__4929__a.length) {
        G__4929__a[G__4929__i] = arguments[G__4929__i + 0];
        ++G__4929__i;
      }
      a = new cljs.core.IndexedSeq(G__4929__a, 0);
    }
    return G__4927__delegate.call(this, a);
  };
  G__4927.cljs$lang$maxFixedArity = 0;
  G__4927.cljs$lang$applyTo = function(arglist__4930) {
    var a = cljs.core.seq(arglist__4930);
    return G__4927__delegate(a);
  };
  G__4927.cljs$core$IFn$_invoke$arity$variadic = G__4927__delegate;
  return G__4927;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write.call(null, writer__3815__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.clj_ifn_QMARK_ = function clj_ifn_QMARK_(x) {
  var or__3227__auto__ = cljs.core.ifn_QMARK_.call(null, x);
  if (or__3227__auto__) {
    return or__3227__auto__;
  } else {
    var G__4934 = x;
    if (G__4934) {
      var bit__3908__auto__ = G__4934.cljs$lang$protocol_mask$partition1$ & 256;
      if (bit__3908__auto__ || G__4934.cljs$core$IMultiFn$) {
        return true;
      } else {
        if (!G__4934.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMultiFn, G__4934);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMultiFn, G__4934);
    }
  }
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._not_found = function() {
  var obj4936 = {};
  return obj4936;
}();
reagent.impl.util.identical_ish_QMARK_ = function identical_ish_QMARK_(x, y) {
  return cljs.core.keyword_identical_QMARK_.call(null, x, y) || (x instanceof cljs.core.Symbol || cljs.core.type.call(null, x) === reagent.impl.util.partial_ifn) && cljs.core._EQ_.call(null, x, y);
};
reagent.impl.util.shallow_equal_maps = function shallow_equal_maps(x, y) {
  var or__3227__auto__ = x === y;
  if (or__3227__auto__) {
    return or__3227__auto__;
  } else {
    var and__3215__auto__ = cljs.core.map_QMARK_.call(null, x);
    if (and__3215__auto__) {
      var and__3215__auto____$1 = cljs.core.map_QMARK_.call(null, y);
      if (and__3215__auto____$1) {
        var and__3215__auto____$2 = cljs.core.count.call(null, x) === cljs.core.count.call(null, y);
        if (and__3215__auto____$2) {
          return cljs.core.reduce_kv.call(null, function(and__3215__auto____$2, and__3215__auto____$1, and__3215__auto__, or__3227__auto__) {
            return function(res, k, v) {
              var yv = cljs.core.get.call(null, y, k, reagent.impl.util._not_found);
              if (cljs.core.truth_(function() {
                var or__3227__auto____$1 = v === yv;
                if (or__3227__auto____$1) {
                  return or__3227__auto____$1;
                } else {
                  var or__3227__auto____$2 = reagent.impl.util.identical_ish_QMARK_.call(null, v, yv);
                  if (or__3227__auto____$2) {
                    return or__3227__auto____$2;
                  } else {
                    var and__3215__auto____$3 = cljs.core.keyword_identical_QMARK_.call(null, k, new cljs.core.Keyword(null, "style", "style", -496642736));
                    if (and__3215__auto____$3) {
                      return shallow_equal_maps.call(null, v, yv);
                    } else {
                      return and__3215__auto____$3;
                    }
                  }
                }
              }())) {
                return res;
              } else {
                return cljs.core.reduced.call(null, false);
              }
            };
          }(and__3215__auto____$2, and__3215__auto____$1, and__3215__auto__, or__3227__auto__), true, x);
        } else {
          return and__3215__auto____$2;
        }
      } else {
        return and__3215__auto____$1;
      }
    } else {
      return and__3215__auto__;
    }
  }
};
reagent.impl.util.equal_args = function equal_args(v1, v2) {
  if (cljs.core.vector_QMARK_.call(null, v1)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "v1", "v1", -2141311508, null))))].join(""));
  }
  if (cljs.core.vector_QMARK_.call(null, v2)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "v2", "v2", 1875554983, null))))].join(""));
  }
  var or__3227__auto__ = v1 === v2;
  if (or__3227__auto__) {
    return or__3227__auto__;
  } else {
    var and__3215__auto__ = cljs.core.count.call(null, v1) === cljs.core.count.call(null, v2);
    if (and__3215__auto__) {
      return cljs.core.reduce_kv.call(null, function(and__3215__auto__, or__3227__auto__) {
        return function(res, k, v) {
          var v_SINGLEQUOTE_ = cljs.core.nth.call(null, v2, k);
          if (cljs.core.truth_(function() {
            var or__3227__auto____$1 = v === v_SINGLEQUOTE_;
            if (or__3227__auto____$1) {
              return or__3227__auto____$1;
            } else {
              var or__3227__auto____$2 = reagent.impl.util.identical_ish_QMARK_.call(null, v, v_SINGLEQUOTE_);
              if (or__3227__auto____$2) {
                return or__3227__auto____$2;
              } else {
                var and__3215__auto____$1 = cljs.core.map_QMARK_.call(null, v);
                if (and__3215__auto____$1) {
                  return reagent.impl.util.shallow_equal_maps.call(null, v, v_SINGLEQUOTE_);
                } else {
                  return and__3215__auto____$1;
                }
              }
            }
          }())) {
            return res;
          } else {
            return cljs.core.reduced.call(null, false);
          }
        };
      }(and__3215__auto__, or__3227__auto__), true, v1);
    } else {
      return and__3215__auto__;
    }
  }
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
reagent.ratom.debug = false;
reagent.ratom._running = cljs.core.atom.call(null, 0);
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_4798 = reagent.ratom._STAR_ratom_context_STAR_;
  try {
    reagent.ratom._STAR_ratom_context_STAR_ = obj;
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_4798;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write.call(null, writer__3815__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__4802__delegate = function(x, p__4799) {
      var map__4801 = p__4799;
      var map__4801__$1 = cljs.core.seq_QMARK_.call(null, map__4801) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4801) : map__4801;
      var validator = cljs.core.get.call(null, map__4801__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__4801__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__4802 = function(x, var_args) {
      var p__4799 = null;
      if (arguments.length > 1) {
        var G__4803__i = 0, G__4803__a = new Array(arguments.length - 1);
        while (G__4803__i < G__4803__a.length) {
          G__4803__a[G__4803__i] = arguments[G__4803__i + 1];
          ++G__4803__i;
        }
        p__4799 = new cljs.core.IndexedSeq(G__4803__a, 0);
      }
      return G__4802__delegate.call(this, x, p__4799);
    };
    G__4802.cljs$lang$maxFixedArity = 1;
    G__4802.cljs$lang$applyTo = function(arglist__4804) {
      var x = cljs.core.first(arglist__4804);
      var p__4799 = cljs.core.rest(arglist__4804);
      return G__4802__delegate(x, p__4799);
    };
    G__4802.cljs$core$IFn$_invoke$arity$variadic = G__4802__delegate;
    return G__4802;
  }();
  atom = function(x, var_args) {
    var p__4799 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__4805 = null;
        if (arguments.length > 1) {
          var G__4806__i = 0, G__4806__a = new Array(arguments.length - 1);
          while (G__4806__i < G__4806__a.length) {
            G__4806__a[G__4806__i] = arguments[G__4806__i + 1];
            ++G__4806__i;
          }
          G__4805 = new cljs.core.IndexedSeq(G__4806__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__4805);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.IDisposable = function() {
  var obj4808 = {};
  return obj4808;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj4810 = {};
  return obj4810;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = reagent.ratom.run[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = reagent.ratom.run["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj4812 = {};
  return obj4812;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3215__auto__ = this$;
    if (and__3215__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__3871__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3227__auto__ = reagent.ratom._update_watching[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3215__auto__ = k;
    if (and__3215__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3215__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__3871__auto__ = k == null ? null : k;
    return function() {
      var or__3227__auto__ = reagent.ratom._handle_change[goog.typeOf(x__3871__auto__)];
      if (or__3227__auto__) {
        return or__3227__auto__;
      } else {
        var or__3227__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3227__auto____$1) {
          return or__3227__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom.call_watches = function call_watches(obs, watches, oldval, newval) {
  return cljs.core.reduce_kv.call(null, function(_, key, f) {
    f.call(null, key, obs, oldval, newval);
    return null;
  }, null, watches);
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3215__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3215__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3215__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3227__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3227__auto__)) {
        return or__3227__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__4813_4825 = cljs.core.seq.call(null, derefed);
  var chunk__4814_4826 = null;
  var count__4815_4827 = 0;
  var i__4816_4828 = 0;
  while (true) {
    if (i__4816_4828 < count__4815_4827) {
      var w_4829 = cljs.core._nth.call(null, chunk__4814_4826, i__4816_4828);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_4829)) {
      } else {
        cljs.core.add_watch.call(null, w_4829, this$__$1, reagent.ratom._handle_change);
      }
      var G__4830 = seq__4813_4825;
      var G__4831 = chunk__4814_4826;
      var G__4832 = count__4815_4827;
      var G__4833 = i__4816_4828 + 1;
      seq__4813_4825 = G__4830;
      chunk__4814_4826 = G__4831;
      count__4815_4827 = G__4832;
      i__4816_4828 = G__4833;
      continue;
    } else {
      var temp__4126__auto___4834 = cljs.core.seq.call(null, seq__4813_4825);
      if (temp__4126__auto___4834) {
        var seq__4813_4835__$1 = temp__4126__auto___4834;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4813_4835__$1)) {
          var c__4014__auto___4836 = cljs.core.chunk_first.call(null, seq__4813_4835__$1);
          var G__4837 = cljs.core.chunk_rest.call(null, seq__4813_4835__$1);
          var G__4838 = c__4014__auto___4836;
          var G__4839 = cljs.core.count.call(null, c__4014__auto___4836);
          var G__4840 = 0;
          seq__4813_4825 = G__4837;
          chunk__4814_4826 = G__4838;
          count__4815_4827 = G__4839;
          i__4816_4828 = G__4840;
          continue;
        } else {
          var w_4841 = cljs.core.first.call(null, seq__4813_4835__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_4841)) {
          } else {
            cljs.core.add_watch.call(null, w_4841, this$__$1, reagent.ratom._handle_change);
          }
          var G__4842 = cljs.core.next.call(null, seq__4813_4835__$1);
          var G__4843 = null;
          var G__4844 = 0;
          var G__4845 = 0;
          seq__4813_4825 = G__4842;
          chunk__4814_4826 = G__4843;
          count__4815_4827 = G__4844;
          i__4816_4828 = G__4845;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__4817_4846 = cljs.core.seq.call(null, self__.watching);
  var chunk__4818_4847 = null;
  var count__4819_4848 = 0;
  var i__4820_4849 = 0;
  while (true) {
    if (i__4820_4849 < count__4819_4848) {
      var w_4850 = cljs.core._nth.call(null, chunk__4818_4847, i__4820_4849);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_4850)) {
      } else {
        cljs.core.remove_watch.call(null, w_4850, this$__$1);
      }
      var G__4851 = seq__4817_4846;
      var G__4852 = chunk__4818_4847;
      var G__4853 = count__4819_4848;
      var G__4854 = i__4820_4849 + 1;
      seq__4817_4846 = G__4851;
      chunk__4818_4847 = G__4852;
      count__4819_4848 = G__4853;
      i__4820_4849 = G__4854;
      continue;
    } else {
      var temp__4126__auto___4855 = cljs.core.seq.call(null, seq__4817_4846);
      if (temp__4126__auto___4855) {
        var seq__4817_4856__$1 = temp__4126__auto___4855;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4817_4856__$1)) {
          var c__4014__auto___4857 = cljs.core.chunk_first.call(null, seq__4817_4856__$1);
          var G__4858 = cljs.core.chunk_rest.call(null, seq__4817_4856__$1);
          var G__4859 = c__4014__auto___4857;
          var G__4860 = cljs.core.count.call(null, c__4014__auto___4857);
          var G__4861 = 0;
          seq__4817_4846 = G__4858;
          chunk__4818_4847 = G__4859;
          count__4819_4848 = G__4860;
          i__4820_4849 = G__4861;
          continue;
        } else {
          var w_4862 = cljs.core.first.call(null, seq__4817_4856__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_4862)) {
          } else {
            cljs.core.remove_watch.call(null, w_4862, this$__$1);
          }
          var G__4863 = cljs.core.next.call(null, seq__4817_4856__$1);
          var G__4864 = null;
          var G__4865 = 0;
          var G__4866 = 0;
          seq__4817_4846 = G__4863;
          chunk__4818_4847 = G__4864;
          count__4819_4848 = G__4865;
          i__4820_4849 = G__4866;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__4821_4867 = cljs.core.seq.call(null, self__.watching);
  var chunk__4822_4868 = null;
  var count__4823_4869 = 0;
  var i__4824_4870 = 0;
  while (true) {
    if (i__4824_4870 < count__4823_4869) {
      var w_4871 = cljs.core._nth.call(null, chunk__4822_4868, i__4824_4870);
      cljs.core.remove_watch.call(null, w_4871, this$__$1);
      var G__4872 = seq__4821_4867;
      var G__4873 = chunk__4822_4868;
      var G__4874 = count__4823_4869;
      var G__4875 = i__4824_4870 + 1;
      seq__4821_4867 = G__4872;
      chunk__4822_4868 = G__4873;
      count__4823_4869 = G__4874;
      i__4824_4870 = G__4875;
      continue;
    } else {
      var temp__4126__auto___4876 = cljs.core.seq.call(null, seq__4821_4867);
      if (temp__4126__auto___4876) {
        var seq__4821_4877__$1 = temp__4126__auto___4876;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4821_4877__$1)) {
          var c__4014__auto___4878 = cljs.core.chunk_first.call(null, seq__4821_4877__$1);
          var G__4879 = cljs.core.chunk_rest.call(null, seq__4821_4877__$1);
          var G__4880 = c__4014__auto___4878;
          var G__4881 = cljs.core.count.call(null, c__4014__auto___4878);
          var G__4882 = 0;
          seq__4821_4867 = G__4879;
          chunk__4822_4868 = G__4880;
          count__4823_4869 = G__4881;
          i__4824_4870 = G__4882;
          continue;
        } else {
          var w_4883 = cljs.core.first.call(null, seq__4821_4877__$1);
          cljs.core.remove_watch.call(null, w_4883, this$__$1);
          var G__4884 = cljs.core.next.call(null, seq__4821_4877__$1);
          var G__4885 = null;
          var G__4886 = 0;
          var G__4887 = 0;
          seq__4821_4867 = G__4884;
          chunk__4822_4868 = G__4885;
          count__4823_4869 = G__4886;
          i__4824_4870 = G__4887;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = cljs.core.PersistentHashSet.EMPTY;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  var old_value = self__.state;
  self__.state = new_value;
  cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  return new_value;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, self__.state, x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.on_set)) {
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  return reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldval, newval);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, function() {
    var or__3227__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
    var x__4277__auto___4888 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.auto_run, reagent.ratom._STAR_ratom_context_STAR_], null);
    if (!(console.log == null)) {
      console.log([cljs.core.str([cljs.core.str("dbg "), cljs.core.str("reagent.ratom"), cljs.core.str(":"), cljs.core.str(177), cljs.core.str(": "), cljs.core.str("[auto-run *ratom-context*]"), cljs.core.str(": "), cljs.core.str(cljs.core.pr_str.call(null, x__4277__auto___4888))].join(""))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(function() {
    var or__3227__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Reaction derefed outside auto-running context"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "auto-run", "auto-run", -696035332, null), new cljs.core.Symbol(null, "*ratom-context*", "*ratom-context*", -1557728360, null))))].join(""));
  }
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  if (cljs.core.truth_(self__.dirty_QMARK_)) {
    return reagent.ratom.run.call(null, this$__$1);
  } else {
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write.call(null, writer__3815__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__4889) {
    var map__4891 = p__4889;
    var map__4891__$1 = cljs.core.seq_QMARK_.call(null, map__4891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4891) : map__4891;
    var derefed = cljs.core.get.call(null, map__4891__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__4891__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__4891__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__4891__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, cljs.core.PersistentArrayMap.EMPTY, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__4889 = null;
    if (arguments.length > 1) {
      var G__4892__i = 0, G__4892__a = new Array(arguments.length - 1);
      while (G__4892__i < G__4892__a.length) {
        G__4892__a[G__4892__i] = arguments[G__4892__i + 1];
        ++G__4892__i;
      }
      p__4889 = new cljs.core.IndexedSeq(G__4892__a, 0);
    }
    return make_reaction__delegate.call(this, f, p__4889);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__4893) {
    var f = cljs.core.first(arglist__4893);
    var p__4889 = cljs.core.rest(arglist__4893);
    return make_reaction__delegate(f, p__4889);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.debug");
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3227__auto__ = w.requestAnimationFrame;
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    var or__3227__auto____$1 = w.webkitRequestAnimationFrame;
    if (cljs.core.truth_(or__3227__auto____$1)) {
      return or__3227__auto____$1;
    } else {
      var or__3227__auto____$2 = w.mozRequestAnimationFrame;
      if (cljs.core.truth_(or__3227__auto____$2)) {
        return or__3227__auto____$2;
      } else {
        var or__3227__auto____$3 = w.msRequestAnimationFrame;
        if (cljs.core.truth_(or__3227__auto____$3)) {
          return or__3227__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_levels = function compare_levels(c1, c2) {
  return c1["props"][reagent.impl.util.cljs_level] - c2["props"][reagent.impl.util.cljs_level];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_levels);
  var n__4114__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4114__auto__) {
      var C_4758 = a[i];
      if (cljs.core.truth_(C_4758.cljsIsDirty)) {
        C_4758.forceUpdate();
      } else {
      }
      var G__4759 = i + 1;
      i = G__4759;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(C) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(C);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  self__.queue = [];
  self__.scheduled_QMARK_ = false;
  return reagent.impl.batching.run_queue.call(null, q);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__3814__auto__, writer__3815__auto__, opt__3816__auto__) {
  return cljs.core._write.call(null, writer__3815__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(C) {
  C.cljsIsDirty = true;
  return reagent.impl.batching.render_queue.queue_render(C);
};
reagent.impl.batching.mark_rendered = function mark_rendered(C) {
  return C.cljsIsDirty = false;
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(C) {
  var and__3215__auto__ = !(C == null);
  if (and__3215__auto__) {
    var and__3215__auto____$1 = C["props"];
    if (cljs.core.truth_(and__3215__auto____$1)) {
      return C["props"]["cljsArgv"];
    } else {
      return and__3215__auto____$1;
    }
  } else {
    return and__3215__auto__;
  }
};
reagent.impl.batching.run_reactively = function run_reactively(C, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, C))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "C", "C", 1466901940, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, C);
  var rat = C.cljsRatom;
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, C);
    var derefed = reagent.ratom.captured.call(null, C);
    if (!(derefed == null)) {
      C.cljsRatom = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, C);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(C) {
  var ratom_4760 = C.cljsRatom;
  if (!(ratom_4760 == null)) {
    reagent.ratom.dispose_BANG_.call(null, ratom_4760);
  } else {
  }
  return reagent.impl.batching.mark_rendered.call(null, C);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.cljs_state = "cljsState";
reagent.impl.component.cljs_render = "cljsRender";
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$[reagent.impl.component.cljs_state];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$[reagent.impl.component.cljs_state] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.state = function state(this$) {
  return cljs.core.deref.call(null, reagent.impl.component.state_atom.call(null, this$));
};
reagent.impl.component.replace_state = function replace_state(this$, new_state) {
  return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), new_state);
};
reagent.impl.component.set_state = function set_state(this$, new_state) {
  return cljs.core.swap_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.impl.component.do_render = function do_render(C) {
  var _STAR_current_component_STAR_4738 = reagent.impl.component._STAR_current_component_STAR_;
  try {
    reagent.impl.component._STAR_current_component_STAR_ = C;
    var f = C[reagent.impl.component.cljs_render];
    var _ = reagent.impl.util.clj_ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "clj-ifn?", "util/clj-ifn?", 259370460, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = reagent.impl.util.js_props.call(null, C);
    var res = C["componentFunction"] == null ? f.call(null, C) : function() {
      var argv = p[reagent.impl.util.cljs_argv];
      var n = cljs.core.count.call(null, argv);
      var G__4739 = n;
      switch(G__4739) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return C.asComponent(res, p[reagent.impl.util.cljs_level]);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        C[reagent.impl.component.cljs_render] = res;
        return do_render.call(null, C);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_4738;
  }
};
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__4742 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__4742) {
    case "componentWillUnmount":
      return function(G__4742) {
        return function() {
          var C = this;
          reagent.impl.batching.dispose.call(null, C);
          if (f == null) {
            return null;
          } else {
            return f.call(null, C);
          }
        };
      }(G__4742);
      break;
    case "componentDidUpdate":
      return function(G__4742) {
        return function(oldprops) {
          var C = this;
          var old_argv = oldprops[reagent.impl.util.cljs_argv];
          return f.call(null, C, old_argv);
        };
      }(G__4742);
      break;
    case "componentWillUpdate":
      return function(G__4742) {
        return function(nextprops) {
          var C = this;
          var next_argv = nextprops[reagent.impl.util.cljs_argv];
          return f.call(null, C, next_argv);
        };
      }(G__4742);
      break;
    case "shouldComponentUpdate":
      return function(G__4742) {
        return function(nextprops, nextstate) {
          var C = this;
          var inprops = reagent.impl.util.js_props.call(null, C);
          var old_argv = inprops[reagent.impl.util.cljs_argv];
          var new_argv = nextprops[reagent.impl.util.cljs_argv];
          if (f == null) {
            return cljs.core.not.call(null, reagent.impl.util.equal_args.call(null, old_argv, new_argv));
          } else {
            return f.call(null, C, old_argv, new_argv);
          }
        };
      }(G__4742);
      break;
    case "componentWillReceiveProps":
      return function(G__4742) {
        return function(props) {
          var C = this;
          return f.call(null, C, props[reagent.impl.util.cljs_argv]);
        };
      }(G__4742);
      break;
    case "getInitialState":
      return function(G__4742) {
        return function() {
          var C = this;
          return reagent.impl.component.set_state.call(null, C, f.call(null, C));
        };
      }(G__4742);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__4744__delegate = function(args) {
        var C = this;
        return cljs.core.apply.call(null, f, C, args);
      };
      var G__4744 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4745__i = 0, G__4745__a = new Array(arguments.length - 0);
          while (G__4745__i < G__4745__a.length) {
            G__4745__a[G__4745__i] = arguments[G__4745__i + 0];
            ++G__4745__i;
          }
          args = new cljs.core.IndexedSeq(G__4745__a, 0);
        }
        return G__4744__delegate.call(this, args);
      };
      G__4744.cljs$lang$maxFixedArity = 0;
      G__4744.cljs$lang$applyTo = function(arglist__4746) {
        var args = cljs.core.seq(arglist__4746);
        return G__4744__delegate(args);
      };
      G__4744.cljs$core$IFn$_invoke$arity$variadic = G__4744__delegate;
      return G__4744;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    var G__4748 = f;
    G__4748["__reactDontBind"] = true;
    return G__4748;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3215__auto__ = wrap;
      if (cljs.core.truth_(and__3215__auto__)) {
        return f;
      } else {
        return and__3215__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3227__auto__ = wrap;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f) {
  return cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), cljs.core.truth_(reagent.impl.util.is_client) ? function() {
    var C = this;
    return reagent.impl.batching.run_reactively.call(null, C, function(C) {
      return function() {
        return reagent.impl.component.do_render.call(null, C);
      };
    }(C));
  } : function() {
    var C = this;
    return reagent.impl.component.do_render.call(null, C);
  });
};
reagent.impl.component.wrap_funs = function wrap_funs(fun_map) {
  var render_fun = function() {
    var or__3227__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = reagent.impl.util.clj_ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "clj-ifn?", "util/clj-ifn?", 259370460, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = function() {
    var or__3227__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      var or__3227__auto____$1 = render_fun.displayName;
      if (cljs.core.truth_(or__3227__auto____$1)) {
        return or__3227__auto____$1;
      } else {
        return render_fun.name;
      }
    }
  }();
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun);
  return cljs.core.reduce_kv.call(null, function(render_fun, _, name, name_SINGLEQUOTE_, fmap) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(render_fun, _, name, name_SINGLEQUOTE_, fmap), cljs.core.PersistentArrayMap.EMPTY, fmap);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__4750 = o;
    G__4750[cljs.core.name.call(null, k)] = v;
    return G__4750;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body, as_component) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var _ = spec.asComponent = reagent.impl.component.dont_bind.call(null, as_component);
  var res = reagent.impl.util.React.createClass(spec);
  var f = function(spec, _, res) {
    return function() {
      var G__4751__delegate = function(args) {
        return as_component.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__4751 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4752__i = 0, G__4752__a = new Array(arguments.length - 0);
          while (G__4752__i < G__4752__a.length) {
            G__4752__a[G__4752__i] = arguments[G__4752__i + 0];
            ++G__4752__i;
          }
          args = new cljs.core.IndexedSeq(G__4752__a, 0);
        }
        return G__4751__delegate.call(this, args);
      };
      G__4751.cljs$lang$maxFixedArity = 0;
      G__4751.cljs$lang$applyTo = function(arglist__4753) {
        var args = cljs.core.seq(arglist__4753);
        return G__4751__delegate(args);
      };
      G__4751.cljs$core$IFn$_invoke$arity$variadic = G__4751__delegate;
      return G__4751;
    }();
  }(spec, _, res);
  f.cljsReactClass = res;
  res.cljsReactClass = res;
  return f;
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.DOM = reagent.impl.util.React["DOM"];
reagent.impl.template.attr_aliases = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "className", new cljs.core.Keyword(null, "for", "for", -1323786319), "htmlFor", new cljs.core.Keyword(null, "charset", "charset", -1063822193), "charSet"], null);
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || reagent.impl.util.clj_ifn_QMARK_.call(null, x);
};
reagent.impl.template.to_js_val = function to_js_val(v) {
  if (!cljs.core.ifn_QMARK_.call(null, v)) {
    return v;
  } else {
    if (v instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, v);
    } else {
      if (v instanceof cljs.core.Symbol) {
        return[cljs.core.str(v)].join("");
      } else {
        if (cljs.core.coll_QMARK_.call(null, v)) {
          return cljs.core.clj__GT_js.call(null, v);
        } else {
          return function() {
            var G__4763__delegate = function(args) {
              return cljs.core.apply.call(null, v, args);
            };
            var G__4763 = function(var_args) {
              var args = null;
              if (arguments.length > 0) {
                var G__4764__i = 0, G__4764__a = new Array(arguments.length - 0);
                while (G__4764__i < G__4764__a.length) {
                  G__4764__a[G__4764__i] = arguments[G__4764__i + 0];
                  ++G__4764__i;
                }
                args = new cljs.core.IndexedSeq(G__4764__a, 0);
              }
              return G__4763__delegate.call(this, args);
            };
            G__4763.cljs$lang$maxFixedArity = 0;
            G__4763.cljs$lang$applyTo = function(arglist__4765) {
              var args = cljs.core.seq(arglist__4765);
              return G__4763__delegate(args);
            };
            G__4763.cljs$core$IFn$_invoke$arity$variadic = G__4763__delegate;
            return G__4763;
          }();
        }
      }
    }
  }
};
reagent.impl.template.undash_prop_name = function undash_prop_name(n) {
  var or__3227__auto__ = reagent.impl.template.attr_aliases.call(null, n);
  if (cljs.core.truth_(or__3227__auto__)) {
    return or__3227__auto__;
  } else {
    return reagent.impl.util.dash_to_camel.call(null, n);
  }
};
reagent.impl.template.cached_prop_name = reagent.impl.util.memoize_1.call(null, reagent.impl.template.undash_prop_name);
reagent.impl.template.cached_style_name = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.template.convert_prop_value = function convert_prop_value(val) {
  if (cljs.core.map_QMARK_.call(null, val)) {
    return cljs.core.reduce_kv.call(null, function(res, k, v) {
      var G__4767 = res;
      G__4767[reagent.impl.template.cached_prop_name.call(null, k)] = reagent.impl.template.to_js_val.call(null, v);
      return G__4767;
    }, {}, val);
  } else {
    return reagent.impl.template.to_js_val.call(null, val);
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, p__4768) {
  var vec__4770 = p__4768;
  var id = cljs.core.nth.call(null, vec__4770, 0, null);
  var class$ = cljs.core.nth.call(null, vec__4770, 1, null);
  var pid = props["id"];
  props["id"] = !(pid == null) ? pid : id;
  if (class$ == null) {
    return null;
  } else {
    return props["className"] = function() {
      var old = props["className"];
      if (!(old == null)) {
        return[cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old)].join("");
      } else {
        return class$;
      }
    }();
  }
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  if (cljs.core.empty_QMARK_.call(null, props) && id_class == null) {
    return null;
  } else {
    if (cljs.core.type.call(null, props) === Object) {
      return props;
    } else {
      var objprops = cljs.core.reduce_kv.call(null, function(o, k, v) {
        var pname_4771 = reagent.impl.template.cached_prop_name.call(null, k);
        if (!(pname_4771 === "key")) {
          o[pname_4771] = reagent.impl.template.convert_prop_value.call(null, v);
        } else {
        }
        return o;
      }, {}, props);
      if (id_class == null) {
      } else {
        reagent.impl.template.set_id_class.call(null, objprops, id_class);
      }
      return objprops;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  reagent.impl.batching.queue_render.call(null, this$);
  return res;
};
reagent.impl.template.input_did_update = function input_did_update(this$) {
  var value = this$.cljsInputValue;
  if (value == null) {
    return null;
  } else {
    var node = this$.getDOMNode();
    if (cljs.core.not_EQ_.call(null, value, node.value)) {
      return node.value = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  var on_change = jsprops["onChange"];
  var value = on_change == null ? null : jsprops["value"];
  this$.cljsInputValue = value;
  if (value == null) {
    return null;
  } else {
    reagent.impl.batching.mark_rendered.call(null, this$);
    var G__4774 = jsprops;
    G__4774["defaultValue"] = value;
    G__4774["value"] = null;
    G__4774["onChange"] = function(G__4774, on_change, value) {
      return function(p1__4772_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__4772_SHARP_);
      };
    }(G__4774, on_change, value);
    return G__4774;
  }
};
reagent.impl.template.input_components = cljs.core.PersistentHashSet.fromArray([reagent.impl.template.DOM["input"], reagent.impl.template.DOM["textarea"]], true);
reagent.impl.template.wrapped_render = function wrapped_render(this$, comp, id_class, input_setup) {
  var inprops = reagent.impl.util.js_props.call(null, this$);
  var argv = inprops[reagent.impl.util.cljs_argv];
  var props = cljs.core.nth.call(null, argv, 1, null);
  var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
  var jsargs = reagent.impl.template.convert_args.call(null, argv, hasprops ? 2 : 1, inprops[reagent.impl.util.cljs_level] + 1);
  var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, id_class);
  if (input_setup == null) {
  } else {
    input_setup.call(null, this$, jsprops);
  }
  jsargs[0] = jsprops;
  return comp.apply(null, jsargs);
};
reagent.impl.template.wrapped_should_update = function wrapped_should_update(C, nextprops, nextstate) {
  var inprops = reagent.impl.util.js_props.call(null, C);
  var a1 = inprops[reagent.impl.util.cljs_argv];
  var a2 = nextprops[reagent.impl.util.cljs_argv];
  return cljs.core.not.call(null, reagent.impl.util.equal_args.call(null, a1, a2));
};
reagent.impl.template.add_input_methods = function add_input_methods(spec) {
  var G__4776 = spec;
  G__4776["componentDidUpdate"] = function(G__4776) {
    return function() {
      var C = this;
      return reagent.impl.template.input_did_update.call(null, C);
    };
  }(G__4776);
  G__4776["componentWillUnmount"] = function(G__4776) {
    return function() {
      var C = this;
      return reagent.impl.batching.dispose.call(null, C);
    };
  }(G__4776);
  return G__4776;
};
reagent.impl.template.wrap_component = function wrap_component(comp, extras, name) {
  var input_QMARK_ = reagent.impl.template.input_components.call(null, comp);
  var input_setup = cljs.core.truth_(input_QMARK_) ? reagent.impl.template.input_render_setup : null;
  var spec = {"displayName":function() {
    var or__3227__auto__ = name;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return "ComponentWrapper";
    }
  }(), "shouldComponentUpdate":function(input_QMARK_, input_setup) {
    return function(p1__4777_SHARP_, p2__4778_SHARP_) {
      var C = this;
      return reagent.impl.template.wrapped_should_update.call(null, C, p1__4777_SHARP_, p2__4778_SHARP_);
    };
  }(input_QMARK_, input_setup), "render":function(input_QMARK_, input_setup) {
    return function() {
      var C = this;
      return reagent.impl.template.wrapped_render.call(null, C, comp, extras, input_setup);
    };
  }(input_QMARK_, input_setup)};
  if (cljs.core.truth_(input_QMARK_)) {
    reagent.impl.template.add_input_methods.call(null, spec);
  } else {
  }
  return reagent.impl.util.React.createClass(spec);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__4780 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__4780, 0, null);
  var id = cljs.core.nth.call(null, vec__4780, 1, null);
  var class$ = cljs.core.nth.call(null, vec__4780, 2, null);
  var comp = reagent.impl.template.DOM[tag];
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(comp)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Unknown tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "comp", "comp", -1462482139, null)))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, cljs.core.truth_(function() {
    var or__3227__auto__ = id;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return class_SINGLEQUOTE_;
    }
  }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, class_SINGLEQUOTE_], null) : null], null);
};
reagent.impl.template.get_wrapper = function get_wrapper(tag) {
  var vec__4782 = reagent.impl.template.parse_tag.call(null, tag);
  var comp = cljs.core.nth.call(null, vec__4782, 0, null);
  var id_class = cljs.core.nth.call(null, vec__4782, 1, null);
  return reagent.impl.template.wrap_component.call(null, comp, id_class, [cljs.core.str(tag)].join(""));
};
reagent.impl.template.cached_wrapper = reagent.impl.util.memoize_1.call(null, reagent.impl.template.get_wrapper);
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), f);
  var res = reagent.impl.template.create_class.call(null, withrender);
  var wrapf = res.cljsReactClass;
  f.cljsReactClass = wrapf;
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, tag)) {
    return reagent.impl.template.cached_wrapper.call(null, tag);
  } else {
    var cached_class = tag.cljsReactClass;
    if (!(cached_class == null)) {
      return cached_class;
    } else {
      if (cljs.core.truth_(reagent.impl.util.React.isValidClass(tag))) {
        return tag.cljsReactClass = reagent.impl.template.wrap_component.call(null, tag, null, null);
      } else {
        return reagent.impl.template.fn_to_class.call(null, tag);
      }
    }
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_comp = function vec_to_comp(v, level) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Hiccup form should not be empty"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))))].join(""));
  }
  if (reagent.impl.template.valid_tag_QMARK_.call(null, cljs.core.nth.call(null, v, 0))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), cljs.core.list(new cljs.core.Symbol(null, "nth", "nth", 1529209554, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), 0))))].join(""));
  }
  var c = reagent.impl.template.as_class.call(null, cljs.core.nth.call(null, v, 0));
  var jsprops = function() {
    var obj4786 = {};
    obj4786[reagent.impl.util.cljs_argv] = v;
    obj4786[reagent.impl.util.cljs_level] = level;
    return obj4786;
  }();
  var k_4787 = reagent.impl.template.get_key.call(null, cljs.core.meta.call(null, v));
  var k_SINGLEQUOTE__4788 = k_4787 == null ? reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null)) : k_4787;
  if (k_SINGLEQUOTE__4788 == null) {
  } else {
    jsprops["key"] = k_SINGLEQUOTE__4788;
  }
  return c.call(null, jsprops);
};
reagent.impl.template.tmp = {};
reagent.impl.template.warn_on_deref = function warn_on_deref(x) {
  if (cljs.core.truth_(reagent.impl.template.tmp.warned)) {
    return null;
  } else {
    if (!(console.log == null)) {
      console.log("Warning: Reactive deref not supported in seq in ", cljs.core.pr_str.call(null, x));
    } else {
    }
    return reagent.impl.template.tmp.warned = true;
  }
};
reagent.impl.template.as_component = function() {
  var as_component = null;
  var as_component__1 = function(x) {
    return as_component.call(null, x, 0);
  };
  var as_component__2 = function(x, level) {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_comp.call(null, x, level);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        if (!(true && reagent.ratom._STAR_ratom_context_STAR_ == null)) {
          return reagent.impl.template.expand_seq.call(null, x, level);
        } else {
          var s = reagent.ratom.capture_derefed.call(null, function() {
            return reagent.impl.template.expand_seq.call(null, x, level);
          }, reagent.impl.template.tmp);
          if (cljs.core.truth_(reagent.ratom.captured.call(null, reagent.impl.template.tmp))) {
            reagent.impl.template.warn_on_deref.call(null, x);
          } else {
          }
          return s;
        }
      } else {
        return x;
      }
    }
  };
  as_component = function(x, level) {
    switch(arguments.length) {
      case 1:
        return as_component__1.call(this, x);
      case 2:
        return as_component__2.call(this, x, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_component.cljs$core$IFn$_invoke$arity$1 = as_component__1;
  as_component.cljs$core$IFn$_invoke$arity$2 = as_component__2;
  return as_component;
}();
reagent.impl.template.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec, reagent.impl.template.as_component);
};
reagent.impl.template.expand_seq = function expand_seq(s, level) {
  var a = cljs.core.into_array.call(null, s);
  var level_SINGLEQUOTE_ = level + 1;
  var n__4114__auto___4789 = a.length;
  var i_4790 = 0;
  while (true) {
    if (i_4790 < n__4114__auto___4789) {
      a[i_4790] = reagent.impl.template.as_component.call(null, a[i_4790], level_SINGLEQUOTE_);
      var G__4791 = i_4790 + 1;
      i_4790 = G__4791;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.convert_args = function convert_args(argv, first_child, level) {
  var a = cljs.core.into_array.call(null, argv);
  var n__4114__auto___4792 = a.length;
  var i_4793 = 0;
  while (true) {
    if (i_4793 < n__4114__auto___4792) {
      if (i_4793 >= first_child) {
        a[i_4793] = reagent.impl.template.as_component.call(null, a[i_4793], level);
      } else {
      }
      var G__4794 = i_4793 + 1;
      i_4793 = G__4794;
      continue;
    } else {
    }
    break;
  }
  if (first_child === 2) {
    a.shift();
  } else {
  }
  return a;
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.ratom");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
reagent.core.React = reagent.impl.util.React;
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.as_component = function as_component(form) {
  return reagent.impl.template.as_component.call(null, form);
};
reagent.core.render_component = function() {
  var render_component = null;
  var render_component__2 = function(comp, container) {
    return render_component.call(null, comp, container, null);
  };
  var render_component__3 = function(comp, container, callback) {
    return reagent.core.React.renderComponent(reagent.core.as_component.call(null, comp), container, callback);
  };
  render_component = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render_component__2.call(this, comp, container);
      case 3:
        return render_component__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_component.cljs$core$IFn$_invoke$arity$2 = render_component__2;
  render_component.cljs$core$IFn$_invoke$arity$3 = render_component__3;
  return render_component;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.core.React.unmountComponentAtNode(container);
};
reagent.core.render_component_to_string = function render_component_to_string(component) {
  return reagent.core.React.renderComponentToString(reagent.core.as_component.call(null, component));
};
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.template.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state.call(null, this$);
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.replace_state.call(null, this$, new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.set_state.call(null, this$, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$.getDOMNode();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__4727__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__4727 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__4728__i = 0, G__4728__a = new Array(arguments.length - 1);
        while (G__4728__i < G__4728__a.length) {
          G__4728__a[G__4728__i] = arguments[G__4728__i + 1];
          ++G__4728__i;
        }
        rest = new cljs.core.IndexedSeq(G__4728__a, 0);
      }
      return G__4727__delegate.call(this, x, rest);
    };
    G__4727.cljs$lang$maxFixedArity = 1;
    G__4727.cljs$lang$applyTo = function(arglist__4729) {
      var x = cljs.core.first(arglist__4729);
      var rest = cljs.core.rest(arglist__4729);
      return G__4727__delegate(x, rest);
    };
    G__4727.cljs$core$IFn$_invoke$arity$variadic = G__4727__delegate;
    return G__4727;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__4730 = null;
        if (arguments.length > 1) {
          var G__4731__i = 0, G__4731__a = new Array(arguments.length - 1);
          while (G__4731__i < G__4731__a.length) {
            G__4731__a[G__4731__i] = arguments[G__4731__i + 1];
            ++G__4731__i;
          }
          G__4730 = new cljs.core.IndexedSeq(G__4731__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__4730);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__4732__i = 0, G__4732__a = new Array(arguments.length - 1);
      while (G__4732__i < G__4732__a.length) {
        G__4732__a[G__4732__i] = arguments[G__4732__i + 1];
        ++G__4732__i;
      }
      args = new cljs.core.IndexedSeq(G__4732__a, 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__4733) {
    var f = cljs.core.first(arglist__4733);
    var args = cljs.core.rest(arglist__4733);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return[cljs.core.str(x)].join("");
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", -1170142052);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", -1170142052));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_11114 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_11114;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name)), cljs.core.str('\x3d"'), cljs.core.str(hiccups.runtime.escape_html.call(null, value)), cljs.core.str('"')].join("");
};
hiccups.runtime.render_attribute = function render_attribute(p__11115) {
  var vec__11117 = p__11115;
  var name = cljs.core.nth.call(null, vec__11117, 0, null);
  var value = cljs.core.nth.call(null, vec__11117, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name))].join("");
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      return hiccups.runtime.xml_attribute.call(null, name, value);
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__11118) {
  var vec__11121 = p__11118;
  var tag = cljs.core.nth.call(null, vec__11121, 0, null);
  var content = cljs.core.nthnext.call(null, vec__11121, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw[cljs.core.str(tag), cljs.core.str(" is not a valid tag name")].join("");
  } else {
  }
  var vec__11122 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__11122, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__11122, 1, null);
  var id = cljs.core.nth.call(null, vec__11122, 2, null);
  var class$ = cljs.core.nth.call(null, vec__11122, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__11124 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__11124, 0, null);
  var attrs = cljs.core.nth.call(null, vec__11124, 1, null);
  var content = cljs.core.nth.call(null, vec__11124, 2, null);
  if (cljs.core.truth_(function() {
    var or__3227__auto__ = content;
    if (cljs.core.truth_(or__3227__auto__)) {
      return or__3227__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return[cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, content)), cljs.core.str("\x3c/"), cljs.core.str(tag), cljs.core.str("\x3e")].join("");
  } else {
    return[cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str(hiccups.runtime.end_tag.call(null))].join("");
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      return hiccups.runtime.as_str.call(null, x);
    }
  }
};
goog.provide("json_html.core");
goog.require("cljs.core");
goog.require("hiccups.runtime");
goog.require("clojure.string");
json_html.core.escape_html = function escape_html(s) {
  return clojure.string.escape.call(null, s, new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3e", "\x26gt;", "\x3c", "\x26lt;", '"', "\x26quot;"], null));
};
json_html.core.render_collection = function render_collection(col) {
  if (cljs.core.empty_QMARK_.call(null, col)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.jh-type-object", "div.jh-type-object", 1704701538), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-empty-collection", "span.jh-empty-collection", -107581393)], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table.jh-type-object", "table.jh-type-object", -163995322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), function() {
      var iter__3983__auto__ = function iter__11070(s__11071) {
        return new cljs.core.LazySeq(null, function() {
          var s__11071__$1 = s__11071;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__11071__$1);
            if (temp__4126__auto__) {
              var s__11071__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__11071__$2)) {
                var c__3981__auto__ = cljs.core.chunk_first.call(null, s__11071__$2);
                var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
                var b__11073 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
                if (function() {
                  var i__11072 = 0;
                  while (true) {
                    if (i__11072 < size__3982__auto__) {
                      var vec__11076 = cljs.core._nth.call(null, c__3981__auto__, i__11072);
                      var i = cljs.core.nth.call(null, vec__11076, 0, null);
                      var v = cljs.core.nth.call(null, vec__11076, 1, null);
                      cljs.core.chunk_append.call(null, b__11073, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th.jh-key.jh-array-key", "th.jh-key.jh-array-key", -1623829832), i], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
                      "td.jh-value.jh-array-value", "td.jh-value.jh-array-value", 1645079212), json_html.core.render.call(null, v)], null)], null));
                      var G__11078 = i__11072 + 1;
                      i__11072 = G__11078;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11073), iter__11070.call(null, cljs.core.chunk_rest.call(null, s__11071__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11073), null);
                }
              } else {
                var vec__11077 = cljs.core.first.call(null, s__11071__$2);
                var i = cljs.core.nth.call(null, vec__11077, 0, null);
                var v = cljs.core.nth.call(null, vec__11077, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th.jh-key.jh-array-key", "th.jh-key.jh-array-key", -1623829832), i], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td.jh-value.jh-array-value", 
                "td.jh-value.jh-array-value", 1645079212), json_html.core.render.call(null, v)], null)], null), iter__11070.call(null, cljs.core.rest.call(null, s__11071__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__3983__auto__.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, col));
    }()], null)], null);
  }
};
json_html.core.render_set = function render_set(s) {
  if (cljs.core.empty_QMARK_.call(null, s)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.jh-type-set", "div.jh-type-set", -367189823), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-empty-set", "span.jh-empty-set", -1364654969)], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
      var iter__3983__auto__ = function iter__11083(s__11084) {
        return new cljs.core.LazySeq(null, function() {
          var s__11084__$1 = s__11084;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__11084__$1);
            if (temp__4126__auto__) {
              var s__11084__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__11084__$2)) {
                var c__3981__auto__ = cljs.core.chunk_first.call(null, s__11084__$2);
                var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
                var b__11086 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
                if (function() {
                  var i__11085 = 0;
                  while (true) {
                    if (i__11085 < size__3982__auto__) {
                      var item = cljs.core._nth.call(null, c__3981__auto__, i__11085);
                      cljs.core.chunk_append.call(null, b__11086, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.jh-value", "li.jh-value", -344939266), json_html.core.render.call(null, item)], null));
                      var G__11087 = i__11085 + 1;
                      i__11085 = G__11087;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11086), iter__11083.call(null, cljs.core.chunk_rest.call(null, s__11084__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11086), null);
                }
              } else {
                var item = cljs.core.first.call(null, s__11084__$2);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.jh-value", "li.jh-value", -344939266), json_html.core.render.call(null, item)], null), iter__11083.call(null, cljs.core.rest.call(null, s__11084__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__3983__auto__.call(null, s);
    }()], null);
  }
};
json_html.core.render_map = function render_map(m) {
  if (cljs.core.empty_QMARK_.call(null, m)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.jh-type-object", "div.jh-type-object", 1704701538), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-empty-map", "span.jh-empty-map", -2061532971)], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table.jh-type-object", "table.jh-type-object", -163995322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), function() {
      var iter__3983__auto__ = function iter__11096(s__11097) {
        return new cljs.core.LazySeq(null, function() {
          var s__11097__$1 = s__11097;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__11097__$1);
            if (temp__4126__auto__) {
              var s__11097__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__11097__$2)) {
                var c__3981__auto__ = cljs.core.chunk_first.call(null, s__11097__$2);
                var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
                var b__11099 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
                if (function() {
                  var i__11098 = 0;
                  while (true) {
                    if (i__11098 < size__3982__auto__) {
                      var vec__11102 = cljs.core._nth.call(null, c__3981__auto__, i__11098);
                      var k = cljs.core.nth.call(null, vec__11102, 0, null);
                      var v = cljs.core.nth.call(null, vec__11102, 1, null);
                      cljs.core.chunk_append.call(null, b__11099, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th.jh-key.jh-object-key", "th.jh-key.jh-object-key", 1382268279), cljs.core.name.call(null, k)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                      [new cljs.core.Keyword(null, "td.jh-value.jh-object-value", "td.jh-value.jh-object-value", -2080818691), json_html.core.render.call(null, v)], null)], null));
                      var G__11104 = i__11098 + 1;
                      i__11098 = G__11104;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11099), iter__11096.call(null, cljs.core.chunk_rest.call(null, s__11097__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11099), null);
                }
              } else {
                var vec__11103 = cljs.core.first.call(null, s__11097__$2);
                var k = cljs.core.nth.call(null, vec__11103, 0, null);
                var v = cljs.core.nth.call(null, vec__11103, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th.jh-key.jh-object-key", "th.jh-key.jh-object-key", 1382268279), cljs.core.name.call(null, k)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
                "td.jh-value.jh-object-value", "td.jh-value.jh-object-value", -2080818691), json_html.core.render.call(null, v)], null)], null), iter__11096.call(null, cljs.core.rest.call(null, s__11097__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__3983__auto__.call(null, m);
    }()], null)], null);
  }
};
json_html.core.render_string = function render_string(s) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-string", "span.jh-type-string", -94106783), cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-empty-string", "span.jh-empty-string", 1227187446)], null) : json_html.core.escape_html.call(null, s)], null);
};
json_html.core.render = function render(v) {
  var t = cljs.core.type.call(null, v);
  if (cljs.core._EQ_.call(null, t, cljs.core.Keyword)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-string", "span.jh-type-string", -94106783), cljs.core.name.call(null, v)], null);
  } else {
    if (cljs.core._EQ_.call(null, t, String)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-string", "span.jh-type-string", -94106783), json_html.core.escape_html.call(null, v)], null);
    } else {
      if (cljs.core._EQ_.call(null, t, Date)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-date", "span.jh-type-date", -1243309956), v.toString()], null);
      } else {
        if (cljs.core._EQ_.call(null, t, Boolean)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-bool", "span.jh-type-bool", 53751640), v], null);
        } else {
          if (cljs.core._EQ_.call(null, t, Number)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.jh-type-number", "span.jh-type-number", 1495617844), v], null);
          } else {
            if (function() {
              var G__11108 = v;
              if (G__11108) {
                var bit__3908__auto__ = G__11108.cljs$lang$protocol_mask$partition0$ & 1024;
                if (bit__3908__auto__ || G__11108.cljs$core$IMap$) {
                  return true;
                } else {
                  if (!G__11108.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11108);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11108);
              }
            }()) {
              return json_html.core.render_map.call(null, v);
            } else {
              if (function() {
                var G__11109 = v;
                if (G__11109) {
                  var bit__3908__auto__ = G__11109.cljs$lang$protocol_mask$partition0$ & 4096;
                  if (bit__3908__auto__ || G__11109.cljs$core$ISet$) {
                    return true;
                  } else {
                    if (!G__11109.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11109);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11109);
                }
              }()) {
                return json_html.core.render_set.call(null, v);
              } else {
                if (function() {
                  var G__11110 = v;
                  if (G__11110) {
                    var bit__3908__auto__ = G__11110.cljs$lang$protocol_mask$partition0$ & 8;
                    if (bit__3908__auto__ || G__11110.cljs$core$ICollection$) {
                      return true;
                    } else {
                      if (!G__11110.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11110);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11110);
                  }
                }()) {
                  return json_html.core.render_collection.call(null, v);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
json_html.core.edn__GT_hiccup = function edn__GT_hiccup(edn) {
  return json_html.core.render.call(null, edn);
};
json_html.core.edn__GT_html = function edn__GT_html(edn) {
  return[cljs.core.str(hiccups.runtime.render_html.call(null, json_html.core.edn__GT_hiccup.call(null, edn)))].join("");
};
json_html.core.json__GT_hiccup = function json__GT_hiccup(json) {
  return json_html.core.render.call(null, cljs.core.js__GT_clj.call(null, json));
};
json_html.core.json__GT_html = function json__GT_html(json) {
  return[cljs.core.str(hiccups.runtime.render_html.call(null, json_html.core.json__GT_hiccup.call(null, json)))].join("");
};
goog.provide("spcr.core");
goog.require("cljs.core");
goog.require("json_html.core");
goog.require("clojure.string");
goog.require("ajax.core");
goog.require("reagent.core");
cljs.core.enable_console_print_BANG_.call(null);
spcr.core.state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "raw-data", "raw-data", 617791828), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "filter", "filter", -948537934), null, new cljs.core.Keyword(null, "data-view", "data-view", 2142900612), cljs.core.PersistentVector.EMPTY], null));
spcr.core.get_data = function get_data() {
  return ajax.core.GET.call(null, "/label", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "format", "format", -1306924766), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "handler", "handler", -195596612), function(raw_data) {
    cljs.core.swap_BANG_.call(null, spcr.core.state, function(p1__4478_SHARP_) {
      return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__4478_SHARP_, new cljs.core.Keyword(null, "raw-data", "raw-data", 617791828), raw_data), new cljs.core.Keyword(null, "data-view", "data-view", 2142900612), raw_data);
    });
    return window.setTimeout(function() {
      return $("#main-table").DataTable();
    }, 300);
  }], null));
};
spcr.core.list_items = function list_items(items) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), clojure.string.join.call(null, ", ", items)], null);
};
spcr.core.table_row = function table_row(headers, row) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), function() {
    var iter__3983__auto__ = function iter__4483(s__4484) {
      return new cljs.core.LazySeq(null, function() {
        var s__4484__$1 = s__4484;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__4484__$1);
          if (temp__4126__auto__) {
            var s__4484__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__4484__$2)) {
              var c__3981__auto__ = cljs.core.chunk_first.call(null, s__4484__$2);
              var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
              var b__4486 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
              if (function() {
                var i__4485 = 0;
                while (true) {
                  if (i__4485 < size__3982__auto__) {
                    var h = cljs.core._nth.call(null, c__3981__auto__, i__4485);
                    cljs.core.chunk_append.call(null, b__4486, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.coll_QMARK_.call(null, row.call(null, h)) ? spcr.core.list_items.call(null, row.call(null, h)) : [cljs.core.str(row.call(null, h))].join("")], null));
                    var G__4487 = i__4485 + 1;
                    i__4485 = G__4487;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4486), iter__4483.call(null, cljs.core.chunk_rest.call(null, s__4484__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4486), null);
              }
            } else {
              var h = cljs.core.first.call(null, s__4484__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.coll_QMARK_.call(null, row.call(null, h)) ? spcr.core.list_items.call(null, row.call(null, h)) : [cljs.core.str(row.call(null, h))].join("")], null), iter__4483.call(null, cljs.core.rest.call(null, s__4484__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__3983__auto__.call(null, headers);
  }()], null);
};
spcr.core.draw_table = function draw_table(data) {
  var headers = cljs.core.keys.call(null, cljs.core.first.call(null, data));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table#main-table.table.table-hover.table-bordered", "table#main-table.table.table-hover.table-bordered", -1393104542), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cell-spacing", "cell-spacing", 769666488), "0", new cljs.core.Keyword(null, "width", "width", -384071477), "100%"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), function() {
    var iter__3983__auto__ = function(headers) {
      return function iter__4496(s__4497) {
        return new cljs.core.LazySeq(null, function(headers) {
          return function() {
            var s__4497__$1 = s__4497;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__4497__$1);
              if (temp__4126__auto__) {
                var s__4497__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__4497__$2)) {
                  var c__3981__auto__ = cljs.core.chunk_first.call(null, s__4497__$2);
                  var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
                  var b__4499 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
                  if (function() {
                    var i__4498 = 0;
                    while (true) {
                      if (i__4498 < size__3982__auto__) {
                        var header = cljs.core._nth.call(null, c__3981__auto__, i__4498);
                        cljs.core.chunk_append.call(null, b__4499, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), header], null));
                        var G__4504 = i__4498 + 1;
                        i__4498 = G__4504;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4499), iter__4496.call(null, cljs.core.chunk_rest.call(null, s__4497__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4499), null);
                  }
                } else {
                  var header = cljs.core.first.call(null, s__4497__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), header], null), iter__4496.call(null, cljs.core.rest.call(null, s__4497__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(headers), null, null);
      };
    }(headers);
    return iter__3983__auto__.call(null, headers);
  }()], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), function() {
    var iter__3983__auto__ = function(headers) {
      return function iter__4500(s__4501) {
        return new cljs.core.LazySeq(null, function(headers) {
          return function() {
            var s__4501__$1 = s__4501;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__4501__$1);
              if (temp__4126__auto__) {
                var s__4501__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__4501__$2)) {
                  var c__3981__auto__ = cljs.core.chunk_first.call(null, s__4501__$2);
                  var size__3982__auto__ = cljs.core.count.call(null, c__3981__auto__);
                  var b__4503 = cljs.core.chunk_buffer.call(null, size__3982__auto__);
                  if (function() {
                    var i__4502 = 0;
                    while (true) {
                      if (i__4502 < size__3982__auto__) {
                        var row = cljs.core._nth.call(null, c__3981__auto__, i__4502);
                        cljs.core.chunk_append.call(null, b__4503, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [spcr.core.table_row, headers, row], null));
                        var G__4505 = i__4502 + 1;
                        i__4502 = G__4505;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4503), iter__4500.call(null, cljs.core.chunk_rest.call(null, s__4501__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4503), null);
                  }
                } else {
                  var row = cljs.core.first.call(null, s__4501__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [spcr.core.table_row, headers, row], null), iter__4500.call(null, cljs.core.rest.call(null, s__4501__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(headers), null, null);
      };
    }(headers);
    return iter__3983__auto__.call(null, data);
  }()], null)], null);
};
spcr.core.draw_list = function draw_list() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-sm-12", "div.col-sm-12", -1900061411), spcr.core.draw_table.call(null, (new cljs.core.Keyword(null, "data-view", "data-view", 2142900612)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, spcr.core.state)))], null);
};
spcr.core.string_contains_QMARK_ = function string_contains_QMARK_(value, pattern) {
  return[cljs.core.str(value)].join("").indexOf(pattern) > -1;
};
spcr.core.match_on_all_columns = function match_on_all_columns(filter_str) {
  return function(row) {
    return cljs.core.some.call(null, function(cell) {
      if (cljs.core.coll_QMARK_.call(null, cell)) {
        return cljs.core.some.call(null, function(p1__4506_SHARP_) {
          return spcr.core.string_contains_QMARK_.call(null, p1__4506_SHARP_, filter_str);
        }, cell);
      } else {
        return spcr.core.string_contains_QMARK_.call(null, cell, filter_str);
      }
    }, cljs.core.vals.call(null, row));
  };
};
spcr.core.match_on_label = function match_on_label(filter_str) {
  return function(p__4510) {
    var map__4511 = p__4510;
    var map__4511__$1 = cljs.core.seq_QMARK_.call(null, map__4511) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4511) : map__4511;
    var row = map__4511__$1;
    var labels = cljs.core.get.call(null, map__4511__$1, "labels");
    return cljs.core.some.call(null, function(map__4511, map__4511__$1, row, labels) {
      return function(p1__4507_SHARP_) {
        return spcr.core.string_contains_QMARK_.call(null, p1__4507_SHARP_, filter_str);
      };
    }(map__4511, map__4511__$1, row, labels), labels);
  };
};
spcr.core.handle_filter = function handle_filter(filter_str) {
  var raw_data = (new cljs.core.Keyword(null, "raw-data", "raw-data", 617791828)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, spcr.core.state));
  var filtered_data = cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, filter_str)) ? cljs.core.filter.call(null, spcr.core.match_on_all_columns.call(null, filter_str), raw_data) : raw_data;
  return cljs.core.swap_BANG_.call(null, spcr.core.state, function(raw_data, filtered_data) {
    return function(p1__4512_SHARP_) {
      return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__4512_SHARP_, new cljs.core.Keyword(null, "filter", "filter", -948537934), filter_str), new cljs.core.Keyword(null, "data-view", "data-view", 2142900612), filtered_data);
    };
  }(raw_data, filtered_data));
};
spcr.core.home_mounted = function home_mounted() {
  return $(document).ready(function() {
    return $("#main-table").DataTable();
  });
};
spcr.core.home = function home() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "All Data"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row", "div.row", 133678515), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [spcr.core.draw_list], null)], null)], null);
};
spcr.core.home_component = function home_component() {
  return reagent.core.create_class.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "component-function", "component-function", 654728922), spcr.core.home, new cljs.core.Keyword(null, "component-did-mount", "component-did-mount", -1126910518), spcr.core.home_mounted], null));
};
reagent.core.render_component.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spcr.core.home], null), document.getElementById("app"));
spcr.core.get_data.call(null);

//# sourceMappingURL=app.js.map